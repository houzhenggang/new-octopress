<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hegel2011的博客]]></title>
  <link href="http://octopresszhangyu.herokuapp.com/atom.xml" rel="self"/>
  <link href="http://octopresszhangyu.herokuapp.com/"/>
  <updated>2015-05-17T00:26:45+08:00</updated>
  <id>http://octopresszhangyu.herokuapp.com/</id>
  <author>
    <name><![CDATA[Hegel 2011]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[老罗和池建强]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/05/17/lao-luo-he-chi-jian-qiang/"/>
    <updated>2015-05-17T00:15:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/05/17/lao-luo-he-chi-jian-qiang</id>
    <content type="html"><![CDATA[<p>老罗和他的锤子手机是一直存有很大的争议，在去年<a href="http://octopresszhangyu.herokuapp.com/blog/2014/08/30/lao-luo-he-wang-zi-ru/">老罗pk刘翔</a>就显露无疑。</p>

<p>回过头来看9个月过去了，当初的判断有些是应验了：</p>

<ol>
<li>锤子手机的价格客户基本不会买账，于是3000元的售价跌了500-1000。</li>
<li>老罗赢了王自如，但不代表能赢得市场，锤子手机依然需要大规模输血。</li>
<li>老罗是个人物，继续招兵买马，虽然有点病急乱投医的意思，但意志确实坚定。</li>
<li>刘翔是只能唯雷军是从了，因为雷军已经是他的老板而不只是客户。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[地铁二号线限流与陆家嘴上海中心]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/05/05/di-tie-er-hao-xian-xian-liu-yu-lu-jia-zui-shang-hai-zhong-xin/"/>
    <updated>2015-05-05T23:05:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/05/05/di-tie-er-hao-xian-xian-liu-yu-lu-jia-zui-shang-hai-zhong-xin</id>
    <content type="html"><![CDATA[<p>微博上的<strong>上海发布</strong>公布了如下信息，大意是二号线陆家嘴站和世纪大道站将在高峰时期限流。</p>

<blockquote><p>即日起在高峰时段对江苏路、静安寺、陆家嘴、世纪大道等4站采取限流措施，包括关闭部分自动扶梯、利用限流栏杆减缓换乘速度等。</p></blockquote>

<p>对于二号线如今拥挤情况的认识我是上月外出开会才进一步感受到更加严重了。
越来越挤可以预料，挤成这样还是出乎意料。结合另一则新闻，猜测大概是这么回事情。</p>

<p>根据解放日报的<a href="http://www.jfdaily.com/shanghai/bw/201411/t20141127_998633.html">上海中心将建成全球最高观光厅</a>,</p>

<blockquote><p>今年(2014)年底前，陆家嘴地区共有9个商办楼宇项目竣工，其中陆家嘴世纪金融广场3幢办公楼等6项商办楼宇已投入使用，上海中心大厦等3项楼宇正进行装修收尾工作.</p></blockquote>

<p>这意味着包含上海中心在内，从去年下半年至今大约有9个办公楼竣工。
而且目前陆家嘴地区竣工的写字楼都不会太矮，意味着普遍是巨型的办公楼。
巨型办公楼是什么概念？</p>

<p>以上海中心为例，建筑面积433954平方米，建筑主体为118层，以人均可分配10平方米计算，
可容纳4万3千人在里面办公。官方给出的数字是3万，和我自己估算的也差不多。9个这样的大楼，
就是说新增了30万个供人办公的block，以目前的经济热度而言基本可以满员，或者会逐步爆满。
那就是说新增了30万职员在那里上班，陆家嘴站将一下子增加30万高峰客流。
即使强如上海，也没有一个区域真能一下子承担多出来的那么多客流量。</p>

<p>而一个能容纳4万人办公的大楼，只准备了2000个停车位。真的就把所有的交通压力都丢给了地铁了。如此高的密度不以为耻，反以为荣，实在令人无语。</p>

<p>我的结论很简单，二号线世纪大道、陆家嘴的限流主要是陆家嘴又有包括上海中心在内的几幢巨型商务楼竣工并陆续投入使用造成的。脱离了以人为本这个中心思想，一切最终都将没的谈。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spring 4 中的新东西]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/05/04/spring-4-zhong-de-xin-dong-xi/"/>
    <updated>2015-05-04T14:30:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/05/04/spring-4-zhong-de-xin-dong-xi</id>
    <content type="html"><![CDATA[<p>Spring还在继续提高与演进中。</p>

<h3>3.1中的新东西</h3>

<ul>
<li>environment profiles，支持development、test和production等条件下独特的配置</li>
<li>增加enable annotations，在Java文件配置中</li>
<li>Declarative caching support，像支持事务一样支持缓存</li>
<li>支持Servlet 3.0，包括在java文件中声明servlets和filters，而不仅仅是在web.xml中</li>
<li>JPA支持的提升，可以不再需要persistence.xml</li>
<li>自动绑定路径便利给model属性</li>
<li>支持对Accept和Content-Type消息头的匹配，通过@RequestMappingproduces</li>
<li>绑定部分二进制表单请求给方法参数，通过@RequestPart，比@RequestParam更强大（只能对请求参数数据绑定，key-alue格式），而@RequestPart支持如JSON、XML内容区数据的绑定</li>
<li>flash属性的支持</li>
<li>JpaTemplate和JpaDaoSupport让位于EntityManager</li>
</ul>


<h3>3.2中的新东西</h3>

<ul>
<li>支持servlet 3中的异步请求，使得一个请求可以在独立的线程中被处理，让servlet线程可以处理更多的请求</li>
<li>Spring MVC的test框架，包括RestTemplate的测试支持</li>
<li>@controllerAdvice使得@ModelAttributes等控制器的方法可以在单个类中重新组织</li>
<li>ContentNegotiatingViewResolver</li>
<li>@MatrixVariable</li>
<li>Rest方面的改进与支持</li>
</ul>


<h3>4.0中的新东西</h3>

<ul>
<li>WebSocket的支持，包括JSR-356中Java API对WebSocket的支持</li>
<li>SockJS/STOMP对WebSocket和消息模块的封装</li>
<li>Java 8 特性的应用，比如lambda。callback interface的使用变简单了，如RowMapper和JdbcTemplate</li>
<li>Java 8中的时间日期api</li>
<li>RestTemplate的一个异步版实现</li>
<li>新增对JMS 2.0 JTA 1.2， JPA 2.1的支持</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CRV]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/04/20/crv/"/>
    <updated>2015-04-20T23:22:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/04/20/crv</id>
    <content type="html"><![CDATA[<p>改款CRV终于在今天，4月20号公布售价了。东本这次还是很务实的，
发布会没有整很多没用的，简洁明了直接到位。</p>

<p>和对比配置预料的差不多，果然是2.0官降两万，2.4变化不大。不过2.4的顶配也降了1万多。</p>

<p>2.4的主力目录价没优惠肯定让一部分人失望，2.0的官降2万，基本也差不多了。</p>

<p>2.0是必须降的，这次也确实没增加什么东西。</p>

<ul>
<li>日行灯看过照片，很残废的。</li>
<li>ESP本来本田就算厚道，老款CR-V上没装的版本并不多。</li>
<li>坡道辅助是搭配CVT才需要的，如果是AT压根不需要这东西，当然不用认为是新增的。</li>
<li>这套胎压监测是纯软件实现的，当然软件也是要研发成本的，只是配给2.0也不会增加成本。</li>
</ul>


<p>所以，真真切切提高的也就只有发动机启停这一项了。再看看2.0的配置，很明显就是用来跑量的，官降2万我是觉得也差不多了。</p>

<p>其实对2.0来讲，原厂弄个雷达，再配个低分辨率的影像，就会好很多。不过这个4s估计都会加装的。
只是要原厂服务的话，就让消费者必须去选高配。
但CRV在一些不能自己改的部分，车身稳定、气囊什么的，低配也都配的很到位了。</p>

<p>我是觉得这个定价还是挺合理的。毕竟老款2.4，da屏只有顶配导航版才有，那个定价是26.28万，优惠完了也要23万以上。本来就是按23.28万左右来估计的。
不过不是每个人都像我这样不去横向比较的。因为途观和翼虎这两款坚决不要，有了天籁又不太想再考虑奇骏，毕竟还想有点新鲜感。RAV4的鼓起的后备箱地台实在不喜欢。对我来讲，现在这样的带DA屏的CRV是完全可以接受的了。不出意外，下半年的车应该就是CR-V, 2.4两驱豪华版。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新款CR-V和Q3]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/04/18/xin-kuan-crvhe-q3/"/>
    <updated>2015-04-18T15:57:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/04/18/xin-kuan-crvhe-q3</id>
    <content type="html"><![CDATA[<p>改款CR-V即将上市，最近花时间关注了一下。
首先承认新款的配置还是很吸引我的。在我看来必备的配置：倒车影像，倒车雷达，电动座椅，蓝牙usb，
这些都有了。动力组合中的发动机绝对先进，据评测和CVT搭配其声音也并不单调。
中控和前脸的效果都还令我满意。虽然价格还未公布，但以目前CR-V的销量以及整个紧凑型SUV市场竞争的激烈程度而言，
其优惠幅度很难全部取消。这也意味着价格不会比现在目录价格更高，应该是优惠收窄一些，比如收一半。。</p>

<p>但是，当和车型规格低一级、品牌高一筹的奥迪Q3相比，差价又很接近了。
而以普通上下班代步和家用标准来看，实际使用效果也相差不大。也难怪日系车在中国如今的日子不好过。
特别在乎钱的，会倾向于现代和自主品牌。而高一级的BBA价格在优惠17个点之后，
下压后的价格与日系高配版本基本重叠，必然形成很大的压力。即有点追求的车主又会去选择BBA的车子。</p>

<p>于是日系车在华实际卖出的车子，75%都是低配的。这个对品牌和车子的长远发展都是不利的。而且这个局并不好破。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小米拖线板]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/04/14/xiao-mi-tuo-xian-ban/"/>
    <updated>2015-04-14T16:59:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/04/14/xiao-mi-tuo-xian-ban</id>
    <content type="html"><![CDATA[<p>上礼拜4月8日入了一个<a href="http://www.mi.com/powerstrip/#init">小米拖线板</a>，使用近一周后来评价评价。</p>

<p>小米的这款拖线板吸引我的地方是3个做在板上的USB插口，可以提供最大每口2A的输出，3个同时工作时可以提供各1A的输出。对于现在家中主要以苹果设备为主的情况，这种配置还是很有针对性的。
买回来之后，确实可以把给pad iphone min等的充电器都收起来了。而且据说其待机的功率只有0.22w，可谓很节能环保。也确实能自动识别是何种设备，并提供相应的电流进行充电。</p>

<p>在做工和售价方面也算和目前市场主流的拖线板匹配，尽管实际拿到手里的东西感觉和小米的宣传图片还是有很大的差距。但比起公牛等，也不算差。整个还算比较小，携带还算方便。</p>

<p>说完好的，再说点不足的。
最主要的，插口数量还是有点少，毕竟算上3个usb口子，也至多算是六口的拖线板，家用的话还是有点不太够的。</p>

<p>其次，儿童安全门虽然安全了，但也过重了些，插拔相对费劲些。如果这个东西是放在单位里的，那基本没多大意义了。因为单位笔记本上的usb插口还是很多的。</p>

<p>这个产品亮点突出，但真的用起来发现还是有点不太够。考虑到49元的售价，也算值得回来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自己生产sdoc]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/04/09/zi-ji-sheng-chan-sdoc/"/>
    <updated>2015-04-09T12:26:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/04/09/zi-ji-sheng-chan-sdoc</id>
    <content type="html"><![CDATA[<p>很长时间以来，使用ruby rails查api时都喜欢用Searchable API，又称sdoc。
原先都是直接去sdoc维护的站点下载的，只是这个站点的更新频率越来越低，所提供的ruby和rails的版本也略老，于是决定自己使用sdoc的gem来生成一下。</p>

<ol>
<li><p>先安装sdoc， <code>gem install sdoc</code>, 安装完成后会新增两个可执行文件<code>sdoc</code>和<code>sdoc-merge</code></p></li>
<li><p>进入自己下载的ruby源代码的父目录，执行
<code>sdoc --main ruby-2.2.1/README.md  -x test -x example -x bin -N -x lib/rdoc  --title "Ruby 2.2" --op ~/sdocruby-2.2 ruby-2.2.1 ruby-2.2.1/README</code></p></li>
</ol>


<p>其中，ruby-2.2.1是当前rails的版本，&#8211;op指示生成的sdoc所在的目录，-x是不要去解析这些内容，运行几分钟后，文件就生成了。</p>

<p>然后把生成的目录放到自己方便的地方即可。</p>

<p>参考链接：</p>

<p><a href="http://pjkh.com/articles/building-your-own-rails-and-ruby-searchable-api-docs/">1</a>
<a href="http://pan.baidu.com/s/1i3vgC09">2 懒人下载</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[云梯]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/03/28/yun-ti/"/>
    <updated>2015-03-28T23:03:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/03/28/yun-ti</id>
    <content type="html"><![CDATA[<p>众所周知，在我国想要自由地访问互联网是有很大阻碍的。目前来讲，突破这个阻碍的方式就是vpn。
自己买vps后装vpn是最独立的方式，但成本较高，毕竟vps也不便宜。
如果购买服务的话，云梯在这方面做的还是相当出色的。</p>

<p><a href="http://datatizi.com/?r=f6301c426c6b45bb">购买链接</a>，这是通过我介绍购买的云梯链接，
有兴趣者建议可以从此入口进入。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQLMAP手记]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/03/06/sqlmapshou-ji/"/>
    <updated>2015-03-06T16:37:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/03/06/sqlmapshou-ji</id>
    <content type="html"><![CDATA[<p><a href="http://sqlmap.org/">SQLMAP</a>确实是一个神器，而<a href="http://www.binarytides.com/sqlmap-hacking-tutorial/">这篇文章</a>则从判断是什么库开始，
历经获取dbs，获取单个db中的tables，获取单个table里面的字段，直至获取每个记录每个字段的数据，做了一步一步细致的讲解。</p>

<p>其实SQLMAP的用法真的挺暴力的。基本通过穷举的办法，根据页面返回内容的变与不变来判断输入的条件是否成立，以此来断定某些信息是否存在。
很脏很暴力的做法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读书列表2015]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/02/20/to-read-list/"/>
    <updated>2015-02-20T15:40:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/02/20/to-read-list</id>
    <content type="html"><![CDATA[<h3>技术类</h3>

<ol>
<li><a href="">spring in action 4</a> 经典书籍又除了第4版，很值得一读和学习。</li>
<li><a href="">Storm分布式实时计算模式</a> 可以学习一些场景，storm是简化版的hadoop，只管计算不管存储。</li>
<li>FRW,Beck. Refactoring: Improving the Design of Existing Code,1999.</li>
<li>Eric Evans. Domain-Driven Design.</li>
<li>Beck. Smalltalk best practice patterns, 1996.</li>
<li>Donald C. Gause, Are you lights on? 1990.</li>
<li>张昊，Linux Shell编程从入门到精通。</li>
<li>Gourley D, Totty B. HTTP权威指南 O’Reilly</li>
<li>Shash D, Lazere. Out of their Minds: The Lives and Discoveries of 15 Great Computer Scientists</li>
<li>谭云杰,大象–Thinking in UML，水利水电</li>
<li>谢希仁.计算机网络，电工</li>
</ol>


<h3>经管</h3>

<ol>
<li>余江，韦尔奇，Winning（赢），中信</li>
<li>曾志尧, 35岁前要上的33堂理财课,中信</li>
<li>李笑来，把时间当做朋友</li>
<li>蔡康永，说话之道</li>
<li>高盛如何算赢世界</li>
<li>The Intelligent Investor</li>
</ol>


<h3>历史文化</h3>

<ol>
<li>[x] 哈夫纳，一个德国人的故事（哈夫纳1914~1933回忆录）。本书系统性并不强，但内容十分贴近现实，对个人的世界观冲击也较大。</li>
<li>[x] 喻大华，帝制往事。起初感觉没什么，随后越读越精彩的一本书。尤其是关于忠奸难辨、关键看领导人自己的这一段，解答了心中很久的疑惑。而对于变法及帝制合理性的解释，也很独到。让人手不释卷和想反复看的好书。</li>
</ol>


<h2>既往</h2>

<p> <a href="http://octopresszhangyu.herokuapp.com/blog/2013/01/11/to-read-list/">2013读书列表</a><br/>
 <a href="http://octopresszhangyu.herokuapp.com/blog/2014/03/02/to-read-list/">2014读书列表</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nano小卡和iphone6 plus]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/02/18/nanoxiao-qia/"/>
    <updated>2015-02-18T16:36:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/02/18/nanoxiao-qia</id>
    <content type="html"><![CDATA[<p>差不多一年前，因为用了<a href="http://octopresszhangyu.herokuapp.com/blog/2014/03/10/nubia-z5s/">nubia z5s 把sim卡剪成了micro-sim卡</a>。
而在昨天，因为几个巧合，最后我开始使用iphone6p，但这个手机又是只能用nano的，于是再次剪卡。</p>

<p>正常情况下，应该是去营业厅重新换nano卡的，但我的套餐要3月底才到期，只有到下个月才能去申请新的4G套餐。
如果现在去换卡，只能更换3G的nano卡，那么半个月后依然要去跑一趟营业厅再次换卡。两个折腾比较下来，
还是情愿自己剪卡了。</p>

<p>好在有之前的剪卡经验，依然是分两步走的方案。</p>

<ol>
<li>拨打*72189xxxxxxxx设置号呼叫转移，万一剪卡失败，则电话还能接的到</li>
<li>拿出卡，搞清楚自己的sim卡是三对六块还是四对八块，随后依照标准的nano卡大小，剪个大小类似的形状，目标是能放进卡套里</li>
<li>动手能力还行，运气也不错，新剪的卡插入后读取成功，于是拨打*720取消呼叫转移</li>
</ol>


<p>整个过程的体验还算不错。尽管下个月还要跑一趟营业厅，目前也依然只是3G网络，但好歹确实立马就用上了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[静态文件的url后缀md5化]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/01/22/jing-tai-wen-jian-de-urlhou-zhui-md5hua/"/>
    <updated>2015-01-22T09:55:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/01/22/jing-tai-wen-jian-de-urlhou-zhui-md5hua</id>
    <content type="html"><![CDATA[<p>长久以来，在jsp中引入css和JavaScript都是手工硬编的:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&#39;/toolbar/static/orderFlow/css/reset.css&#39;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;script</span> <span class="na">src=</span><span class="s">&quot;/toolbar/static/jquery/jquery.min.js&quot;</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>好处很明显，最接近实际生成的html，很直观。坏处在于重复性高，而且无法控制后台生成的随机数，这样不太利于nginx等处理静态资源的缓存。终极方案莫过于在后缀上加上md5指纹信息，这样既可以让nginx等通知浏览器长期缓存，而一旦文件发生变化也必然可以让浏览器再次发起请求获得css和JavaScript。最终生成的页面信息达到下面的效果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="nt">&lt;script</span> <span class="na">src=</span><span class="s">&quot;/toolbar/static/jquery/toolbar.js?2dc0cb76e7faa4c150fca76981cbcd20&quot;</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>实现包含两部分，一方面需要可以计算出静态文件的md5值，另一方面则是可以在jsp中调用并生成上述html。多番比较后，发现jsp中还是使用标签比较合适，所以继续写tag文件：</p>

<p>style.tag</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%@</span> <span class="n">tag</span> <span class="n">pageEncoding</span><span class="o">=</span><span class="s">&quot;UTF-8&quot;</span> <span class="n">import</span><span class="o">=</span><span class="s">&quot;com.sanss.toolbar.hepler.BaseHelper&quot;</span> <span class="k">%&gt;</span>
</span><span class='line'><span class="k">&lt;%@</span> <span class="n">attribute</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;file&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s">&quot;java.lang.String&quot;</span> <span class="n">required</span><span class="o">=</span><span class="s">&quot;true&quot;</span> <span class="k">%&gt;</span>
</span><span class='line'><span class="k">&lt;%@</span> <span class="n">taglib</span> <span class="n">prefix</span><span class="o">=</span><span class="s">&quot;c&quot;</span> <span class="n">uri</span><span class="o">=</span><span class="s">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="k">%&gt;</span>
</span><span class='line'><span class="nt">&lt;c:set</span> <span class="na">var=</span><span class="s">&quot;ctx&quot;</span> <span class="na">value=</span><span class="s">&quot;${pageContext.request.contextPath}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&#39;${ctx}</span><span class="k">&lt;%=</span><span class="n">BaseHelper</span><span class="o">.</span><span class="na">rtg</span><span class="o">(</span><span class="n">file</span><span class="o">)</span> <span class="k">%&gt;</span><span class="s">&#39;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>javascript.tag</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%@</span><span class="n">tag</span> <span class="n">pageEncoding</span><span class="o">=</span><span class="s">&quot;UTF-8&quot;</span> <span class="n">import</span><span class="o">=</span><span class="s">&quot;com.sanss.toolbar.hepler.BaseHelper&quot;</span><span class="k">%&gt;</span>
</span><span class='line'><span class="k">&lt;%@</span> <span class="n">attribute</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;file&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s">&quot;java.lang.String&quot;</span> <span class="n">required</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="k">%&gt;</span>
</span><span class='line'><span class="k">&lt;%@</span> <span class="n">taglib</span> <span class="n">prefix</span><span class="o">=</span><span class="s">&quot;c&quot;</span> <span class="n">uri</span><span class="o">=</span><span class="s">&quot;http://java.sun.com/jsp/jstl/core&quot;</span><span class="k">%&gt;</span>
</span><span class='line'><span class="nt">&lt;c:set</span> <span class="na">var=</span><span class="s">&quot;ctx&quot;</span> <span class="na">value=</span><span class="s">&quot;${pageContext.request.contextPath}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;script</span> <span class="na">src=</span><span class="s">&quot;${ctx}</span><span class="k">&lt;%=</span><span class="n">BaseHelper</span><span class="o">.</span><span class="na">rtg</span><span class="o">(</span><span class="n">file</span><span class="o">)</span> <span class="k">%&gt;</span><span class="s">&quot;</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中使用到了BaseHelper里面的生成md5后缀级链接的方法<code>rtg(filepath)i</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/** 生成静态文件链接的公共方法，加上md5后缀或者时间戳。</span>
</span><span class='line'><span class="cm">   * @param resource</span>
</span><span class='line'><span class="cm">   * @return</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">rtg</span><span class="o">(</span><span class="n">String</span> <span class="n">resource</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">String</span> <span class="n">fileMd5</span> <span class="o">=</span> <span class="n">fileMD5s</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">resource</span><span class="o">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">StringUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">fileMd5</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;user.dir&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="n">fileMd5</span> <span class="o">=</span> <span class="n">getFileMD5</span><span class="o">(</span><span class="s">&quot;../webapps/toolbar/static/&quot;</span><span class="o">+</span><span class="n">resource</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">StringUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">fileMd5</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">fileMd5</span> <span class="o">=</span> <span class="n">timestamp</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">fileMD5s</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">resource</span><span class="o">,</span> <span class="n">fileMd5</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;/static/&quot;</span><span class="o">+</span><span class="n">resource</span><span class="o">+</span><span class="s">&quot;?&quot;</span><span class="o">+</span><span class="n">fileMd5</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>最不济的情况下，也能给文件加上启动日期的时间戳。</p>

<p>而在布局或者其他需要引入css和js的页面，直接使用这种代码即可:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="nt">&lt;tags:style</span> <span class="na">file=</span><span class="s">&quot;styles/css1.css&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;tags:javascript</span> <span class="na">file=</span><span class="s">&quot;jquery/jquery.min.js&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;tags:javascript</span> <span class="na">file=</span><span class="s">&quot;jquery/tl.js&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Safari不支持第三方cookie引起的session改造]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/01/21/safaribu-zhi-chi-di-san-fang-cookieyin-qi-de-sessiongai-zao/"/>
    <updated>2015-01-21T13:48:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/01/21/safaribu-zhi-chi-di-san-fang-cookieyin-qi-de-sessiongai-zao</id>
    <content type="html"><![CDATA[<p>近日的一个项目中，经常出现部分浏览器的session无法写入的事情。观察一番后，发现这些浏览器大都属于iPhone的Safari浏览器，尤其以iOS7版本居多。
问题本身并不难猜，应该就是cookie无法写入引起的。奇怪的是，部分同版本的Safari又是可以写入session的，所以这个问题很让人困惑。
反复查找，最后明白原因是：首先，对于第三方cookie，Safari升级后确实有禁止写入cookie的特性；其次，但是对于已存在cookie的情况，则尽管是第三方cookie依然还会写入。</p>

<p>就是因为其次这个因素存在，所以之前进行测试的一些手机照样可以写入session了。</p>

<p>问题是找到了，但怎么解决呢？Java中最简单就是让url中带入jsessionid，只是这个方式确实有好多年没有使用过了。虽然是第三方cookie，但因为测试时有过session了，所以还能继续写入。</p>

<p><code>response.encodeURL(url)</code></p>

<p>&#8211; 查文档，这个api的含义是对于如果是可以用cookie追踪sessionid的则不会在url后加入jsessionid，而对于不支持cookie追踪的则会在url中写入id。<br/>
这引发了我的好奇心，只有response怎么能判断cookie是否能追踪呢？</p>

<p>一看Tomcat的源码，实现倒也简单，就是根据当前session的id是否从cookie中获取的来决定的。如果首次访问网站，此时不会有sessionid，则自然不是从cookie追踪的，于是生成的url都有jsessionid。
二次请求上来，如果是cookie中读取的，则不再写入了。如果不是从cookie中读取的，则继续写入jsessionid。也就是说，<strong>不管是不是支持cookie写入，第一笔encodeURL的调用都会加上jessionid</strong>。</p>

<p>例如，第一次访问都会生成这样的链接 <code>http://192.168.202.72:8080/toolbar/home/nav;jsessionid=EFC1A53F48CC5BC9BE58F50830296FBB</code>, 如果再次访问就是<code>http://192.168.202.72:8080/toolbar/home/nav</code>.</p>

<p>这个东西的缺点公开的说法有如下两点：</p>

<ol>
<li>sessionid暴露在url链接中并不安全；</li>
<li>sessionid这样子会保存在地址栏中，容易引发保存后歧义，因为sessionid其实每一次都会是不一样的。</li>
</ol>


<p>简而言之就是这样的链接不好看外加安全性有一定的问题。</p>

<p>不过这个安全性问题如果从网络的角度来看有点勉强。因为http头也是明文传输的，只是浏览器中不显示罢了。以机器的角度来看，jsessionid放在header还是uri中的区别并不大。鉴于业务需要，还是采用吧。于是引发这种写法最大的毛病，需要在jsp中每个自己的链接都加上<code>&lt;%=response.encodeURL(url)%&gt;</code> 。此时不免想起如果都像<code>link_to</code>那样生成链接的话，改起来就方便多了。</p>

<p>Java Web的开发至今没有很方便的helper机制，能用用的还是tags的办法，于是写一个hrefto.tag放到tags下面。</p>

<p>hrefto.tag</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%@</span><span class="n">tag</span> <span class="n">pageEncoding</span><span class="o">=</span><span class="s">&quot;UTF-8&quot;</span><span class="k">%&gt;</span>
</span><span class='line'><span class="k">&lt;%@</span> <span class="n">attribute</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;uri&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s">&quot;java.lang.String&quot;</span> <span class="n">required</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="k">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">&lt;%@</span> <span class="n">taglib</span> <span class="n">prefix</span><span class="o">=</span><span class="s">&quot;c&quot;</span> <span class="n">uri</span><span class="o">=</span><span class="s">&quot;http://java.sun.com/jsp/jstl/core&quot;</span><span class="k">%&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">&lt;%</span> <span class="n">String</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getContextPath</span><span class="o">();</span> <span class="k">%&gt;</span>
</span><span class='line'><span class="k">&lt;%=</span> <span class="n">response</span><span class="o">.</span><span class="na">encodeURL</span><span class="o">(</span><span class="n">ctx</span> <span class="o">+</span> <span class="n">uri</span><span class="o">)</span> <span class="k">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在jsp中的应用主要是两句话，第一是引入，第二是调用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='jsp'><span class='line'><span class="k">&lt;%@</span> <span class="n">taglib</span> <span class="n">prefix</span><span class="o">=</span><span class="s">&quot;tags&quot;</span> <span class="n">tagdir</span><span class="o">=</span><span class="s">&quot;/WEB-INF/tags&quot;</span><span class="k">%&gt;</span> <span class="c">&lt;!--hrefto.tag存放的位置--&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">id=</span><span class="s">&quot;help&quot;</span> <span class="na">href=</span><span class="s">&#39;&lt;tags:hrefto uri=&quot;/home&quot; /&gt;&#39;</span> <span class="na">target=</span><span class="s">&quot;_blank&quot;</span><span class="nt">&gt;&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>&lt;tags:hrefto uri="/home" /&gt;</code>就会调用hrefto.tag中的内容，生成链接。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[笔记本加了SSD]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/01/15/bi-ji-ben-jia-liao-ssd/"/>
    <updated>2015-01-15T23:05:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/01/15/bi-ji-ben-jia-liao-ssd</id>
    <content type="html"><![CDATA[<p>在13年8月拿到工作用的Dell E6430时，就有自己加一块SSD硬盘的想法。只是当时拿到之后发现原装的win7-64bit pro
也不错，使用了几个礼拜后也就不想再重装折腾了。另一个原因则是当时SSD的价格还略高，彼时我一心想的还是256GB的SSD。</p>

<p>半年多以前，给家里的台式机更换了浦科特的256-M6S之后，感觉台式机比几年前新配的时候更<strong>新</strong>了。半年下来，随意用用
256GB也就用了四五十GB，而我的mbp用了大半年也还剩余200GB以上。所以经过实际经历，表明在有机械硬盘的情况下128GB也是
有大量富余的。再考虑到128GB现在的价格已经非常亲民了，于是决定加一个SSD做系统盘并且重装机器。同时也是因为工作用的机器
也一年半了，性能有了较大的下降，也值得重装一下。</p>

<p>在得知建兴有一款性价比很高的128GB SSD之后，毫无犹豫地入了一款。</p>

<p><img src="http://octopresszhangyu.herokuapp.com/images/ssd/1.jpg" alt="建兴ssd" />
<img src="http://octopresszhangyu.herokuapp.com/images/ssd/2.jpg" alt="ssd文字" /></p>

<p>为了让原装的750GB机械硬盘继续发挥作用，加20块买了个光驱位的SATA接口的硬盘支架，两样东西合计399元。</p>

<p><img src="http://octopresszhangyu.herokuapp.com/images/ssd/3.jpg" alt="硬盘支架" /></p>

<p>上面这幅图里面是已经把机械硬盘装进去之后的效果了。</p>

<p>同时再拆下原装光驱的面板和扳手，下面这幅图是二者的对比。
<img src="http://octopresszhangyu.herokuapp.com/images/ssd/4.jpg" alt="光驱和硬盘支架" /></p>

<p>扳手
<img src="http://octopresszhangyu.herokuapp.com/images/ssd/5.jpg" alt="扳手" /></p>

<p>安装过程中唯一有点麻烦的就是SSD插入原本的HDD位置时，由于SSD偏薄，所以要让SSD尽量卡在两个原配的黑色橡皮支架上面一点，这样
才能确保SATA接口衔接上，否则是认不出SSD硬盘的。</p>

<p>硬件安装完成之后，就是OS的安装。OS安装完成之后，因为有了xxxx软件管家，使得装一些常用的应用简单了许多。
而经过一番忙(ze)碌(teng)之后，从启动时间上来讲，由几分钟缩短到了20秒左右；
<img src="http://octopresszhangyu.herokuapp.com/images/ssd/6.jpg" alt="image" /></p>

<p>从Tomcat启动Spring应用来讲，启动时间由30秒减小到了7秒钟；打开各色应用也自然更快了。
效果可谓立竿见影且始终会用到。</p>

<p>跑分的结果
<img src="http://octopresszhangyu.herokuapp.com/images/ssd/7.jpg" alt="image" /></p>

<p>SSD终于到了可以普及的一天了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[懂驾驶的还是德国人]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/01/10/dong-jia-shi-de-huan-shi-de-guo-ren/"/>
    <updated>2015-01-10T15:09:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/01/10/dong-jia-shi-de-huan-shi-de-guo-ren</id>
    <content type="html"><![CDATA[<p>再次踏上选车路，仔细研究了一下宝马X1，发现真懂驾驶而且为驾驶员造车的还是德国人。</p>

<p>以我开车下来的感觉，比较影响驾驶品质的主要是以下几点：</p>

<ol>
<li>动力： X1搭配是是2.0T的发动机，而日系的很多车还是1.8晃荡。</li>
<li>变速箱： X1搭配的8AT变速箱，其实6AT已经不错了，但日系4AT淘汰后上的是CVT，能用6AT的就谢天谢地了。</li>
<li>底盘： X1搭配的是老3系的底盘，调教功力很不一般，而日系的话，suv配的底盘都是低一级的，就算同级的其水平也是有差距的。</li>
<li>手刹：这方面有脚刹、电子刹车、手刹，但要说驾驶感觉好还属手刹，也就宝马还在坚持手刹了。</li>
<li>后驱：后驱前驱的好坏可能并不能完全说有利于驾驶与否，不过宝马偏执的前后配重50:50，则是后驱以及操控优先指导下才会有的产物。</li>
<li>雷达和倒车影像：宝马是重雷达，而影像很少配或者配了就很贵；用车之后发现影像的用处其实有限，远不如雷达有用。所以雷达配的到位，影像完全是可有可无的。而且X1还能选配前雷达这一我的最爱，这也是真懂驾驶者的表现。而除了天籁，日系其他车搭载前雷达的还真是少见。</li>
<li>胎压监测：宝马和很多德系车一样，胎压监测基本是全系搭配，这个在中国这样一个经常容易被扎胎的地方，那是相当的有作用，这个指标是很有用的。</li>
</ol>


<p>当然，金无足赤车无完车，同尊重驾驶者的需求做的好对比，在家用性等其他方面就有不足了。</p>

<ol>
<li>后驱带来了后座中间必然有一个高高的突起，导致后排实用性下降的很厉害。</li>
<li>防爆胎的使用有好处，比如爆胎之后能继续安全行使一段，从而保证安全。但是防爆胎基本不可补，而在中国实在太容易扎胎了，欧洲9万公里才扎一次，我们这边9千公里就要一次了，所以每次都更换必然导致防爆胎的使用成本那是很高很高的了。</li>
</ol>


<p>所以一比家用性，X1就不太行了。然而若讲对驾驶者的照顾和优待，必须得说还是德国人更懂做的也好的多。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[又是新的一年]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2015/01/01/you-shi-xin-de-%5B%3F%5D-nian/"/>
    <updated>2015-01-01T15:06:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2015/01/01/you-shi-xin-de-[?]-nian</id>
    <content type="html"><![CDATA[<p>2015年已经到了，上一次回顾总结还是一年半以前，今天抽空总结一下。</p>

<p>这一年半里最重要的事情就是车车了。13年底拍了车牌，14年年初买了车，5月份开始
由岳父带教上路练习，国庆后开始自己开车上下班并接送老婆。既拼了运气，又花费了一笔，
更练习了技能。到现在，开车已经比较熟练了，也加深了对汽车的认识。最重要的是认识到：
汽车确实不是越大越好。小车在城市里，尤其是小区停车中，有着十分重要的灵活性优势。
同时车子大部分时间只是两个人代步的工具，所以很大的车子在95%的情况下并发挥不了作用。
当然，天籁车子本身确实比凯越好多了，光那份静音和舒适性就是凯越不能比拟的。</p>

<p>也因为买车、开车的关系，开始注意起汽车网站，主要就是汽车之家和新车评。这也是几十年来，
第一次认真的关注媒体人。尽管读报的习惯已养成多年，后来上网多了，阅读的报道是很多，但对
媒体人的关注就几乎没有。就像看了那么多年的sina新闻，但没有留意过一个编辑。而车媒则不同。
车媒上的文章往往让人不得不去关注其背后的编辑。原因可能在于车媒的编辑相对数量有限，题材又
往往类似，所以很容易让人记住并且会反复出现。而综合门户网站，引入了很多的内容，主题十分分散，
所以其上的编辑就很难留下印象。这个热度已经持续大半年，不知道什么时候会淡一些，因为现在花在这方面的
时间确实有点多。</p>

<p>除了买车，数码产品方面今年还买了点苹果的东西。Mac，iPad Air2都是今年新购置的。生日时老婆也送了我一个Nubia Z5S，
手机本身还是不错的，用下来也挺好。给台式机增加的浦科特ssd硬盘确实大大缩短了开机时间并减少了运行时的硬盘噪音。
刚入手的同样来自台湾的papago gosafe520则还在熟悉中。</p>

<p>不能忘记的是，这一年半花了不少时间进行手术，花费了很多假期，术后效果则很令人满意，确实舒服多了。只是自己还是没有
恢复体育锻炼，体重依然是个问题。这也是希望明年春天开始能有所突破的吧。</p>

<p>不过今年还是抽出时间，和老婆一起去日本玩了一次。实际上mbp、pad都是在日本购入的。汇率确实使得在那里购买变得很便宜。
而日本也真的是一个值得一去再去的地方。</p>

<p>生活方面另一个重要点就宝宝顺利健康地成长，即便中间去过几次医院，总体还算平顺。</p>

<p>工作方面领导和同事都很给力，我也尽好了自己的本分，对现在的工作成果还是比较满意的。很重要的一点是又
重新对Java Web的开发感兴趣，这主要归功于Spring MVC对开发效率的改善。而Java优秀的性能和广泛的人才基础确实更加强悍。
大规模的并发处理、使用redis的估算计数确实有很多值得玩味的东西。新的一年可能希望在一些平台方面有更多的接触。</p>

<p>2014让人心旷神怡的莫过于勒夫的德国队终于有冠了。作为一个德迷，这几年已经停幸福的。人才不断涌现，成绩也还不错。
勒夫的队伍各方面都没的挑。美中不足只是缺少大赛的冠军。而这次竟然在南美实现了欧洲球队夺冠，绝对令人感到意外。</p>

<p>看书方面则是海斯勒、哈夫纳、唐德刚的历史与现实的书籍。似乎读了哈夫纳之后，阅读能力见长。有些书还是值得反复读的。</p>

<p>至于新年心愿，最大的愿望当然就是宝宝顺利健康地成长，家人亲友都能平平安安。其次希望工作中能有更新的创造。
随后是希望能有一个自己的车位。最后是希望可以经常体育锻炼，体重得到下降。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 上折腾Ruby 2.2]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/12/31/mac-shang-zhe-teng-ruby-2-dot-2/"/>
    <updated>2014-12-31T21:23:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/12/31/mac-shang-zhe-teng-ruby-2-dot-2</id>
    <content type="html"><![CDATA[<p><strong>节日驱动开发</strong>再次发生作用，圣诞前夕，Rails和Ruby分布发布了新版本，4.2.0和2.2.0.
为此又开始了折腾。</p>

<p>先是在Ubuntu上安装了Ruby 2.2.0，一切都很顺利。Rails因为之前已升级到rc3的版本，所以再升上去就很容易了。</p>

<p>然后在mac上从源码安装新版ruby到rbenv下面。一开始也比较顺利，但安装完毕后执行<code>gem install bundle</code>报了
SSL的错误。Google一番，结论是OpenSSL需要升级，而<code>brew</code> 下面已经是最新的OpenSSL版本了，于是又说要更新brew。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew update <span class="c"># 更新brew</span>
</span><span class='line'>brew install openssl <span class="c"># 安装最新的ssl</span>
</span><span class='line'>brew link openssl --force <span class="c">#建立关联</span>
</span><span class='line'>brew install curl-ca-bundle <span class="c"># 这个执行是失败的，原因似乎是在2014年去除了</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后再次运行，问题照旧。后来发现是因为brew安装的ssl位于<code>/usr/local/opt/openssl</code>
下，而mac自带的有一个系统本身的ssl，ruby编译时会始终使用默认的ssl。
解决办法是建立link或者索性在configure时指定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./configure --with-openssl-dir<span class="o">=</span><span class="sb">`</span>brew --prefix openssl<span class="sb">`</span> --disable-install-doc --prefix<span class="o">=</span>/Users/me/.rbenv/versions/ruby-2.2
</span></code></pre></td></tr></table></div></figure>


<p>其中，<code>brew --prefix openssl</code>可以得到通过brew安装的openssl的具体位置。</p>

<p>虽然不是什么高深的东西，但折腾起来还是挺麻烦的。也难怪现在Ruby on Rails的入门门槛越来越高，而且
很多都是被挡在配置环境这第一道关口。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Papago gosafe520 行车记录仪]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/12/28/papago-gosafe520-xing-che-ji-lu-yi/"/>
    <updated>2014-12-28T16:56:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/12/28/papago-gosafe520-xing-che-ji-lu-yi</id>
    <content type="html"><![CDATA[<p>算起来今年买的千元左右的台湾制造也不少，夏天时候买过一个浦科特的256GB SSD，然后就是去年年底买的这个Papago gosafe520行车记录仪。</p>

<p>从去年5月份开车之初开始，要不要买一个记录仪就让我很纠结。一方面，有个视频可以方便复盘，方便在有问题的时候还原真相，可以降低行车风险。
另一方面，很多人装了之后也确实长期没使用价值，而车上多装一个东西总是一件麻烦的事情。</p>

<p>随着驾驶操作逐步熟练，自己对记录仪的必要性是一天比一天认为不重要的。
开了几个月之后，觉得还是这样开吧，一般问题也不大。但是，在停车后发生的一些事情，最终促使我决定入一个行车记录仪，而且核心功能之一是可以支持停车监控。</p>

<p>很多朋友都知道，上海很多小区的停车环境普遍是比较困难的。而我们小区更是这方面相当出名，每隔几年就能上一次上海本地一线报纸的普通版面。我实际停了之后发现，真正容易刮花车子的，反而是小区的垃圾工和垃圾车。在跟物业交涉的时候，有视频做证据会较有利些。
所以就决定装一个记录仪，可以给自己多一份保障。</p>

<p>在决定购买之后，又面买什么的问题。之前纠结的一部分原因，就是记录仪真的是一个让人眼花缭乱的市场。并没有众望所归的王者，各种标准也不规范，指标也比较混乱，整个市场其实还在飞速发展中，产品更新换代的节奏很快。
具体表现在缺乏大牌与领导厂商，山寨横行。产品更新换代迅速，价格跳水事件常见。最后考虑了牌子和芯片，决定还是入了Papago搭载安霸A7芯片的Gosafe520. 选择的原因是安霸看各类报道相对头牌一些，Papago毕竟在这个市场做了挺多年，价钱也可以接受。</p>

<p>Gosafe520主要有以下几点特性：</p>

<ol>
<li>安霸A7的芯片</li>
<li>价格千元以内</li>
<li>视角146°</li>
<li>3寸屏幕</li>
<li>最高支持2560x1080分辨率</li>
<li>内置重力传感器，可记录紧急事件</li>
<li>内置500ma电池，据称无电池爆裂风险，耐高温</li>
<li>可用充电宝实现夜晚连续监控</li>
<li>具备移动监测功能，这个对连续监控很有用，不然32GB的卡也存放不了一晚上的数据</li>
</ol>


<p>使用下来后，其实在动态前进的过程中，要拍清楚前车的号码还是一件不可能完成的任务。在等红灯停车和速度一致时才能拍的清楚。
只能留待以后的技术发展和进步了。而配合10000ma的充电宝，基本可以支持20小时以上的的持续监控，也算达到购买的初衷。吸盘使用了十来天，也还算吸的牢靠，搭配usb线夹入右遮阳板，就算吸盘松了靠线材也不至于掉到地上。</p>

<p>不好的方面则是夜里还不够清晰，动态前进的拍摄效果还是有待提高。最高目标是能拍清楚对向来车的车牌。（不知道现在有没有已经做到这一点的产品？）
tf卡只支持32GB的还挺可惜的，毕竟现在32G的卡只要60元左右，而在这个记录仪的使用周期里，64G甚至128G卡的价格应该会下来也就能够普及，而520以后也是无法插这些卡的。送的usb线也有点短，而且非用mini usb口也有点蛋疼，和安卓的micro usb兼容应该不难的吧。另外就是自带电池的话，在夏天还是一个隐患，好在现在是冬天意味着我至少可以先用上半年。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spring中的CRON]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/12/28/springzhong-de-cron/"/>
    <updated>2014-12-28T15:12:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/12/28/springzhong-de-cron</id>
    <content type="html"><![CDATA[<p>在<a href="http://octopresszhangyu.herokuapp.com/blog/2014/09/11/webrong-qi-zhong-tong-guo-springtian-jia-jobren-wu/">Web容器中通过Spring添加Job任务</a>一文中，
已经提过在spring中增加例行任务。只是当时提交的任务仅限于间隔一段时间后执行，比如每分钟执行一次，因此使用
<code>period</code> 和 <code>delay</code>两个参数就够了。</p>

<p>这次新遇到的需求是要求定点执行，比如固定在夜间23:30启动，这时候就需要cron了。好在Spring 4.0版
开始已经支持cron，配置起来也很简洁。</p>

<p>首先，在<code>spring-mvc.xml</code>中增加要定期执行的类作为bean，作用是把要定期执行的类交给spring扫描</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;LastDayDevicePackorderlogRefreshTaskExecutor&quot;</span> <span class="na">class=</span><span class="s">&quot;com.sanss.toolbar.job.LastDayDevicePackorderlogRefreshTaskExecutor&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/bean&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其次，在这个类上使用标注<code>@EnableScheduling</code>，让spring意识到这是一个定期调度启动的任务。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@EnableScheduling</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LastDayDevicePackorderlogRefreshTaskExecutor</span> <span class="kd">implements</span> <span class="n">Runnable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后，是在具体要启动的method上标注<code>@Scheduled(cron = "0 * * * * *")</code>，以此给出具体的执行安排。<br/>
标注中cron的具体含义可以见下面的注释。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * 一个cron表达式有至少6个（也可能7个）有空格分隔的时间元素。</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * 按顺序依次为 秒（0~59）</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * 分钟（0~59）</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * 小时（0~23）</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * 天（月）（0~31，但是你需要考虑你月的天数）</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * 月（0~11）</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * 天（星期）（1~7 1=SUN 或 SUN，MON，TUE，WED，THU，FRI，SAT）</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * 7.年份（1970－2099）</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nd">@Scheduled</span><span class="o">(</span><span class="n">cron</span> <span class="o">=</span> <span class="s">&quot;0 * * * * *&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">// TODO Auto-generated method stub</span>
</span><span class='line'>  <span class="c1">// doit();</span>
</span><span class='line'>  <span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;定期触发&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Passionate Programmer]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/12/21/tpp/"/>
    <updated>2014-12-21T17:21:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/12/21/tpp</id>
    <content type="html"><![CDATA[<p>中文翻译是《我编程，我快乐&#8211;程序员职业规划之道》。在陪老婆做头发的过程中，看完了这本书。
本书还有一个更大名鼎鼎的名字：My Job Went to India。整本书其实更确切地说是如何
追求成为卓越的软件开发者。中文名字起的其实有点文不对题。</p>

<p>书中比较有意义的是提到了程序语言的选择是一种投资，低风险必然低回报，而高风险可能高回报也可能
无回报。所以对于选择小众还是大众化的区别和结果给了完整的分析。
而同时，对于继续在大众语言中立足的开发者而言，作者提出来因为需求的提高，初级程序员会增多，
而对高级开发者的需求也会因此增强。也算是给高级开发者指明了出路。此外，作者也区分了经理和
带路人的区别。经理的职责并非是替补，事实上经理的主要职责是确定事情的优先级，保证部门的运行
效率等。这也是管理真正的目的。</p>

<p>整本书读起来还是比较轻松的，首先当然是因为这本书确实很薄。其次，书中很多内容也确实和我一直
以来做的差不多。其实对于小公司工作的人来讲，书中提到的做法也几乎是一种自然而且必然的选择。</p>

<p>而保持激情一切一切的关键在于当代社会确实需要软件，也确实需要程序员。同时由于
软件开发者智力劳动的属性，注定必须强调自我驱动，很难完全规范化和流水线化，因此从业人员的能力对产出
也会产生极大的差别化结果。
 所以在这个时代，安心地当个软件开发者还是有出路且挺幸福的。</p>
]]></content>
  </entry>
  
</feed>
