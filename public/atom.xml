<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hegel2011的博客]]></title>
  <link href="http://octopresszhangyu.herokuapp.com/atom.xml" rel="self"/>
  <link href="http://octopresszhangyu.herokuapp.com/"/>
  <updated>2013-01-05T22:30:30+08:00</updated>
  <id>http://octopresszhangyu.herokuapp.com/</id>
  <author>
    <name><![CDATA[Hegel 2011]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[考研三周年纪念]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/01/05/kaoyan-3-zhounian/"/>
    <updated>2013-01-05T21:56:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/01/05/kaoyan-3-zhounian</id>
    <content type="html"><![CDATA[<p>在2010年的一月考试季节，我参加了研究生入学考试，至今已整整三年了。而在昨天，我已经拍摄了毕业集体照，即将拿到学位和学历证书。也在昨天，
工作上终于又有了突破。
今天，是2013年考研的日子，借机提取一下自身的感受。</p>

<p>回首这三年是很丰富多彩的，可以说比以往经历的任何三年的内容都要多。这三年中，我用75天左右的时间复习了高数等考研内容，参加了研究生入学的1月份
全国统考，踏破了复旦线。这三年中，我找到了自己的爱人，一起买了新房，忙活了很久房子的装修，举行了自己的婚礼。这三年中，我和妻子开始独立生活，
撑起自己的小家庭。这三年中，蜜月的意大利之旅至今令人难忘，甚至增强了我对阳光的感觉。这三年中，在张江进行研究生阶段的进修，学写论文、发表论文，撰写硕士论文并通过答辩。这三年中，补充了经济管理方面的知识，至少
有半个mba的水平吧。这三年中，实现了工作的突破。这三年中，迎来了宝宝的降生，品尝到做父亲的喜悦与辛苦，体会到老婆和女性的不易。</p>

<p>这三年里确实经历了许多精彩，丰富了自己的人生。当然，也有悲哀和痛苦的。自己的体重又快接近减肥前了，身体也始终受一种毛病的困扰，我亲爱的外婆、大姆妈辞世。
人生总不可能是圆满的，世上不如意之事十之八九，花未全开月未圆，不顺也是生活中必然存在的一个部分。总体说来，这三年还是充满了很强烈的幸福感。</p>

<p>今天是新年的第一篇博客，既是对三年的一点小回顾，也不免俗地写点新年心愿。最大的愿望当然就是宝宝顺利健康地成长，家人亲友都能平平安安。有人认为人到中年
不忙赚钱忙做事，但我作为一个居家的上海男人还是追求平安是福。其次希望工作的结果能更有意义，呵呵，做事是第二位的，平安幸福重要，但要幸福必须
得做事才行。具体的着手打算从对存储设备及安全的研究开始。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ziyang]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/12/25/ziyang/"/>
    <updated>2012-12-25T22:42:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/12/25/ziyang</id>
    <content type="html"><![CDATA[<p>全书比较浪费时间，最有价值的是最后的一篇历史专家的序，基本把主要内容概括出来了。</p>

<p>作为实际操作改革开放的设计师，Z肯定有过人之处，但同时也可以看出2B的地方也不少，可见人总有弱点，也不必追求尽善尽美。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[浪潮之巅]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/12/25/lang-chao-zhi-dian/"/>
    <updated>2012-12-25T22:42:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/12/25/lang-chao-zhi-dian</id>
    <content type="html"><![CDATA[<p>读完浪潮之巅，确实算本好书。作者能记录那么多小故事小掌故可见平时的积累很深。财经股市融资讲的也很生动。
当然，不见得所有分析都对。比如solaris他就没意识到是被ibm支撑的linux打败的，windows至今在桌面上和linux井水不犯河水。当然，盖茨的担忧不是没道理。
pc上linux毫无机会，但是移动终端就变天了。</p>

<p>另外，给我的启示是别说老师不知道我们今后能干什么，实在是没人能料到发展状况的，以前指望老师指条明路的想法太不切实际。
这个产业的高速发展和不确定性完全不是能被预知的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《天葬》读后感及Kindle的体验]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/12/15/tianzang/"/>
    <updated>2012-12-15T21:09:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/12/15/tianzang</id>
    <content type="html"><![CDATA[<p>Kindle到手后，一周读了一本半书。两本书的作者都是同一个人wang li xiong。</p>

<p>TianZang(T)这本书是写的逻辑很清晰的。从介绍西藏历史上和中国之间的关系入手，高低起伏、左转右转的关系相当引人入胜，条理极其清晰，也就很容易
记忆住了。</p>

<h3>关系简史</h3>

<p>西藏原来叫做吐蕃，唐朝时候和大唐争斗不息，互有胜负。大唐吃了不少苦头，也嫁了几个公主给他们。彼时的吐蕃人有400万之众，也未皈依佛教，
战斗力极强。藏人本是游牧民族，骑马骑牦牛，从坡上下来打唐军可以占尽便宜。到宋代，自然无力针对他们，于是让出很远一片，基本就和藏人不接壤了。吐蕃人
此时也开始信佛，没有扩张性了，人口实际上从那时开始直到后来也就只有400万的1/4-1/2。</p>

<p>元朝的番僧，是蒙古人统治的精神支柱。彼时吐蕃人就变成了<strong>国师</strong>，和蒙古人一样属于统治阶级。蒙藏那时本是一家，联合统治了华南华北。蒙藏的关系一直
很密切，其后一直到明朝之后还是如此。而在明朝，藏人开始押宝大明，毕竟大明赶走了蒙古人。他们也会向明皇帝朝贡，但也仅仅是朝贡，实际上大明
还要回赠的更多。但形式上，确实向大明称臣。到了清代，情况发生了变化。</p>

<p>在清代对葛尔丹和青海蒙古族进行了镇压和屠杀后，蒙古人的势力在西域和西藏开始衰弱，至今新疆境内仍然有蒙古自治州县就是衰弱后的残余。蒙古人的空间逐步被维吾尔
和藏人占据。清代逐步设立了青海办事大臣和驻藏办事大臣，西藏在清代被称作<strong>唐古忒</strong>。不过实际权力还在喇嘛手中，大臣被戏称为“熬茶大臣”，即只负责
施舍粮食的大臣。</p>

<p>随后英国人荣赫鹏对西藏的入侵，导致清朝开始重视西藏的主权。因为这个是很耗精力的，藏人又不好管，无人进藏的困难从未真正有解决方案，清王朝之前
的统治以名义为主，实际操作中少花钱少办事是主旋律。而且藏人也极其闭塞、愚昧不好打交道。以至于大臣见到荣赫鹏时顿有知音之感，因为他们在藏人
面前的经历类似。可见他在藏人那又多郁闷。“藏人实以极端顽固之民族”。</p>

<p>清末加强主权开始，一张一赵成为清廷处理西藏问题文武经略。他们的控制应该说还是很成功的。只是清王朝彼时已行将就木，所以他们最后是败给了自己人，起义及起哄的汉人。
民国开始，自然无力顾及西藏，基本就这样子。一段插曲是，藏人认为中国军队进驻西藏一年半以后，清朝就遭到了报应，因为它虐待了宗教领袖，还让领袖
给西太后与皇帝行跪拜之礼。当然，五十年代的报应至今还没看出端倪。</p>

<p>从辛亥革命之后到51年之前，西藏基本处于实际独立的状况，因为中国实在没空管。但是为了<strong>川滇秦陇</strong>的防卫，显然不可能长期不管。于是在51年西南西北野战军
就开始进藏。藏人的战略战术都不行，也没有打游击战，被解放军在川藏线上包了饺子。于是同中共和谈，最后算是和平解放。但藏人的统治还是寺庙宗教
在执行，中共当时是联合的西藏贵族和喇嘛，农奴制其实没有多少变化。但是，把农奴制的统治地区限制在了西藏自治区。而青海、四川甚至甘肃云南都有
一部分的藏区，这部分藏区不再实行农奴制，开始打当地的藏人贵族和寺庙。因为藏人的传统统治基本单位就是寺庙和贵族。</p>

<p>虽然行政上分在几个行政单位中，实际上藏族之间的关系千丝万缕。于是在川藏青藏吃了亏的人退进了自治区退到了拉萨，自治区反而变成了他们的根据地。
从此，自治区里面的冲突开始逐步升级，最后只能通过战争解决。自然谁胜谁败不难评判，达赖从此出逃去了印度的达兰萨拉。在得罪了高层之后，党就开始走下层路线，用阶级斗争来解决民族冲突。
伟大领袖从此也成为了藏人的领袖和心中的红太阳。这段时间到文革，基本左的很厉害，党也建立了在西藏实际有效的统治组织。藏民中的下等人逆袭成为了主要的帮手。
而且彼时国家对国人有绝对的支配权，无人进藏的问题暂时不成困难。此时的政府确实完全具备了对西藏的主权，西方的概念。</p>

<p>文革结束，党对藏人执行了宽松的政策。以藏人治理藏人。同港人治港不同，港人治港一直依靠香港有钱人上等人。藏则经过了依靠穷人又变为富人翻身，
以前的西藏贵族在取消阶级斗争后，又迅速地富了起来，社会地位等超过了穷藏人。宗教作为藏文化的核心内容，和尚和寺庙都变成了上宾。而且实际上影响着
藏人。宽松的政策容易导致四不像，反而易出问题。好比国民党想军队国际化，撤出了党代表，最后军队搞的一盘散沙。西藏在80年代则也有类似的现象。
所以部分人把这称为胡乱邦。87年之后，形式越来越紧张，藏人日益放肆，而老一代的西藏汉族干部都年纪大了。所以出现了冲突。这时候又是西藏分裂势力
开始抬头。随后，中央政府及时调整了政策，在90年底起，重新加强了对边疆的建设和防备。局面始终在党的控制之下，但摩擦始终存在。</p>

<p>而达赖在去了达兰萨拉后，和西方接触日多，又是转世灵通的底子，逐步成为了西方很喜欢的西藏代表。变成了西方牵制中国中共的一张王牌。</p>

<p>纵观简史，西藏的问题确实很复杂，地域、空间、民族、气候的特点，使得它其实是不太适用于源于欧洲的那套国家体系。而目前国际通行的标准和规则
又就是那一套，因此引经据典注定到头来总是看以谁的角度来看待问题。因为这个约等于完全处于主观判断中。</p>

<h3>未来的遐想</h3>

<p>杨度有一句名言，若我中华国国亡，除非湖南人尽死。对于西藏问题，可以借用改造一下得出：若我中华失去西藏，除非中国人尽死。<br/>
这并非危言耸听，以如今之形式及生存空间的要求而言，中国人是很难放弃西藏这块地区的。别说青、藏、川，哪怕只是一个自治区要想完全脱离汉人的怀抱
也是不可能的。即便是民主及各地拥有高度自主权的中国，也是会让西藏纳入在版图之内。在这方面，中国政府的后退空间确实不多。从当前的情况看来，只有这样继续僵持了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[硕士答辩]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/12/09/dabian/"/>
    <updated>2012-12-09T21:22:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/12/09/dabian</id>
    <content type="html"><![CDATA[<p>12月7日周五下午通过了硕士论文的答辩。多亏了C，让我们可以在比较早的顺位得到答辩的机会，大大节省了时间和精力。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kindle]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/12/09/kindle/"/>
    <updated>2012-12-09T20:53:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/12/09/kindle</id>
    <content type="html"><![CDATA[<p>周五终于忍不住买了一台Kindle，把玩不久之后就喜欢上了。到手没多久已经用她看完了《我的西域，你的东土》后半部分。
比起在手机上，即便是4寸的手机，看书的感觉棒多了。甚至比在电脑上看还要好，比抱着实体书看的感觉更棒。为什么这么说？</p>

<p>最简单的道理就是分量轻、字体可以很大。从体积和重量上来讲，kindle的分量只相当于一本普通的100页不到的产品说明书，手握着相当舒服。和纸质书相比，
要轻了许多，尤其是和那些大部头的书比较的话，计算机的书籍很多都是很厚的，显然轻便很多。手握着很轻松，单手也能操作，口袋里可以随便塞。在日光
下的显示效果也要好于纸质书。</p>

<p>而在字体方面更是可以做到很大。从这点上来说是对纸质书实现了全面的突破和超越。看大字不费眼不容易近视是普遍认同的，但囿于纸质书的体积和重量，
篇幅必须加以控制，而篇幅的控制除了内容本身的长短就是和字体排版大小相关了。传统书籍为了还能让人携带，或者处于印刷成本的考虑，字体都是不得不损失的，
而小字体其实阅读体验并不好，也容易伤眼。从阅读本身角度来说，字体越大眼睛越不累（当然自己感觉不到累可能眼睛会用的更多，呵呵）。Kindle就可以把
字体放置的很大，看起来就舒服多啦。</p>

<p>此外，如今的年代抱着一本书在外面看是不太好意思和别人打招呼的。Kindle就没这个问题了。带着和带pad、带手机看东西的感觉是一样的，同外部环境很协调。</p>

<p>在我看来，这绝对是阅读方面划时代的产品。对纸质书的冲击以后再写文章评论吧。大体上认为是赢家通吃&amp;长尾理论挤掉了中坚力量的存活空间。</p>

<p>最后，必须得承认<a href="" title="http://home.duokan.com/index.html">多看</a>的功能比原厂的软件做的好很多，至少在适应中国人的习惯以及中文阅读方面要强出许多。
对于我最喜欢的PDF格式支持也很好，关键一点在于支持智能重排，效果那是相当的棒。此外，多看设计的Wifi传输，其实就是ftp服务，也相当的实用。一开始
还担心安全问题，后来确认它默认是关闭ftp的。Kindle的硬件+多看软件，这个组合相当厉害。现在就等我的疯马纹皮套和SOLIS灯了。</p>

<p>I love it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[悼外婆]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/11/23/daowaipo/"/>
    <updated>2012-11-23T22:12:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/11/23/daowaipo</id>
    <content type="html"><![CDATA[<p>亲爱的外婆在11月7日晚间22:34在建工医院去世了，享年85岁。</p>

<p>按江苏吴江的叫法，我从小一直管外婆叫娘娘。对娘娘最早的印象应该是三四岁时在上海上幼儿园的那一阵子。那时候娘娘已经退休，主要就是管我哥哥（大舅舅的孩子）和我。
会送我去幼儿园，也会带我一起去哥哥上学的三中心附近的山阴路上的一幢房子。那时候，娘娘在我印象中就是一个很白很干净的长辈。</p>

<p>上小学一年级开始，我就回到了上海，住在了外婆家里。从那时起开始了长达12年的小学、初中、高中。这12年都是在娘娘家，所以说基本上我是娘娘带大的。
娘娘的教育方针很简单，小孩子做事要专心、不能交坏道、得到老师的表扬她总会显得很开心，并且反复以此来鼓励我们。一二年级拿回的五角星，直到高中
甚至以后进入了大学，娘娘还是会跟我讲起我那时候带星星上来的高兴劲与自豪感。娘娘的专心教育是从一点一滴做起的。比如看电视，她就要求我看了就不要
随便换台。而当我五年级开始养成了读报的习惯后，外婆也始终夸奖。尽管那时候我基本只看体育版的新闻。但无论如何，因为外婆的表扬我坚持了读报的习惯，
养成了速度的能力。</p>

<p>十二年里，外婆要在生活上照顾我。最频繁也最累人的莫过于要准备一日三餐。早饭基本是为我一个人买的，娘娘每天都要很早起来就准备好。毕竟当时我是7点
出头就要出门，可以想象娘娘是要起的多么早。中饭我12年基本都回家去吃，外婆总是又要准备饭菜给我吃。晚上是一家子一起吃饭。加上小舅舅夫妻，基本上
总在五个人以上。娘娘为此付出的辛劳，彼时的我是不能体会和理解的。而在我成年后，再回忆起这些东西，才感受到娘娘当初有多么不容易。
除了勤劳之外，娘娘最大的特点就是节俭。这个品质也影响了我的性格和行为。</p>

<p>为了支持我报考上海交通大学，娘娘在后勤及复习环境布置方面都动足了脑筋，想尽了办法。为了让我晚上有个安静的复习环境，把写字台移到了外面。同时也为了
每天的伙食尽量想办法。有时候，还要作为心理医生来开解我的紧张情绪。当我如愿以偿考上交大计算机系后，我第一个想感谢的就是我亲爱的娘娘。可以说，没有
娘娘就没有我出色的高考成绩，也就不能进入心中理想的学府。娘娘的教育是形成我这些习惯、取得这些成绩的重要的一环。</p>

<p>考上大学后，我和娘娘就改变了相依为命的生活状况。我回到了父母的身边，去了闵行，也就是上海交大。从那时起，就不能天天和外婆见面了。只有在假期在节日
会去看外婆和外公。娘娘对此也十分理解。一来她知道我的大学学习负担很重，压力很大；一来她也是了解我的性格的。既然培养了一个专注的孩子，允许他
忙自己喜欢的事情，而只能允许他对其他东西可以冷淡了。</p>

<p>这样的日子一直持续到大三结束。在这3年中，可能因为外婆和外公年纪都大了，也可能我的离开改变了他们的生活习惯，也可能是其他各种因素，外婆外公在心血管
方面都患上了疾病。可能这也是难以避免的。当时的医生也只是说年纪大了，今后自己注意。而我们在海伦路的老房子也因为修建4号线而被拆迁。妈妈此时也正好退休，
为了照顾娘娘和阿爹就一起住到了搬迁的房子里。我在周末则又回到娘娘这边。大四时学校安排我们在徐汇校区进行学习，离闵行的家反而更远。这样我就又每周可以见到
娘娘了。随后我踏上工作岗位开始职业生涯。工作的头一年半也是和娘娘一起住的。后来爸爸也快要退休，为了家里人住的方便，同时也能照顾到老人，爸爸妈妈
就在娘娘家附近买了房子。这样就又不能天天和娘娘见面。但是住的很近，基本上一两个礼拜就会去看娘娘一次。</p>

<p>现在想来，那时候为老人做的事情太少了。太过专注于自己的事情那其实就是自私了。</p>

<p>后来外公的身体日益差了下去，娘娘也在一直照顾外公。然而毕竟她自己年纪也大了，照顾老伴的负担也很重，对身体的影响也很大。而娘娘就这样坚持下来了。
亲爱的娘娘就是这样，虽然平凡地做小事，但能始终如一地做好。日积月累，累计起来就很了不起了。在2008年，娘娘遭受了阿爹去世的严重打击。但仔细想想，
那时候他们已经一起度过了63年的光阴，这是多么不容易啊。外公死后，外婆坚持不用保姆，也不肯麻烦几个孩子住到他们家里，只愿意隔三差五地去待一待。
出于节俭的习惯，这是可以理解的。出于勤劳的习惯，她也不愿意什么都她人来做。而且娘娘是个很有主意的人，也不喜欢家里多一个保姆。两个舅舅和我妈坳不过
娘娘，只得答应。</p>

<p>这个阶段，娘娘的生活总体来说是轻松的。子女都照顾着她。娘娘自己的身体也很健康，生活质量是很高的。用她自己的话说就是“活要健，死要快”，就是说
活着的时候要身体健康，一旦身体不行了最好死的痛快不要拖延。唯一的缺点就是冷清了点。当然，随着我哥哥孩子的出世，这个小孩给娘娘带来了很多的乐趣和欢乐。
当得知我考上了复旦大学的硕士研究生，娘娘也是由衷的高兴。当看见我结婚，娘娘是很开心的。给了我和老婆很厚重的红包礼金，要我好好生活，好好撑起自己的家。遗憾的是，我因为开始习惯新的生活而且搬离到稍远的地方，
再加上娘娘后来每天六点不到就上床休息了，婚后这一年多的时间里我看娘娘的次数就比较少了。当然，逢年过节会去拜望她，家庭聚会的时候还是可以见到娘娘的。
但次数加起来也不多。这是我后悔的地方。也由此，我开始理解了家庭聚会的意义。一些曾经很容易的事情可能在能做的时候是被忽略了，只有到了不能重现的时候，
才能理解这些事情的可贵。家庭聚会就是这样一种。我在娘娘阿爹结婚60周年时给他们拍的照片也是这样一种事情。回想起来，给他们拍的照片还是太少了，对他们的
关心和照顾还是做的很不到位的。</p>

<p>不过，外婆始终强调我现在已经独立成家，负担起一个家庭的任务是有挑战的，我应该首先过好自己家里的日子。娘娘的教育始终是以孩子自身处境的好坏为本的。
但是，我确实没想到娘娘会离开的那么快。甚至没来得及看到我即将出生的孩子。在我看来，娘娘应该还能活不少年，毕竟她这几年的精神不错。即使在住院后，
我也只是认为会转入长期卧床治疗，实在是没想到会走的那么快。最令我感动的是，在生病住院前，85岁高龄的娘娘在得知外孙媳妇将在距离不远的医院生产后，表示一定要去医院探望。
作为一个传统的中国人，娘娘始终牵挂着下一代的成长。有时我也想，对他们而言，子孙后代的成长成功是一生中最重要的事情吧。</p>

<p>仔细想来，娘娘也是有福之人。生于民国年间的她和阿爹，受到过在那个年代很难得的教育。外公的文化水平很不错，娘娘也是从小识字，读写都没问题。在45年抗日战争胜利、全国喜庆的那一年订婚、结婚。婚后育有两男一女，可谓
有儿有女，数量正好。更重要的，她和外公携手，美满幸福地度过了63年，在95年结婚50周年的时候当时工商银行还给他们举行了集体的金婚聚会，留下了珍贵的照片。这个聚会也成为外婆最津津乐道的事情之一。我想她回想起来是充满幸福感的。
在他们60周年结婚纪念日时，工商银行又发来聚会通知，只是因为外公身体的原因，那次是没有去了。无论如何，能和自己的爱人携手走过60多年都是幸福美满的。
对比如今这个时代，更体现了难能可贵。同时，娘娘阿爹对子女的教育也是成功的。三个子女均成为对社会有用的人，都建立了自己家庭，对社会作出了贡献，成功地在
社会上立足。对此，娘娘是自豪和自信的。</p>

<p>我也可以很自豪地说，娘娘绝对是晚辈们心中慈祥的长者和家庭的榜样。我爱我的娘娘，我想我的娘娘。</p>

<p>作为晚辈，按娘娘的教诲做事做人就是对长辈最好的纪念。娘娘，您安息吧，您一贯的“简朴、勤劳、节约”以及“诚实做人、勤俭持家”是我们永远要学习好品质和遵守的家庭准则。</p>

<p>二零一二年十一月二十三日晚<br/>
于娘娘逝世半个月后补祭</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What's new in Rails 4]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/11/23/whats-new-in-rails-4/"/>
    <updated>2012-11-23T22:00:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/11/23/whats-new-in-rails-4</id>
    <content type="html"><![CDATA[<p>来自<a href="http://vimeo.com/51181496">视频</a>的笔记</p>

<h3>Rails.queue</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class ExpensiveOperation
</span><span class='line'>  def run
</span><span class='line'>   
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>Rails.queue.push(ExpensiveOperation.new)
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>config.queue = Sidekiq::Client::Queue #Resque, delayed_job</p>

<h3>strong_parameters</h3>

<p>Alternative to MassAssignmentSecurity</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class PostsController &lt; ApplicationController
</span><span class='line'>  def create
</span><span class='line'>     @post = Post.create(post_params)
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  private
</span><span class='line'>  def post_params
</span><span class='line'>    params.require(:post).permit(:title, :body)
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>  </span></code></pre></td></tr></table></div></figure>


<h3>Turbolinks</h3>

<h3>Cache Digests(Russian Doll Caching)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># app/views/projects/show.html.erb
</span><span class='line'>&lt;% cache project do %&gt;
</span><span class='line'>  &lt;h1&gt; &lt;/h1&gt;
</span><span class='line'>  &lt;%= render project.documents %&gt;
</span><span class='line'>&lt;% end %&gt;</span></code></pre></td></tr></table></div></figure>


<h3>ActionController::Live</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>include ActionController::Live
</span><span class='line'>
</span><span class='line'>response.stream.write "hello\n"
</span></code></pre></td></tr></table></div></figure>


<h3>PATCH Verb</h3>

<p>just as PUT</p>

<h3>Plugins are dead; long live plugins</h3>

<p>use gems with bundle</p>

<h3>lambda scope</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>scope :published, -&gt; { where(:published =&gt; true) }
</span><span class='line'>
</span><span class='line'>#Pitfall 
</span><span class='line'>scoped :recent, where("created_at &gt; ?", 1.week.ago)</span></code></pre></td></tr></table></div></figure>


<p>@sikachu</p>

<p>Routing Concerns</p>

<p>Long live activeresource</p>

<p>The changes seem not to be surprising compared with those from Rails 2.3 to Rails 3.0. And perhaps less than from 3.0 to 3.1.
They are real slight for Rails. I guess this is due to DHH have just had a Colt HH. The same for me!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[软考之系统架构设计师]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/11/04/ruankao-xi-tong-jia-gou-she-ji-shi/"/>
    <updated>2012-11-04T15:04:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/11/04/ruankao-xi-tong-jia-gou-she-ji-shi</id>
    <content type="html"><![CDATA[<p>距上次考<a href="http://octopresszhangyu.herokuapp.com/blog/2012/05/27/take-the-exam/">软考的中级项目经理</a>已经有将近半年的时间。看了软考证书的性质一直想再去考一个高级的证书出来。
毕竟这个证书既然上海居转户认可，那么就有其权威的性质。起初想报考网络规划师，主要是想在考试的同时可以把网络知识学的全面一些。但随着下半年
论文等事宜，准备一门新的考试的时间并非很充足，所以最后换成了软件架构设计师。实际上下半年只有项目管理、网络规划、系统架构3门高级，项目管理
上半年考了中级，没有继续主要是因为第一书已经借出去了，第二考出来后还要等3年才能去换高级项目的证书。看了看架构师的题目，基本不需要太多额外
的准备工作。于是还是选了架构师。</p>

<p>复习一直进行的有条不紊，自己也想试试能否通过低强度的复习就通过。因为这一门总体而言对我并不难。麻烦主要是下午的问答题，但这里面运气的成分还
是蛮大的。下周就要考了，但愿过关吧。</p>

<p>上周还去考了末代上海职称英语考试。卷子比较简单。同全国卷相比，词汇部门难一些，阅读部分没有很强的干扰项。大致上二者都不难，而且又都可以带
字典。考试的地方在锦绣路浦建路那边的东辉职业学院，附近有香梅花园、上海绿地等大楼盘。整个区域的环境还是不错的，房子也大都造于04-06年间。
有闲钱的话，可以考虑到那边置业，基本上4万/平。最大的特色是运动场地多，包括露天的带跑道的操场，健身会所等。这样的社区环境可能还是比较难找
的。劣势么就是毕竟在浦东，学校、交通总是僧多粥少。</p>

<p>Updated on 27/11/2012: 职称英语的成绩今天查到了。按理是昨天<a href="http://www.spta.gov.cn">spta</a>这个网站就公布查询界面了，但是网站后来瘫掉了，所以今天才查。分数还不错，
92分高分通过。这几年的英语还是有所长进的。毕竟06年去考B级的也只有85。从这次分数的情况来看，应该是完形填空错的太多了。</p>

<p>Updated on 27/11/2012: 写文章的时候，娘娘还在医院的看护病房里观察，病情尚算稳定。老婆午睡完毕后提醒我提过的要去看娘娘的事情，时间也正好赶上。
但随后几天，娘娘的病情恶化，于周三11月7日去世。本来打算弃考软考，毕竟也不是什么很严重的考试。
不过最后还是去考了软考的系统架构设计师，只是状态确实不好，冲刺复习也基本为0.之所以还去主要还是
妈妈的支持以及做此类事情娘娘向来是全力支持的，我放弃去考反而不是家里希望看到的。过关与否，已经是次要的了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个政府网站]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/11/02/a-gov-site/"/>
    <updated>2012-11-02T10:30:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/11/02/a-gov-site</id>
    <content type="html"><![CDATA[<p>最近发现网上预约挂号竟然免费了，确实挺稀奇的。同时，发现全国的那个
<a href="http://www.guahao.com/">挂号网</a>做的相当有特色，可以说很不像一个官方
站点，所以记录一下调查出来的结果。</p>

<p>初一看，这个站点很像Rails制作出来的网站。当然，Rails只是后端，任何
后台程序都可以产生一样的HTML页面。但是实践和习惯也是一种强大的力量，
所以风格上还是很有倾向性的。
能确定的，就是从页面风格上，这个站点用了大量jquery和bootstrap的前端技术，
后端的框架可能不是Rails，但这个框架本身借鉴了很多Rails的技巧与实践。</p>

<p>从网站的风格可以看出，受豆瓣的影响挺深。从我的口味来说，这个站点比豆瓣
做的更加清爽。</p>

<p>后台的技术并不完全确定，不过这个站点也使用了varnish这个组件。</p>

<p>之后，就好奇这个站点是哪家开发。毕竟一个官网做成这样是很罕见的。搜索了半天，
终于发现原来是浙江杭州的一家公司做的。这家公司其实是一个互联网公司，并不是
传统的做如软件集成业务的企业，也难怪会做出这样一个与众不同的产品出来。</p>

<p>下面是这个企业的介绍，摘自<a href="http://search.51job.com/list/co,c,2756440,000000,50,1.html">51job</a></p>

<blockquote><p><strong>浙江康健绿线网络技术有限公司 </strong><br/>
为提高全民健康素养，切实缓解“看病难”问题，2010年3月，经卫生部批准， “全国健康咨询及就医指导平台”正式启动建设，目前为用户提供就医指导、预约挂号、 健康咨询、医疗支付服务，帮助用户合理就诊、方便就医。“全国健康咨询及就医指导平台”由卫生部新闻宣传中心/中国健康教育中心组织实施，中国医院协会提供支持。</p>

<p>作为“全国健康咨询及就医指导平台”的官方网站，Guahao.com通过号源托管、HIS直连、搜索链接三种方式聚合了全国超过400家重点三级医院的预约挂号资源，建立了全国三级医院22万名医生的专长库，帮助全国用户“找对医生挂到号”。</p>

<p>“全国健康咨询及就医指导平台”启动两年来，已成功为全国超过1200万用户提供了预约挂号、就医指导、健康咨询服务，成为了全国规模最大的医疗健康服务平台。</p></blockquote>

<p>不过仔细分辨的话，这个站点不具备一些rails网站的典型特征，尤其缺乏近期Rails的实践特色。目前推测实现上可能是采用的Zend，一个PHP的框架。</p>

<blockquote><p>Zend Framework的设计构思形成于2005年，由Ruby on Rails和Spring Framework的设计思路发展而来的。2005年10月，第一次Zend年会上，Zend公司宣布了ZF的开发计划。[2]
2007年7月1日，Zend Framework 1.0发布。
Zend Framework 本身的结构很大程度的模仿了 Ruby on Rails，但又做了足够的改动使其适应 PHP 的特点。所以很多 PHP 框架都或多或少的借鉴、参考了 Zend Framework。由于不满 Zend Framework 中前端控制器重复初始化带来的不必要开销，甚至有开发者用 C/C++ 写 PHP 扩展的方式，重新实现了 Zend Framework ，使前端控制器只需要全局初始化一次（Yaf Framework）。</p></blockquote>

<p>估计挂号网也是用zend写的。也就难怪这东西做出来的html和url确实和rails像极了。</p>

<p>同时，听说<a href="http://xiami.com">虾米网</a>改用PHP了，不过我以前记得是Rails写的。看网站的介绍，推测是08年年底他们改换成的PHP，呵呵，看来不关注这个网的时间蛮久了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[核心期刊]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/09/06/article-issues/"/>
    <updated>2012-09-06T16:35:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/09/06/article-issues</id>
    <content type="html"><![CDATA[<p>忙了一阵子的投稿，也积累了一些经验。随手记录一下。</p>

<p>投了《计算机系统应用》和《计算机应用与软件》，两篇稿子处理的都还挺快，基本一个月的样子，也都修录了。
比较起来，北京的这个杂志给的意见更针对文章一些，确实点到了文章的问题。上海的这篇因为已经是第二篇文章了，虽然主题是不同的，但手已比较熟悉，所以问题较少。专家提的意见也只能说要提终归提得出问题来的。</p>

<p>运气还算不错，写了两篇投了两个地方都中了，到录用为止的过程都还挺顺利。当然，个人相信自己的水平比普通研究生肯定高多了。毕竟年龄长了近10岁，
又是扩招前的上海交大的计算机本科生，2个半月边工作边复习能统考踏破复旦线。仅凭此三点，自信强过很多研究生。即像我这把岁数的研究生能有几人？
如今研究生每年的录取人数是我们当年本科生的一倍多，质量对比又如何？2个半月过复旦线我在10年前也是做不到的，没有这些年中获得的极大的进步怎么可能？</p>

<p>夸完自己，谈谈对期刊投稿的感受。</p>

<h3>计算机系统应用</h3>

<blockquote><p>杂志社还是不错的。录用过程规范，也不收审稿费。投稿声明、打印材料等的要求都比较正规。专家审稿也是仔细看的，指出的问题还是客观和贴切的。
杂志的文章总体来说应用性比较强，不像有些期刊纯玩公式和理论，看着高深但仔细分析一下内容其实毫无新意。这个杂志的文章往往还是有点创新内容的。
对作者的身份背景不太在意，但是连未毕业的本科生也能发文就有点太无章可循。目前是科技期刊的核心，不过在我们系倒也还是承认是二线核心期刊（一线是几个学报）。
录用后发表编辑说半年左右，这样从投稿开始算的话基本上七八个月也就可以了。总体说来值得一投。</p></blockquote>

<h3>计算机应用与软件</h3>

<blockquote><p>尽管有些评论认为这个杂志在核心期刊里面有点烂，但实际文章看下来大部分文章还是有点用的。在二线核心期刊里应该算是好的。
缺点就是版面费高，400元/页。出版时间长，要一年，可以加急，费用300元，大约提前2-3个月。审稿时间还是挺快的，就是1个月会出结果。还有短信通知。也不需要递交签字等保密材料。
如今又是北大核心，也是cscd扩展的核心，所以这个杂志还是挺热门的。总而言之，和上海的it很类似，很正规很不错，但离顶级完全不搭界。
鉴于在上海的地理位置，以后还是会投的。毕竟各种服务还是很到位的。出版时间能控制在6-8个月就更好了。
其实兜了一圈下来发现还是上海的杂志比较好。当然就是东西贵了点。但档次、态度等都是一流的。</p></blockquote>

<p>通过这次发文，对核心期刊也有所了解。实际上，核心期刊本身就是一个笼统的概念，名称应该来源于北大图书馆每隔几年发布的《中文核心期刊要目总览》(北大)，
计算机、自动化方面收入31个刊物，排名低于这个就没戏了。蛮多地方就用这个做标准的。似乎上海交大就是这样。
但是，实际上又不止这个标准。用的很多的另外一个标准是《中国科学引文数据库》(CSCD，中科院),很多职称评审又只看这个，CSCD又分核心和扩展，前者700多，后者三四百。
此外，又有《中国科技期刊引证报告》（科技部）。能在这里面的某一个入选，就能够算作核心期刊。如交大图书馆的核心期刊查询，属于其中之一的均能查到内容，
否则就是空白。EI/SSCI则是国际收入，核心期刊里除了前三个，另外的被收录的并不多。不过几种大学的学报是收录在其中的，比如上海交通大学学报，山东大学学报等。
除非用于博士毕业，不然核心期刊投投也足够了。</p>

<p>严格的权威期刊，只有计算机学报和软件学报能算，计算机研发也顶多勉强算，自动化和通信的学报基本也算。
当然，每个地方会再扩展。从我了解下来的情况看，小微被纳入的比较多，计算机科学也有挤进去的案例。下面摘录一下复旦大学计算机的指导目录，
确实是专家总结过的，对计算机系的学生还是很有指导意义的。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>国内期刊指导目录
</span><span class='line'>计算机科学与技术
</span><span class='line'>K0812001  计算机学报 中国计算机学会、中科院计算研究所    A类
</span><span class='line'>K0812002  软件学报    中国计算机学会、中科院软件研究所    A类
</span><span class='line'>K0812003  模式识别与人工智能 中国自动化学会、国家智能计算机研究开发中心 A类
</span><span class='line'>K0812004  计算机研究与发展    中科院计算研究所、中国计算机学会    A类
</span><span class='line'>K0812005  自动化学报 中科院自动化研究所、中国自动化学会 A类
</span><span class='line'>K0812006  小型、微型计算机系统  中科院沈阳计算机技术研究所 A类
</span><span class='line'>K0812007  Journal of Computer Science and Technology  中科院计算技术研究所  A类
</span><span class='line'>K0812008  计算机应用与软件    上海计算技术所、上海计算机软件技术开发中心 B类
</span><span class='line'>K0812009  计算机科学 国家科技部西南信息中心   B类
</span><span class='line'>K0812010  计算机工程 华东计算技术研究所、上海市计算机学会  B类
</span><span class='line'>K0812011  计算机技术 华北计算所 B类
</span><span class='line'>K0812012  计算机工程与应用    华北计算技术研究所 B类
</span><span class='line'>K0812013  计算机工程设计   中国航天科工集团二院706所    B类
</span><span class='line'>K0812014  电信科学    中国通信学会  B类
</span><span class='line'>K0812015  中文信息学报  中国中文信息学会、中科院软件研究所 B类
</span><span class='line'>K0812016  信息与控制 中国自动化学会、中科院沈阳自动化研究所   B类
</span><span class='line'>K0812017  机器人   中国自动化学会   B类
</span><span class='line'>K0812018  中国图形图象学报    中国图形图象学会、中国科学院遥感应用研究所、中科院自动化研究所   B类
</span><span class='line'>K0812019  中文信息    中国中文信息学会    B类
</span><span class='line'>K0812020  微型电脑应用  上海市微型电脑应用学会   B类
</span><span class='line'>K0812021  计算机工程与科学    国防科学技术大学计算机学院 B类
</span><span class='line'>K0812022  计算机系统应用   中科院软件所  B类
</span><span class='line'>K0812023  计算机集成制造系统—CIMK  国家863计划CIMS主题、中国兵器工业集团第210研究所 B类</span></code></pre></td></tr></table></div></figure>


<p>美中不足的是漏了一个《计算机应用》，这个期刊个人感觉还是很有特色的。从我个人感受而言，下述的几个还不错：</p>

<table>
<tr><td width="20%">        </td><td width="10%">北大</td><td width="10%">科技部</td><td width="10%"> 中科院</td><td width="25%">地方</td><td width="20%">审稿费/版面费 </td><td></td></tr>
<tr><td>计算机应用与软件      </td><td>1</td><td>1</td><td>E</td><td>上海</td><td>100 400/页  </td><td></td></tr>
<tr><td>计算机应用           </td><td>1</td><td>1</td><td>1</td><td>中科院成都计算机应用研究所</td><td>50 350/页   </td><td></td></tr>
<tr><td>计算机系统应用     </td><td></td><td>1</td><td></td><td>北京中科院</td><td>0 200/页  </td><td></td></tr>
<tr><td>小型微型计算机系统  </td><td>1</td><td>1</td><td>1</td><td>中国科学院沈阳计算机研究所</td><td>100 250/页  </td><td></td></tr>
<tr><td>计算机科学                </td><td>1</td><td>1</td><td>1</td><td>重庆</td><td>150    400/页  </td><td>喜录增刊 </td></tr>
<tr><td>计算机应用研究     </td><td>1</td><td>1</td><td>E</td><td>国防科技大学计算机学院</td><td>100  300/页  </td><td>喜录增刊 </td></tr>
<tr><td>电信科学      </td><td>1</td><td>1</td><td></td><td>北京:中国通信学会</td><td>0 200/页  </td><td></td></tr>
</table>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[处约]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/08/18/chuyue/"/>
    <updated>2012-08-18T20:05:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/08/18/chuyue</id>
    <content type="html"><![CDATA[<p>下午偶然发现清华保研竟然会招二流学校的本科生。这倒大大出乎我的意料。毕竟在我读书的年代校外保研也是本校推荐，而教育发展到现在竟然校间互保
已经变成一个学校的行为了。当然，难度还是有的。首先要成绩排名前5%，如果参加过大赛或者发表过论文则会极大简化初试和复试的难度。但说句实在的，
有这方面志向又有人指导的话并不难做到。</p>

<p>随即得瑟地去跟老婆说，如今我还在读书的话估计也能保研清华。老婆看看我，然后说现在根本不是比个人能力的时候，也不是你们当年主要靠个人表现就
能解决基本问题的年代。现在去保了清华能搞定房子车子吗？ 顿时让我无语。毕竟清华的金字招牌尽管很牛，硕士毕业二三十万起步是做得到的，但要更进
一步那是很难的。至于凭薪水在北京上海搞定房子那基本也是不太可能的事情。于是陷入更大的思绪混沌中。毕竟清华的研究生还是相当诱人的，而搞不定
这些基本的东西，那么这么诱人又有什么意义呢？</p>

<p>仔细想想，确实是我犯了读书人的毛病，太高看清华了。首先，从计算机系、软件学院会招二流保研生就可说明实际质量不过尔尔。三清团的说法不是没有
道理的。其次，读书解决一切问题的想法是不对的。曾文正公当翰林期间都是牢骚满腹，彼时中进士的三年不过几百人都有那么多牢骚，那么多的生活拮据，
何况如今已经扩招几万倍的大学研究生。</p>

<p>更严重的是我又弄差了读书的意义。</p>

<blockquote><p>凡人多望子孙为大官，余不愿为大官，但愿为读书明理之君子。勤俭自持，习劳习苦，可以处乐，可以处约。此君子也。
凡富贵功名，皆有命定，半由人力，半由天事。惟学作圣贤，全由自己作主，不与天命相干涉。</p></blockquote>

<p>保研之事半由天命半由人力，读书明理，勤俭自持，习劳习苦，处乐处约才是个人该下功夫的地方。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hadoop集群安装手记]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/08/06/hadoopji-qun-an-zhuang-shou-ji/"/>
    <updated>2012-08-06T16:43:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/08/06/hadoopji-qun-an-zhuang-shou-ji</id>
    <content type="html"><![CDATA[<p>ssh的使用公钥登录配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-keygen
</span><span class='line'>ssh-copy-id -i ~/.ssh/id_rsa.pub 192.168.203.198
</span></code></pre></td></tr></table></div></figure>


<p>=======
<strong>数据源的输入才是Hadoop方便地方</strong></p>

<p>定义一个数据源，可以是数据库也可以是文件夹，当然最好是hadoop的分布式文件夹<br/>
读取数据的划分是hadoop自动进行的，开发只需要定义要数据源就行<br/>
比如一个10000行的记录，如果有10个计算进程去做的话，hadoop会自动把数据切成1000行<br/>
然后你写的代码就是读入一行数据后要做些什么操作。比如说算总值或者平均值的话，就把数字全加起来，这个过程叫Map<br/>
然后10个计算进程都算出来了，需要汇总结果，汇总的进程就叫reduce<br/>
map/reduce之间传输的内容就是map的输出，一般也是一个key value，但是这里面具体赛什么是随意的</p>

<h1>文献</h1>

<p><a href="http://www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux-single-node-cluster/">创建一个节点</a><br/>
<a href="http://www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux-multi-node-cluster/">创建集群</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ship It]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/08/03/ship-it/"/>
    <updated>2012-08-03T09:38:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/08/03/ship-it</id>
    <content type="html"><![CDATA[<p>这是此次6本其中3本项目管理书籍中读起来最快速的一本。如果说《用户故事》是告诉你需求怎么收集，《Manage It！》是
告诉大家如何给项目选择模型、设置生命周期，那么这本书则是开发中关于项目构建的干货，同时也牵涉到了一点项目团队组织的问题。</p>

<p>全篇最精彩的部分在于<strong>基础设施</strong>章节。提出了基础设施的存在是为了解决让人头疼的问题，而且是用轻松的方式予以解决。
<strong>版本库</strong>、<strong>特性跟踪软件</strong>、<strong>项目待办事宜软件</strong>、<strong>构件机</strong>、<strong>自动构建系统</strong>均属于此类。它们确实是工具和方法
但又不仅仅只是方法。实际上基础设施通过提供便利的方式轻松地解决了在PM中提到的那些需要处理的问题。对于节约成本、方便沟通、
加速进度、确定工作范围、提高质量都有巨大的促进作用，而不仅仅只是解决某一领域的问题。真正的进步只能在于人和基础设施，
这些才是可持续可重复的。</p>

<p>里面的实践大部分应该说我已经在平时的工作、项目管理中实践起来。当然有些东西是没有的，比如构件机，比如自动测试。直到现在
我依然认为写自动测试带来的工作量的增加很可能是得不偿失的。而且Web UI的测试难点依然没有真正好的办法解决。但其他几条应用已久
而且确实效果还是很不错的。另外自动构建至今也没流行开来。对于Rails等基于脚本语言的开发方法来说，自动构建还算简单，但对于Java来说可能CruiseControl
还是过于复杂了。</p>

<p>这本书的原版成版于2005年，很多思路和37signals的类似，确实是中小型团队合作项目的典范。</p>

<p>前面已经提到，此书关注的是内部项目怎么开发，所以无论需求怎么搜集（用户故事、用户案例、用户场景）最终都需要把产品分解
为<strong>特性</strong>，特性分解为<strong>任务清单</strong>。所有的任务清单都需要记录，<strong>如果没有记录就像从来没有发生过一样</strong>。合作过程中，
基础设施提供保障，<strong>任务清单则是主要沟通交流的对象</strong>，也是控制彼此节奏和提交物质量的重要根据。<strong>每日例会</strong>的内容
和清单相关，<strong>代码审查</strong>也和清单相关。可以说，<code>基础设施+任务清单+沟通+动手=软件的优良构建</code>。</p>

<p><strong>曳光弹</strong>的开发其实就是概要设计、分模块开发的意思。强调能独立的组件就独立，彼此通过接口来交互。只要接口稳定，内部
实现可以随意变化。这样替换模块也就比较方便。而且各个模块也比较容易水平扩展，哪里有瓶颈只要增加相应的处理资源即可。
所谓曳光弹，就是先把各组成部分串联起来，让系统可以动起来，类似于提供出一个原型，可以让用户触摸、点击、反馈，这几块
当然是软件开发尤其是应用软件开发应该的样子。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mange It! Your Guide to Progmatic Project Management]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/07/31/mange-it-your-guide-to-progmatic-project-management/"/>
    <updated>2012-07-31T09:04:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/07/31/mange-it-your-guide-to-progmatic-project-management</id>
    <content type="html"><![CDATA[<p>忙着写投稿的论文，这两个礼拜都没怎么打理自己的博客。买的6本书倒是看完了3本。</p>

<p>数学之美给打开了思路，用户故事则和我平时做的事情很接近。而现在这本《项目管理修炼之道》则给我的收获相对少一些。
如果只是一个死记硬背各种开发模型的人，看到这本书可能会有恍然大悟的感觉。但于我而言，一直坚持独立思考，所以很早
以前就看明白了所谓迭代、敏捷、增量和瀑布模型都是有关的，核心的一点都是把顺序模型的大瀑布打破变成小瀑布，只是
打破的方法各有差异耳。但是，能把话说得这么明确的项目管理书籍可能也就只有这一本。这只能说作者的诚实和自信造就
了这本书，也对不自己动脑子的pm们提供了参考。从这点上说，其意义还是很明确的。</p>

<p>作者的另外一个特色就是她确实<strong>是</strong>一个项目经理。因为她其他事情基本不参与，比如开发比如测试。所以她偏重管理以及
软技能谈的更多些，如何与老板交涉也谈的很多，其实和客户交谈反而不如用户故事里讲的多。</p>

<p>项目仪表盘那张，同燃尽图累计故事图很类似，其实还是七武士里面那种画圈的方式最简单明了。书中还提到了多用贴纸，不过
我对即时贴总有种混乱不堪的感觉。试试看吧，反正即时贴的成本确实很低。总之，本书适合给不怎么爱思考的背书派项目
经理使用，其精华部分在于对各种开发模型的比较与剖析。是我读过的关于开发生命周期模型介绍中最诚实、最坦露本质内容
的一本书。</p>

<p>ps. heroku把默认的域名改成herokuapp,明显域名变难看了许多。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heroku's Buildpacks and Redeploy for jekyll and octopress]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/07/21/herokus-buildpacks-and-redeploy-for-jekyll-and-octopress/"/>
    <updated>2012-07-21T09:46:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/07/21/herokus-buildpacks-and-redeploy-for-jekyll-and-octopress</id>
    <content type="html"><![CDATA[<p>Heroku是永远能给人带来惊喜的厂商，<a href="http://blog.heroku.com/archives/2012/7/17/buildpacks/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+heroku+%28Heroku+News%29">Builpacks</a>
只得好好研究一下。从模式上来说，其实就是利用了adapter+template的方式，把变化的部分提取出来变成<strong>buildpack</strong>。
难能可贵的是，heroku是允许定制化对这部分内容进行操作和配置的。</p>

<p>试了一下，jekyll的是完全可以产生的。但是对octopress并非完全适用。
首先，对heroku而言，默认有一个<code>.slugignore</code>文件中会把source等3个文件排除在外，而没有这3个文件无法generate。但有了这3个文件，slug的体积就变大。</p>

<p>其次，有个gem需要使用python的库，无法在heroku上直接运行。</p>

<p>而作为苦逼的中国用户，还会碰到编码问题。</p>

<p>合在一起，其实原因可归结为一个，即如果generate牵涉的东西太多则不适合在heroku这样的平台按照 build/run的方式使用，毕竟环境不是完全能模拟本机的，
也不是自己的服务器环境可以自己装。</p>

<p>所以，在浪费了无数的时间之后，决定还是先用略显不舒服的办法继续运行。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[levels]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/07/13/levels/"/>
    <updated>2012-07-13T10:18:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/07/13/levels</id>
    <content type="html"><![CDATA[<p><img src="http://octopresszhangyu.herokuapp.com/images/screen_print/952-technical-hierarchy.png" alt="levels of computer engineering" /></p>

<p>来自37sigals的<a href="http://37signals.com/svn/posts/3200-levels-of-aspiration">转载</a></p>

<p>个人觉得应当以‘Really works’为最低目标， 大部分组件的使用都应该达到&#8217;Well engineered&#8217;，
至于Beautiful和Moving industry forward则要看运气了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The hardware architecture of 37 signals]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/07/11/the-hardware-architecture-of-37-signals/"/>
    <updated>2012-07-11T11:10:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/07/11/the-hardware-architecture-of-37-signals</id>
    <content type="html"><![CDATA[<p>37signals发文讲了他们的<a href="http://37signals.com/svn/posts/3202-behind-the-scenes-the-hardware-that-powers-basecamp-campfire-and-highrise">硬件架构</a></p>

<p>老外的硬件设施还是很先进的。比如Dell C5220可以有12个sleds，每个sled可以插一个cpu和4根内存条。这样一个3U高度的机箱
就能装进12个u 48根内存条。目前37signals的rails进程跑了8个sleds。
网络设施中1G的是主流，个别的有10G的。存储是大量采用了ssds，磁阵用的倒是EMC的方案，实现了400TB。
备份直接用的S3 storage。</p>

<p><img src="http://octopresszhangyu.herokuapp.com/images/screen_print/37%E7%A1%AC%E4%BB%B6%E6%9E%B6%E6%9E%84.jpg" alt="37硬件架构" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[User Stories Applied: For Agile Software Development]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/07/11/user-stories-applied-for-agile-software-development/"/>
    <updated>2012-07-11T09:43:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/07/11/user-stories-applied-for-agile-software-development</id>
    <content type="html"><![CDATA[<p>惊讶地发现我原来一直是按<em>scrum</em>在做项目啊。除了自动化的测试案例写的不是很多，其他的特点倒是相当符合。
比如需求是条目化的随后通过交谈细化的，最终的交付物代码和软件才是最重要的。团队里面的角色很平行化，
一个team Leader+程序员，每个团队成员都要完成设计、数据库管理和测试工作，这样可以提高开发效率。
功能也是随着开发的进展而逐步加入。
Backlog就是一张功能list，只是没有引入Sprint Backlog进行分阶段的todo处理。
最大的缺失是没有客户驻场，另外就是Sprint的周期不够明确。但总体来说，从团队组织到任务完成的方式上，都是很接近Scrum的。
而且依据我的经验来说，对于3-8人的团队，中等规模，需求又易变化的项目来说，这么做是相当有效的。
至于测试，根据新的实践总结，有些东西值得写测试有些就不值得，衡量性价比永远是王道。</p>

<p>下面是一些笔记。个人认为本书最地道的地方就是将用故事与需求规格、用例、用户场景进行了比较。从实际开发中看，
我们日常使用最多的其实确实是用户故事。以后可以明确自己到底在用啥方法，而不必总是愧疚开发方式不够正规。<br/>
写故事的技巧可以进一步加强，比如尽量写封闭的，让人感觉完成某个任务的故事，而不是永远做不完的故事。<br/>
估算的数字可以跨度大一些，预估不到的东西不如估的多一些。<br/>
燃尽图和累计故事图是很好的进度跟踪与计划工具。</p>

<ul>
<li>用户故事：

<ul>
<li>用来讨论的主题汇总   card</li>
<li>交谈重于一切        conversation</li>
<li>确认，写在背面的测试 confirmation</li>
</ul>
</li>
</ul>


<p>拖网式的捕捞，从粗到细，从大到小；深度遍历用户故事</p>

<ul>
<li>识别用户<strong>角色</strong>，其实就是对用户进行分类。

<ul>
<li>对角色的合并归类剔除，以及实例化特殊角色的用户</li>
</ul>
</li>
</ul>


<p>把用户故事分成一个一个周期进行迭代开发；对不确定的事情在故事上拆成两个，分到两个阶段中去完成</p>

<p>最好是与用户直接联系，有些是有只能通过<strong>用户代理</strong>来沟通，<strong>开发经理</strong>不是好的用户代理，因为最终不是他来使用；销售人员、市场团队、领域专家、客户都是还算不错的用户代理。</p>

<p>让客户编写测试案例</p>

<p>用切蛋糕的方式来切用户故事，而不要用切奶油、切面粉的分层次的方式来切，对应用编程来说，这点并不占便宜。</p>

<p>编写封闭的故事。就是编写可以完成的故事，构成一个闭合故事的集合。
使用户有成就感。随着一个有意义的目标的实现而结束的故事，能让用户感觉使用后完成了某个任务。所以，登录并不是闭合性的故事。</p>

<p>故事点的估算：预定值可以拉得很开，比如<br/>
1/2, 1, 2, 3, 5, 8, 13, 20, 40, 80<br/>
这个类似于wbs的估算，实质是一回事情。所谓的点数是团队内部相对的度量单位</p>

<p>迭代指每次选择一组用户故事，安排好每一轮实现的故事。1-4周是一个迭代周期，5-10次的迭代都是很正常的。<br/>
迭代计划中需要对故事继续分解。如可以查看酒店的相关信息可以分解成：</p>

<ul>
<li>设计展示html</li>
<li>酒店的图片显示和介绍</li>
<li>酒店的地图位置编写</li>
<li>酒店设施和服务清单编写</li>
<li>后台数据库建表与查询</li>
<li>研究显示地图</li>
<li>帮助手册</li>
</ul>


<p>测量就是记录。<br/>
<strong>燃尽图</strong>横轴是时间纵轴是剩余任务故事点。<br/>
<strong>累计故事点图</strong>， 用于比较计划与实际完成的曲线图。<br/>
 #故事 #故事点 #状态   &#8211; 在迭代中完成的故事表格
 迭代开始的故事点，在迭代中完成的， 改变的估算， 新加故事的故事点， 迭代结束时故事点， 然后就是迭代1，迭代2的进行记录</p>

<p>用户故事与用例的区别在于前者更类似于后者的成功场景和扩展，但是前者只是一个开始，用例则是文章写完就完毕了。
故事只是用来提示进一步和用户商谈的。很可能过一阵子就被撕掉了。用例极其容易过早陷入界面的细节中。</p>

<p>卡片也可以用软件记录，也可以用wiki记录。<br/>
用户界面以减少用户学习成本为本。<br/>
故事可以保留也可以销毁。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数学之美]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/07/02/shu-xue-zhi-mei/"/>
    <updated>2012-07-02T23:47:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/07/02/shu-xue-zhi-mei</id>
    <content type="html"><![CDATA[<p>在京东买的六本书都到了.这次的书普遍不是很厚.当然,3本项目管理的书加起来还是很厚的.也要有600多页.</p>

<p>分了2本给同事,自己抱起&lt;数学之美>先看了起来. 花了一周的时间, 这本书基本看完了. 先说说篇幅.</p>

<p>正文是256页,但是排版是很松的, 有点像经管类书籍的排版, 所以这本书的篇幅并不大.主要是27个章节, 实际就是27片文章, 大部分的来源是google黑板报.
吴军博士深入浅出的能力很强,所以大部分时候不需要大家去推算数学公式, 他会把公式的含义和影响解释的很清楚. 这是他的本事. 通篇来看, 文章大致可以
分成下面几类:</p>

<ul>
<li>信息论的基础知识<br/>
这部分主要包括第一章的信息, 文字和数字,  有些细节很有趣, 比如罗马数字原来里面含有加减法的含义</li>
<li>数学原理的应用<br/>
这个主要是以google在语言分析 语音分析 拼音输入法 是集中体现了马尔科夫链和统计学; 余弦定理与新闻分类/文章分类/自动分类</li>
<li>google的技术<br/>
数学知识只是用于帮助解决计算复杂度, 而不是作为解题的思路和理论基础.集中体现在PageRank, TF-IDF中</li>
<li>密码学的知识<br/>
当然,密码学本身也用到了数学尤其是数论的内容.包括用指纹减少信息量,提高存储和比对的效率,</li>
<li>一些知名的算法<br/>
主要有维特比</li>
<li>名人传记<br/>
这部分总有自抬身价的意思.特别是开复开复的出现很多, 也算是sns互吹了.有特色的就是这些专家大都还处于这个时代,相当有新鲜感,
当然,维特比这个算法也被当做经典算法我只能说很多东西其实运气更加重要.第一个发现的人得到特别的奖赏也是应该的.</li>
</ul>


<p>整本书有些部分是让我第一次了解了语音/文章识别用到的其实都概率推测的东西, 以及google的页面排序和TF-IDF这些指标产生. 而有些内容则触发为进一步
了解其他知识.比如昨天刚刚搞懂的频分/时分/码分复用, 这东西第一次在网络课上听到已经是十二三年前了, 即便考研的时候也未弄懂, 而这次在介绍维特比
和cdma的时候有看见了,然后再看看谢希仁的教材,竟然就懂了. 那个向量正交真的是很精巧的设计, 这样才使得接收端收到叠加信息后还能还原出来.</p>

<p>除了介绍一些新颖的做法和能引发看其他内容的兴趣, 文章也提到了一些google的文化甚至美国工程师的文化.实际上无论美国还是中国,第一流的工程师还是
向往在大公司工作, 只是美国有那么一部分喜欢创业的工程师, 中国这个比例少一些而已.否则google也不会起先山寨遍地后来又系统化地解决问题.其实两边
一流的工程师或者某个领域的权威专家都是愿意给大公司打工,也只有大公司才养得起这些高手吧.</p>

<p>整本书让人<strong>眼界打开了不少</strong>, 也能<strong>引起自己学习其他内容的兴趣</strong>, 这当然就是一本<strong>好书</strong>了. 不过,这本书的内容毕竟讲的都比较浅显, 并不是一本很耐看的书.
属于速食图书里面的营养品.提取一下主题,感兴趣的还是要自己继续找材料摸索练习才行.但是无论如何,这都是一本好书,而且很值得一看,投入产出比相当高
的一本书.否则也不值得为了它写一篇书评.</p>

<p>此外, 就是第一次了解了吴军博士. 他的履历确实相当漂亮, 文字写的也很棒, 这样的人才应该是<strong>中国IT业界的领军</strong>
人物.才是中国一流大学工程师的代表.</p>

<p>最后是分类做的一些<strong>笔记</strong>.</p>

<ul>
<li>科普</li>
</ul>


<p>文字按照意思有<strong>聚类</strong>, 类似机器学习的聚类, 副作用是有歧义性.</p>

<p>罗塞塔石碑上3种文字提供了冗余和翻译的基础.</p>

<p>数字从文字中被单独抽象出来表达.大部分是十进制的, 不过 也有玛雅人用的20进制,所以他们的一个世纪是400年.<br/>
中国数字的编解码规则是乘法.</p>

<p>托勒密的60个圆的点球模型,实现了365天+4年一润的模型.格里格拉教皇对日历闰年的调整,世纪末最后一年的闰年取消,每400年加一个闰年.
哥白尼的日心说用来更少的圆8-10个,但误差极大,直到开普勒改成这几个椭圆才最终令人信服.牛顿最后又加上了万有引力.</p>

<ul>
<li>马尔科夫与动态路径</li>
</ul>


<p>自然语言的处理从<strong>设立规则</strong>发展到了<strong>统计</strong>算概率, 就是对最终结果进行对比, 这个过程走的很漫长.<br/>
语音搜索和自动翻译用的技术是一样的,全部用的统计语言模型.最后落实到出现的次数比 P(wi|wi-1) = #(wi-1, wi)/#(wi-1)
分词也是一样的,目的就是计算出每种分词后概率最大的那个.</p>

<p>马尔科夫是用于概率简化,把前面n个条件简化成一个或者稍多一点的.</p>

<p>动态规划其实就是一种维特比算法, 然后再加入按group分成队列的话, 就能应付大部分请求了.<br/>
拼音输入法的原理也是概率统计推断, 从起点到终点找出最短路径.<br/>
条件随机场与句法分析,让被分析的内容成为句子的概率最大.<br/>
维特比和维特比优化路径微观算法.</p>

<ul>
<li>PageRank<br/>
信息熵: log32=5, 其实就是需要几位bit才能表示状态, 这也决定了搜索所需要的次数.
<code>H=-(p1.logp1 + p2.logp2 + ... + p32.logp32)</code></li>
</ul>


<p>信息的作用是<strong>消除一部分不确定性</strong>, 通过寻找<strong>相关的</strong>信息来消除.自然语言的处理就是寻找相关信息的过程.</p>

<p>搜索引擎的基本原理是对关键字做索引,然后用布尔代数计算结果.</p>

<p><strong>网页质量</strong>信息 &amp; <strong>网络相关性</strong>信息<br/>
质量是根据被引用的链接数量来做排序因子的, 可以看出他们是有学术背景的. Page眼中,页面就是一个节点, 链接就像一个弧, 把互联网用矩阵来进行描述.
排名公式:
<code>Bi = AxBi-1</code><br/>
其中Bi是N维列向量, A是一个N维方矩阵, 将上公式反复迭代10次,可得到收敛的结果,起初和假定B的每个数字都是1/N. A的值则是各元素(各网页)之间的链接
数字列表.<br/>
单文本词频(Term Frequency), 是在文章中出现的次数/总词汇数. 简称<strong>TF</strong><br/>
实际应用时又有加权处理.权重大小根据该词在所有页面中出现的次数来确定,出现多的权重就小,出现少的权重就大. 简称<strong>IDF</strong>, 公式为log(D/Dw).<br/>
<code>Tf-IDF = TF1xIDF1 + ... + TFNxIDFN</code><br/>
IDF之所以使用Log,其实就是采用每个词的信息量作为权重,而根据香农的熵公式,I(w) = -P(w)logP(w)</p>

<ul>
<li>向量相关</li>
</ul>


<p><strong>余弦定理与新闻分类</strong>,实质就是计算两个向量的夹角, 以明确相关度.计算公式就是两个向量内积然后除以向量模的乘积.</p>

<p>反SEO的一些内容,本质就是要把噪音去除, 比如把出站链接相似的网站屏蔽</p>

<p>CDMA技术. 海蒂拉马尔发明的实际上是频率跳变的码流, 然后才被用来当做复用. 这里面正交向量当做code的设计思路使得多种信号在叠加后也能按各个code分别进行还原, 这个整个设计最
重要的地方.也在此,进一步明白了频分/时分/码分的区别和特点.吴军至少写书的时候还不懂cdma背后的数学原理,否则他肯定会谈的.</p>

<p>文本自收敛分类.其实就是不停迭代计算向量.使得各类内部的距离d最短,而类间距离D最长.</p>

<ul>
<li>随机数的映射</li>
</ul>


<p>信息指纹的核心思想是通过随机数函数把内容转换为较短的随机数,这样可以用来做判定集合相同/反盗版/判定集合基本相同.即提取对应的信息保持足够简短,
这样的好处是存放和检索的成本大大下降.MD5的重复概率只有一千八百亿亿次,2的六十四次方.</p>

<p>布隆过滤器.其实就是把原始信息投射到一个几亿字节的几位中去.然后通过判断这几位是否为1,来明确后来的信息是否在要过滤的集合中.本质上就是一种随机数的算法.弱点是有一定的假阳性.</p>

<ul>
<li>其他</li>
</ul>


<p>爬虫其实就是按图论进行遍历.欧拉七桥的图论定理.每一个顶点的度必须是偶数.具体有广度优先还是深度有限?页面分析和URL提取?URL如何存放的瓶颈?</p>

<p>密码学基础,公钥私钥</p>

<h4>人物</h4>

<p>贾里尼克,捷克犹太人,吴军美国大学语言语音处理中心的创始人<br/>
马库斯,自然语言转向统计方式处理的另一个教父级别的人物, 还建立了语料库,让大家有一个平等的环境进行算法比较测试<br/>
辛格博士, AK47, 简单有效</p>

<h3>推荐书单</h3>

<p><a href="http://202.120.227.11/F/DN9IEV1ANU9DYR3D8YYF2FX84MGGMV6U9B37KVBLASBNGDQPNB-55367?func=item-global-exp&amp;doc_number=000573910&amp;item_sequence=000010&amp;sub_library=LJCXK">信息论基础</a> Cover<br/>
<a href="http://infolab.stanford.edu/~backrub/google.html">google.html</a><br/>
地址分析的有限状态机编写,还有基于概率的有限状态机<br/>
相似hash的算法(Simhash)</p>
]]></content>
  </entry>
  
</feed>
