<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hegel2011的博客]]></title>
  <link href="http://octopresszhangyu.herokuapp.com/atom.xml" rel="self"/>
  <link href="http://octopresszhangyu.herokuapp.com/"/>
  <updated>2014-05-10T16:39:56+08:00</updated>
  <id>http://octopresszhangyu.herokuapp.com/</id>
  <author>
    <name><![CDATA[Hegel 2011]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails2.3老版本的迁移安装手记]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/05/08/rails2-dot-3lao-ban-ben-de-qian-yi-an-zhuang-shou-ji/"/>
    <updated>2014-05-08T22:08:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/05/08/rails2-dot-3lao-ban-ben-de-qian-yi-an-zhuang-shou-ji</id>
    <content type="html"><![CDATA[<p>一个五六年前开发的Rails应用更换主机需要重新部署。这个Rails的版本还是2.3.5，Ruby版本只是1.8.7. 因为是内部的一个小应用，所以一直也没翻新升级。彼时还没有bundle，而现在对版本依赖的管理已经离不开bundle了。
下面就是记录一下如何用bundle来安装Rails 2.3的应用。</p>

<h3>下载ruby 1.8.7</h3>

<p>减少麻烦，还是保持一致的版本迁移。新机器暂时没有安装其他ruby版本的需求，所以暂不考虑rbenv。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget http://ruby.taobao.org/mirrors/ruby/ruby-1.8.7-p358.tar.gz
</span><span class='line'>tar -zxvf ruby-1.8.7-p358.tar.gz
</span><span class='line'><span class="nb">cd </span>ruby-1.8.7-p358
</span><span class='line'>./configure --prefix<span class="o">=</span>/usr/local/ruby187
</span><span class='line'>make
</span><span class='line'>make install
</span><span class='line'>/usr/local/ruby187/bin/ruby -ropenssl -rzlib -rreadline -e <span class="s2">&quot;puts :success&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>看到输出<code>success</code>后，证明ruby各安装库已全部编译进去。主机是一台CentOS 6.4，所以安装1.8.7相当之顺利。
安装完毕后，把ruby的运行路径加到环境变量PATH的最前面。</p>

<h3>安装rubygems</h3>

<p>这个已经很久没有手动安装了，ree和ruby1.9之后rubygems都集成到ruby里面去了，1.8.7还是需要手工安装的。为了减少麻烦，比如能安装thin、能使用bundle、又尽量满足五年前的gem环境，选择了1.4.0.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget http://rubyforge.org/frs/download.php/73763/rubygems-1.4.0.tgz
</span><span class='line'>tar -zxvf rubygems-1.4.0.tgz
</span><span class='line'><span class="nb">cd </span>rubygems-1.4.0
</span><span class='line'>ruby setup.rb
</span></code></pre></td></tr></table></div></figure>


<h3>安装Oracle即时客户端和ruby-oci8</h3>

<p>这个东西现在安装倒比以前简单些了。具体可以参考ruby-oci8的官方帮助，关键是要下载3个instant相关的客户端。其实sdk等两个包是很小的，最后都解压到一个目录下。随后，就是设置<code>LD_LIBRARY_PATH</code>的值。关键一点是注意不要配错这个环境变量指向的路径。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span>/opt/instantclient_10_2:/usr/local/lib:/usr/lib
</span><span class='line'>wget http://dl.bintray.com/kubo/generic/ruby-oci8-2.0.6.tar.gz
</span><span class='line'>tar -zxvf ruby-oci8-2.0.6.tar.gz
</span><span class='line'><span class="nb">cd </span>ruby-oci8-2.0.6
</span><span class='line'>make
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure>


<h3>Gemfile和bundle</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s2">&quot;http://ruby.taobao.org&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails&#39;</span><span class="p">,</span> <span class="s1">&#39;2.3.5&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;activeresource&#39;</span><span class="p">,</span> <span class="s1">&#39;2.3.5&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;activesupport&#39;</span><span class="p">,</span> <span class="s1">&#39;2.3.5&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;capistrano&#39;</span><span class="p">,</span> <span class="s1">&#39;2.5.17&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;fastthread&#39;</span><span class="p">,</span> <span class="s1">&#39;1.0.7&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;highline&#39;</span><span class="p">,</span> <span class="s1">&#39;1.5.2&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;json_pure&#39;</span><span class="p">,</span> <span class="s1">&#39;1.4.3&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;nokogiri&#39;</span><span class="p">,</span> <span class="s1">&#39;1.4.1&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rack&#39;</span><span class="p">,</span> <span class="s1">&#39;1.0.1&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rake&#39;</span><span class="p">,</span> <span class="s1">&#39;0.8.7&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;RedCloth&#39;</span><span class="p">,</span> <span class="s1">&#39;4.2.0&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rubyforge&#39;</span><span class="p">,</span> <span class="s1">&#39;2.0.4&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;haml&quot;</span><span class="p">,</span>  <span class="s1">&#39;3.0.12&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;will_paginate&#39;</span><span class="p">,</span> <span class="s1">&#39;2.2.2&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;paperclip&#39;</span><span class="p">,</span> <span class="s1">&#39;2.3.1&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;formtastic&#39;</span><span class="p">,</span> <span class="s1">&#39;0.9.8&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;jintastic&#39;</span><span class="p">,</span> <span class="s1">&#39;1.1.0&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;ruby-mp3info&#39;</span><span class="p">,</span> <span class="s1">&#39;0.6.13&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;mime-types&#39;</span><span class="p">,</span> <span class="s1">&#39;1.16&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;authlogic&quot;</span><span class="p">,</span> <span class="s1">&#39;2.1.5&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;acl9&quot;</span><span class="p">,</span> <span class="s1">&#39;0.12.0&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;paginator&quot;</span><span class="p">,</span> <span class="s1">&#39;1.1.1&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;spreadsheet&quot;</span><span class="p">,</span> <span class="s1">&#39;0.6.4.1&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;thin&quot;</span><span class="p">,</span> <span class="s2">&quot;0.5.2&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;activerecord-oracle_enhanced-adapter&#39;</span><span class="p">,</span> <span class="s1">&#39;1.2.4&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;sqlite3-ruby&#39;</span>
</span><span class='line'><span class="n">gem</span>  <span class="s1">&#39;rest-client&#39;</span><span class="p">,</span>  <span class="s1">&#39;1.6.7&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后执行<code>bundle install</code> , 相关的Gem就可以安装到位了。 <code>thin start -e production</code> ， 通过这个命令应用就能在生产环境下启动了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Atom和Node-Webkit]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/05/07/atomhe-node-webkit/"/>
    <updated>2014-05-07T16:21:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/05/07/atomhe-node-webkit</id>
    <content type="html"><![CDATA[<p><a href="http://atom.io">Atom</a>是Github投入开发的一个<strong>新编辑器</strong>。 目前只有Mac版，我在mbp上使用之后感觉还可以。基本可以认为是一个结合了Textmate和Vi插件的产物。
比如，看界面很像Textmate，但又有Textmat始终也没有支持的Ctrl-P插件。初步使用下来唯一不满的就是软件包太大，170MB对于一个文本编辑器而言是很大了。毕竟Eclipse这样的IDE也只在200MB的规模。</p>

<p>在使用体验方面，比较起来，和Textmate更接近些，但扩展应该方便很多。而比起vi的话，主要优势在于是GUI的，支持command+s保存，也支持鼠标选取文本，对中文输入而言明显要比
vi更合适。高亮、快捷等简单用用差别并不大，美观度当然都可以配置的不错。</p>

<p>而在昨天，Atom进一步把他们的核心模块开源了，另外提到了他们是基于<a href="https://github.com/rogerwang/node-webkit/wiki">Node-Webkit</a> 开发的这款工具。</p>

<p>这个组合就让我有点费解了。因为webkit是一个当代浏览器的引擎，safari chrome chromium等都使用了webkit，可以理解webkit就是一个浏览器。而node是指的
Node.js，一个可以在服务器端编写javascript的平台，提供了很多的js库。而这么一个组合，干文本编辑器什么事情？在我开来，文本编辑器应该是很原生的一种应用软件。</p>

<p>仔细阅读了一下Node-Webkit的官方介绍以及一些其他材料，尤其是这篇<a href="http://blog.whattoc.com/2013/12/16/node-webkit01/">你所不知道的Node-webkit</a>
，忽然明白了所谓跑起来的Atom，其实就是运行了一个浏览器。只是这个浏览器里面的输入元素都是用HTML5编写的，而这个浏览器就是chromium，chrome的免安装的一个分支的名称。然后Atom又加了很多事件响应处理的注册代码段在里面。整个编辑类似于在线编辑，只是保存是在本地的。也因此，这个东西要往Linux和Windows迁移是轻而易举的。因为chromium和Node.js本来就是跨平台的。</p>

<p>然而，一旦有那么美好的事情，这个世界上就有银弹了。而历史的经验告诉我们，世上是没有银弹的。</p>

<p>Atom之所以在mbp上使用的体验还不错，主要是因为mbp搭载了大内存、ssd硬盘以及性能走在前列的x86处理器，所以并没有<strong>卡</strong>。而一旦这些条件不具备，情况就不是那么回事情了。这种类似phonegap，用浏览器来模拟原生应用的最大<strong>弱点</strong>无疑是性能差以及开销大。因此会有人提出打开大文件的效果不堪想象。<br/>
从口味上来讲，个人不太喜欢编辑器也Web化。虽然内存cpu的发展依然迅速，Atom的性能问题可能是可以被硬件性能的提升弥补的，但这种做法还是有其先天的缺陷。</p>

<p>所以，如果是脚本的开发，可能还是要继续用vi编写。如果是输入大量中文的话，Atom可以优先考虑。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Openssl and fIPC]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/05/06/openssl-and-fipc/"/>
    <updated>2014-05-06T14:27:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/05/06/openssl-and-fipc</id>
    <content type="html"><![CDATA[<p>Openssl还是一个关联很多的基础组件。自从爆出心血漏洞后，给自己的虚机也重新编译了一个新的openssl，
但是在编译ruby 2.1.1时却发现了新的问题。</p>

<p>第一个问题，是编译时老是认不出已经安装的openssl。可能因为openssl是从源码手工安装，而没有使用
apt-get intall，原因在于apt-get是失败的。</p>

<p>为解决这个问题，就在<code>/usr/loca/openssl-1.0.1g</code> 下独立编译生成了一个openssl。然后ruby再编译时可以识别openssl组件了。
但是，编译到一半，会报错</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>linking shared-object digest/md5.solibcrypto.a(md5_dgst.o): relocation R_X86_64_PC32 against undefined symbol</span></code></pre></td></tr></table></div></figure>


<p>错误具体是连接报错。建议是要编译时加上 <code>-fIPC</code> 的选项。初看起来有点摸不着头脑，到底是给ruby编译时加上还是给openssl加上呢？</p>

<p>这里就是遇到的第二个问题，连接共享库失败。</p>

<p>于是检查这个选项是什么意思。查下来后，我大致的理解是：</p>

<ol>
<li><code>fIPC</code>使得编译出来的库文件(.a, .so等)地址都是相对地址；</li>
<li>相对地址的好处是适合共享使用，但在装载时不同的进程可能会装载多次这个共享库；</li>
<li>如果没有此选项，则是按绝地地址来编译，好处是内存中只有一份。</li>
</ol>


<p>了解了fIPC是什么东西，上述报错就好理解了，是需要在openssl编译时加上此选项。</p>

<p><code>./config --prefix=/usr/local/openssl-1.0.1g -shared -fPIC</code> 然后<code>make &amp;&amp; make install</code></p>

<p>再在ruby安装包里执行</p>

<p><code>./configure --prefix=/home/user/.rbenv/versions/ruby-2.1.1 --disable-install-doc --with-openssl-dir=/usr/local/openssl-1.0.1g</code> , 然后 <code>make &amp;&amp; make install &amp;&amp; rbenv rehash</code></p>

<p>这样就装好了。</p>

<p>其实，我还有一点疑问，就是如何让openssl静态且又能找到。
估计又是一个属于和ubuntu紧密相关的问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[普鲁士不含传说]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/05/03/pu-lu-shi-bu-han-chuan-shuo/"/>
    <updated>2014-05-03T15:47:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/05/03/pu-lu-shi-bu-han-chuan-shuo</id>
    <content type="html"><![CDATA[<p>哈夫纳的名著之一，篇幅很短但内容很丰富，只读一遍肯定是不够的。
此书出版于2012年，国内的图书馆基本都还没货，所以是购买的台湾纸版书。
印刷和包装相对一般，价格倒是还好，折扣下来只有
300台币，折合60元人民币。</p>

<p>本书一如哈夫纳的风格，逻辑清晰、还原事实。去除了那些覆盖在普鲁士
身上的传说，而把普鲁士的崛起与特性追根溯源，来龙去脉介绍的十分
清晰。作为后天形成的理性国家，普鲁士有其巨大的优势，即人为组合而成，
因此其本身必须有许多的优点才能存活下来。为了生存，他具备了很多
先进的东西。比如法治、自由、不在乎以及最重要的&#8211;责任。国家对
公民尽责，公民对国家尽责，除此之外则公民爱干嘛就干嘛。这为他吸引
了大量的移民，使得这个国家在经济、军事上都保持了高于同时代国家的
活力。这也是普鲁士最吸引人的地方。</p>

<p>但是，普鲁士的弱点也在于此。因为他本身就是一个人为组合的国家，没有
民族和地理的基础，过的好时大家可以在一起，而过的不好或者可以用其他
方式过的更好时，他似乎就没有存在的必要了。这方面完全不如有民族或者
部族基础的国家。普鲁士作为一个国家，其结合点主要是霍恩佐伦家族，当
这个家族融入德意志之后，整个普鲁士也只能溶解于德意志了。</p>

<p>普鲁士的名称在历史上主要指向3个事物：</p>

<ol>
<li>生活在这片地区，丹泽到波罗的海沿岸，<strong>原始</strong>的部族。这部分人很早就被
灭族了。</li>
<li>原始部族是被<strong>条顿骑士</strong>殖民征服，并逐渐与西斯拉夫人融合，而征服者使用了被征服者的称呼。</li>
<li>由<strong>霍恩佐伦家族</strong>夹起来的地区性强权国家，条顿骑士团的最后一任大团长出自霍恩佐伦。第3个普鲁士即教科书里出现的普鲁士。</li>
</ol>


<p>其崛起充满了偶然性，也需要极大的运气，中间有着数个优秀但又性格迥异的君主。
比如，士兵国王，腓特烈大帝，以及他们的先辈和后代。其中，有的热衷于文化事业，
喜欢排场，有的则很节俭，有的则是军事天才。无论如何，他们都很有责任感，也
往往具备了坚强的毅力。</p>

<p>普鲁士其实打仗的时候并不多，即使是腓特烈大帝，所谓的欧洲最杰出的统帅之一，一生
大部分时间也是处理内政为主的，即便打也只是<strong>内阁战争</strong>。但普鲁士以善战闻名主要还是因为
不打则已，一打则往往是轰轰烈烈，而且常常伴随着惊人的胜利，交战双方也往往都要付出
极其惨重的代价。</p>

<p>普鲁士的崛起，离不开同<strong>俄罗斯</strong>的良好关系。这类似于近代东德和苏俄的关系。
腓特烈时代，普鲁士成为了一个<strong>双民族</strong>的<strong>大</strong>国家，国土的一半属于波兰并生活着
波兰人。但随着拿破仑横扫欧洲，普鲁士经历了巨大的考验。在反法同盟胜利后，其波兰
部分被去除，而得到了鲁尔区作为补贴。但在当时，这并不是一个划算的买卖。但也因祸得福，
普鲁士变成了德意志的单民族国家，鲁尔区后来成为最重要的煤产区和工业基地。反而摆脱了日后奥地利的命运。</p>

<p>三只老鹰即指，俄罗斯，普鲁士和奥地利。欧洲在德国崛起前，其实是波旁王朝（法国）和
哈夫斯堡王朝（奥地利）双雄争霸的格局。其后，才是俄罗斯和普鲁士崛起。普俄的关系在
1877年前都很好，之后因为土耳其退出了巴尔干，其遗产在英法奥俄间引起了巨大冲突，
才使得德俄关系进入了不良的阶段。直到现在也是如此。</p>

<p>随后，就是三场战争建立了一个国家，真正的日尔曼大国德意志。三场战争是普丹、普奥、普法，
杰出的政治家则是俾斯麦。而普鲁士军队的改革则是俾斯麦的领导，普鲁士国王完成的。国王
60多才即位，90高龄才离世。俾斯麦 毛奇均是他的选择。当然，他选择俾斯麦也多少有点无奈。</p>

<p>普鲁士的崛起也是符合顺应时代精神的结果。从腓特烈时代起，流行的是<strong>国家主义</strong>、<strong>民族主义</strong>,
这些东西塑造了整个近现代史。也有失败的主义运动，如<strong>种族主义</strong>。如果不符合时代精神，那么人为
怎么努力其结果必然还是要失败的。但这也意味着，爱国主义和爱民族主义其实并不是天经地义的。
实际上更早流行的是<strong>国王主义</strong>，国家只要有个国王就好了，曾经这个比民主二字还要吸引人。
我国其实一直是为<strong>国王</strong>服务的思想长期占据统治地位，现代化后逐步引入了国家、民族和民主，也算
一种进步吧。</p>

<p>普鲁士是一个伟大的国家，最后溶解于德国了。但普鲁士毕竟不是德国，溶解于德国未必是
他的领导人所希望的。只是普鲁士太人工合成了，所以一旦遇到德意志，就立马水乳交融了。
但有一点，普鲁士并不是一个扩张成性的国家，真的有着欧洲大国梦和传统的是奥地利，希特勒其实
是奥地利的传人，而绝不是腓特烈大帝、俾斯麦的继承者。</p>

<p>一国的崛起有其必然性，但运气的成分也是举足轻重的。普鲁士的辉煌绝对也离不开腓特烈的冒险。
做其他事情的道理也是类似的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macbook Pro]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/05/02/macbook-pro/"/>
    <updated>2014-05-02T11:24:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/05/02/macbook-pro</id>
    <content type="html"><![CDATA[<p>日本之旅买了很多东西，其中就包括了一台Macbook Pro。主要的参数如下：</p>

<p>屏幕: 13寸Retina<br/>
CPU: Intel Core i5 2.4GHz<br/>
Mem: 8GB 1600MHz<br/>
硬盘: 256GB SSD<br/>
显卡: Intel Iris Graphics<br/>
售价: 147800 日元，折合人民币9060</p>

<p>售价比中国便宜了许多主要是受汇率的影响。如果2月份去的话，会更便宜，现在
的汇率已经到0.061以上了。而最便宜的时候有几个礼拜都是在0.058左右浮动的。
当然，考虑到国内的售价是10788，所以便宜的幅度还是不小的。而且，Macbook是
可以在国内的苹果门店得到全球保修的。实际上除了iphone，苹果的所有产品均有
此项服务。</p>

<p>由于需要us版的键盘，所以只能放弃在<del>biccamera</del>之类的电器店购买mac。因为那边
只有日文键盘版的。太多的片假名让人不太喜欢，而且有些按键也和通常的布局不太一样。
而苹果店是同时有日文版和美国键盘版供应的。坏处有二：</p>

<ol>
<li>只能用visa，不能用银联；</li>
<li>电器店有5%的折扣+退税8%，而苹果店一般只有后者一个优惠，所以要贵5%。</li>
</ol>


<p>但为了完美一些，只能放弃5%的优惠了。这里还要再吐槽一下visa。用的卡是多币种的
信用卡，免去了1.5%的中间手续费，但visa的结算日期是按他们自己的节奏来的，不像
银联是当日汇率直接折算成人民币。而到visa的结算日，往往汇率对我们是不利的。所以，
对赚取人民币的人而言，用visa比银联要差的多。</p>

<p>严格说起来，这也是我人生中<strong>第一台笔记本</strong>。之前用过的主要是dell和ibm的
商务本，全部都是公司配的。这些机器虽然吐槽的人很多，我用下来一直感觉还算凑合。家里的一个sony本子是老婆婚前就
买的。所以，这台mac确实是我第一台自己购买的笔记本。</p>

<p>公司的电脑也很新，而且我目前也不考虑在工作中改用mac。家里有台式机也有一台昂贵的sony笔记本。
表面上看，我并不缺机器用。但有了孩子以后，能正经坐在台式机前的时间很少。而那台sony是
配ssd的，性能不错，但空间实在有限，装个虚机和基本的系统后，就没多少硬盘了。而且，我尤其
讨厌这台sony的屏幕，挺贵的机器，屏幕却配了一个永远想继续增加亮度的屏。也略微有点小重，
放在床上用并不舒服。<br/>
而mac就可以较好地解决这些问题了。为了写博客或者浏览信息基本不需要再装虚拟机。而mac的retina
屏幕实属人间尤物，细腻且亮度极高，一看就喜欢，越用越喜欢。机器本身只有1.5kg，比sony的小本子
还要轻一些。电池续航能力就更强了，号称可以有9个小时，而一般的本子能有4小时的已经算很强大了。
基于以上几个优点，轻、亮、长、匹配，使我相信macbook可以给我更多的在家使用电脑的机会。
而mac本身就是一个unix，意味着我在linux上常用的东西可以直接转到mac使用。实际上这台
mac竟然预装了ruby，而且还是2.0版本的ruby。尽管我还是会用rbenv，但对说明mac对开发人员
天生的友好支持则是足够了。</p>

<p>买回来之后，先注册一个apple id，登录好icloud, app store之后，就都是中文的东西了。
随后安卓xcode，安装homebrew(应该就是yehuda大神搞的那个东西吧)，基本上一个开发环境
就ok了。xcode里会自带git，brew则可以像yum apt-get一样安装各式的软件包。</p>

<p>随后，安装rbenv，ruby从1.8.7 1.9.3 2.1.1全部都装上，再装一个github的atom或者textmate
做编辑器，一个开发环境就绪了。输入法换成百度for mac。</p>

<p>（未完待续）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[日本之旅]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/05/01/ri-ben-zhi-lu/"/>
    <updated>2014-05-01T14:52:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/05/01/ri-ben-zhi-lu</id>
    <content type="html"><![CDATA[<p>时隔2年多又出国旅游了一次。这次旅行的地点是日本。</p>

<p>尽管中日关系略显紧张，但经济因素使得日本旅游方兴未艾。这次旅行同上次去意大利不同，
之前是跟团，这次因为准备的时间较充裕，所以选择了自己做攻略自由行的方式去游玩。
必须得感谢老婆，整个旅行的计划主要是她做的功课并成形的。</p>

<p>先说说对日本的总体感觉。其实应该说也只是局部的感觉，毕竟这次只是去了大阪 京都 奈良 东京几个地方，
但管中窥豹，形成印象已经足够了。概括起来，可以简要地变成下面几个关键词：</p>

<ol>
<li>干净</li>
<li>秩序</li>
<li>精细精确</li>
<li>先进</li>
<li>昂贵</li>
<li>物有所值</li>
</ol>


<p>整个日本是相当<strong>干净</strong>的，除了在奈良公园的土路上，我在那里呆了八九天，基本鞋子都是不沾灰的。衣服穿
2-3天依然还是相当的干净。在上海动不动就脏了，曾经以为是自己脏了，现在看来主要还是环境不干净。</p>

<p>日本的人很多，但并不让人觉得乱哄哄。整个社会极其有 <strong>秩序Â</strong> 和条理，也因此让人感觉足够的 <strong>安全</strong> 。
走在路上不用担心有人偷包，他们的超市或者药妆店也似乎根本不担心有贼的样子，马路上也没什么乱七八糟的
不稳定因素，十几年前的上海的治安也是远远不如的。至于各式的排队则更加有序了。顾客一般很自觉，即便
碰到不自觉的客户，服务人员也会坚持维护秩序，所以当地人基本没有破坏秩序的习惯，外来人员试了几次也就
习惯按日式规矩行事了。不像我们这边，客人就不说了，服务人员也不懂得在有人破坏秩序的时候他们是有义务
维护的，不然以后他们的工作只会越来越难越来越做的差。</p>

<p>受制于国土面积狭小同时又人口众多，日本人对任何东西控制的很  <strong>精细</strong>  可以说是被逼出来的。他们没有浪费的余地。
很多所谓的大寺，在中国可能只能被称作小庙了。但也因此，他们可以把小做精乃至做到极致，在服务水平方面，
这点尤其突出。同样的，在列车时间的精确性方面相信也很难有第二个国家能做到日本人的地步。</p>

<p>至于 <strong>先进性</strong> 则更是全方面的。从交通到建筑，到人的素质，到产品的品质，这个只有亲临过了
才能感受到。</p>

<p>所有的东西都是有代价的，日本达到上述优点同时也伴随着高物价。 <strong>昂贵</strong> 的物价是很令人震惊的。
尤其是谷物类和蔬菜类。那是上海的2-6倍了。而且味道并不怎么灵。同样是吃的，奶制品和巧克力等就和
我们很接近了。 日本的交通费也是很让中国人发指的。新干线500km要800元人民币了，速度还比我国的
高铁慢，而同样的距离我国只要200元左右就行了。整个高物价的代价就是他们的生活压力也很大，当然收
入肯定也很高，这样就更进一步会推高物价。</p>

<p>虽然东西很贵很贵，但一分价钱一分货，日本的东西倒也充分应验了这句话。最后让你觉得这一切还是物有所值的。
尤其是在上海的物价已经上升了很多之后。</p>

<h2>主要的行程</h2>

<p>第1天<br/>
大阪<br/>
关西机场、难波、海游馆</p>

<p>第2天<br/>
大阪<br/>
天守阁，历史博物馆，心斋桥、biccamer、苹果专卖店</p>

<p>第3天<br/>
大阪<br/>
环球影城、道顿崛</p>

<p>第4天<br/>
京都<br/>
京都站、清水寺、二年坂、三年坂</p>

<p>第5天<br/>
京都<br/>
岚山、嵯峨野观光小火车、天龙寺、锦市场、蟹道乐</p>

<p>第6天<br/>
奈良<br/>
近铁交通、春日大社、奈良公园</p>

<p>第7天<br/>
京都 东京<br/>
伏见稻荷大社、新干线、鸟元</p>

<p>第8天<br/>
东京<br/>
川崎、藤子F不二雄博物馆、三鹰吉卜力美术馆</p>

<p>第9天<br/>
东京<br/>
羽田机场、利木津机场巴士</p>

<p><a href="http://bbs.qyer.com/viewthread.php?tid=931893&amp;page=1&amp;extra=#pid9177702">旅游的详细链接</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IT系统架构的模式]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/04/12/itxi-tong-jia-gou-de-mo-shi/"/>
    <updated>2014-04-12T16:18:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/04/12/itxi-tong-jia-gou-de-mo-shi</id>
    <content type="html"><![CDATA[<p>近日终于得以拜读了Martin Fowler的大作《The Patterns of Enterprise Application Architecture》。</p>

<p>最早了解这本书是从robbin那里，在距今很多年前的一个Java书单里。彼时他对这本书的评价大意是适合要自己动手开发框架的人看，对应用开发没什么直接的帮助。同时，他认为读下来并没有太多感觉。而回过头来看，读过这本书的中国程序员应该是不少的，但真的从中汲取营养做出东西来的人几乎没有。从这也可以看出中国工程师在动手和创新方面确实有些先天不足。</p>

<p>然而，这本书对于DHH、对于Rails则可以说是一切的开端。对这本书贯彻的最到位、突破的最有力的，非DHH用Ruby开创Rails莫属。本书成书于2002年，彼时企业应用这个称呼比较时髦，按作者的说法，他的本意是IT系统的架构，而这也符合后来软件架构所适用的范围。如病人记录、订单跟踪、信用系统、保险、汇率兑换，这些都是IT系统，也就是企业应用。而文字处理、电梯控制、交换机、编译器、操作系统、游戏则基本不能算作企业应用。只是，2002年之后，企业应用这个名字被用的烂了，反而成了大慢笨的代表，导致07/08年的时候，甚至有不少人认为Rails不适合做企业应用。但彼时我感觉Rails对这些简单的所谓企业应用才是大杀器，毕竟大部分企业应用其实就是重度的CRUD应用，而这方面Rails堪比马克沁机枪对单兵的作战效果。至于互联网类的Web应用，交互、设计是占大头的，Rails投入使用的实际效果反而不如企业应用那么明显。</p>

<p>这本书确实是rails的设计指南，或者说是rails的设计文档。但DHH的突破和创新之处还是很明显的：</p>

<ol>
<li>本书是基于.Net 和 Java的，但提及了Python和Ruby，而作者更多的应该只是一种不抱希望的假设罢了，然而DHH真的用Ruby把这本书实作了出来。</li>
<li>虽然ActiveRecord取自于本书，然而作者本身并不是把这种模式看成一种自动化的ORM方案。广义的ORM，可以包含Dao(Table Gateway)、Data Transfer Object（json，xml）以及datamapper这些把记录化作内存对象所有模式，但狭义来看ORM是仅包含datamapper的。ActiveRecord在Fowler处其实只是一种Dao的变种。而DHH直接将ActiveRecord升格成了更高度自动化的ORM模式。</li>
<li>在视图层，坚决使用了Helper模式，未加入标签也未停留在scriplet阶段。</li>
</ol>


<p>对我而言，遗憾的一点是很晚才真的读了这本书，不知是喜是优的是因为晚读所以对这本书的内容很认可，而聊以自我安慰的是如果早读了说不定我也能
创造点什么东西，当然，最后一点纯属自娱自乐。<br/>
不过，这本书以及Rails，确实定义了过去10年Web开发的发展方向。因为Rails框架实际上已经成为了Web后台框架的一个标杆，
例如Spring MVC现在走的也是类似的道路。所以，这本书确实深深影响了Web应用的开发。</p>

<p>还有一点值得一提，就是这本书是真的基于Web总结的。很多模式的书籍，其实来源于客户端界面程序，比如从做菜单中提取出来的那些模式，而本书
是基于Web的，这就使得它和很多模式的书籍很不一样了。也因此，它才可以作为Rails的设计蓝图。而所有这些模式，大都来自于实践。实际上，
至今Rails也是Web开发优秀实践的最佳代表。而且Web开发的实践模式也不止书中提到的这些，实际上了解这些模式最好的方法就是接触Rails。虽然现在的模式比本书包含的更多了，本书依然很值得推荐阅读。</p>

<h2>笔记整理</h2>

<p>业务逻辑其实是业务反逻辑： complex business illogic</p>

<h3>分层的坏处</h3>

<ol>
<li>级联变更（Cascading Changes），就是改了一个地方往往要改n个地方</li>
<li>性能损害</li>
</ol>


<p>三层模型之所以能够流行，也是因为Web的流行。Client-Server工具中，是很难实现三层配置使用的。不过如今的App开发，好像也是三层模式。<br/>
但总体而言三层模型的流行是Web和Java等崛起的后果。</p>

<h3>常见的业务代码组织形式</h3>

<ul>
<li>Transaction Script</li>
<li>Domain Module , OO对TS的改变</li>
<li>Service层</li>
</ul>


<h3>会话状态</h3>

<ul>
<li>客户端 Cookie</li>
<li>服务端（内存）</li>
<li>共享服务端（数据库 Redis Memcache 共享文件夹）</li>
</ul>


<h3>分布式</h3>

<p>i
* 不要把不同的功能（对象）组件放在不同的服务器上，这样性能有问题
* 进程间只能尽量使用粗粒度接口，如N+1一次性读取同时返回很多信息
* 同一台服务器内部使用细粒度调用，远程外观模式<br/>
* Data Transfer Object ，传输对象，上面的那种是调用方法
* 同步的接口为主
* 异步的基于消息的处理方式
* 推动你思考而不是代替你思考，最终享受乐趣的是你，承担痛苦的也是你</p>

<h3>锁的种类</h3>

<ol>
<li>乐观锁，比如自己建立版本号；</li>
<li>悲观锁，就是常见的for lock；</li>
<li>粗颗粒（coarse-grainned)锁，就是一堆对象映射成一个入口，在入口处实施加锁；</li>
<li>隐含锁，把锁加到框架里，由Lock Manager和Lock Mapper来实现<strong>模板方法</strong>。</li>
</ol>


<h3>Stub和Mock</h3>

<p>Stub：用一个类直接替换某接口的实现，在测试或开发过程中使用这个替换类<br/>
Mock：用一个服务的重写来模拟某服务</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IBM的Linux和Google的Android]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/04/12/ibmde-linuxhe-googlede-android/"/>
    <updated>2014-04-12T16:18:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/04/12/ibmde-linuxhe-googlede-android</id>
    <content type="html"><![CDATA[<p>琢磨了一下Google当初为什么要推安卓，随手记之。起初感觉Google正在成为一个类似SUN的角色，而安卓就是Java。<br/>
二者的相似之处在于，java和安卓都给世界带来了很大的改变，借助这两样神器都出现了新的行业分支，如Java的企业应用、电商、网银等，安卓的出现才使得中国国产手机大幅度地进步，并在全球化的体系里占据更有优势的地位。但与此同时，不可否认的是，Google和SUN并未从中获得多少直接的收益。还有一点类似的地方，就是这两样神器也并不占用这两个巨头多少成本。相对于整个规模而言，无论是java还是安卓，对SUN或Google的成本比例都是有限的。</p>

<p>然而，转念一想，Google和SUN其实又是完全不一样的。SUN推广Java是希望卖更多的自己的硬件服务器，而且这个思路在90年代中期基本是可行的。而Google的服务现在如日中天，推广安卓确保了他在移动互联网时代（我更愿意称之为终端和使用人群进一步扩大的互联网时代）依然是搜索业务的王者。所以，仅就结果而言，Google是成功的，而SUN确实是被釜底抽薪了。</p>

<p>相比较而言，Google推安卓的动机和效果都更类似于90年代末IBM对Linux的扶持与推广。所欠缺的可能就是IBM没有收购Linux, Linus也没成立一个Linux的公司。<br/>
IBM借助Linux，抵挡的目标是M$，使得Windows难以在低端的PC服务器上一统江湖。而Google的安卓，则让智能手机避免了被Apple一家独占。而在此成功狙击的基础上，IBM和Google都继续卖着自己已经处于优势地位的服务。而再看SUN的话，当时的Java并无直接的竞争对手，后来的J2EE也是如此。SUN的目标比较单纯，推广Java只是为了可以让更多的公司做互联网的网络服务，而这必然需要更多的服务器。在PC Server+ Linux未流行的年代，Solaris是较低成本的一种选择。这个算盘其实打的还是不错的。但是，IBM大神对Linux的扶持，彻底让Sun的硬件找到了更廉价也更类似的替代品。当大部分用Java的企业，不去问Sun买Solaris服务器而是选择问IBM HP Dell买硬件、软件则直接使用Linux时，SUN的Java就真的只是当活雷锋了。可能IBM的本意未必是干掉SUN，只是希望M$不要也在服务器市场形成垄断，如同Google只是希望不要苹果在智能小型终端一统天下，但不可避免地误伤了SUN。当然，SUN的倒掉肯定还有其他更重要的因素，毕竟竞争和替代品是市场经济下每个个体和公司都面临的现实。</p>

<p>而IBM和Google的举动，毫无疑问都是成功了。IBM的PC服务器业务虽然卖给了联想，但至少也风光了十几年，而服务则继续在大卖。如果当初M$用windows统一了PC Server，那恐怕IBM现在也没服务好卖了。Google则在移动互联网时代，继续当着搜索的领袖，苹果在无法一统江山的情况下，也只能让Google继续保持是最重要的终端搜索引擎。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小米的红米]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/04/07/xiao-mi-de-hong-mi/"/>
    <updated>2014-04-07T16:17:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/04/07/xiao-mi-de-hong-mi</id>
    <content type="html"><![CDATA[<p>尽管红米电信版在小米网站是一直没抢到，但在电商的站点倒有不少已经上市的，只是贵200左右，为了赶上老妈的生日，还是直接去电商渠道购买了。</p>

<p>中间还有个插曲。原本是想在京东定的，然后要定了京东告知上海缺货。而在苏宁，反而发现还比京东便宜100，只要899. 当然，比小米官方的原价却又贵了100.但这个不用抢，就不是期货更不是神话了。</p>

<p>机器确实很新，3月底才新鲜出炉的。但拿到手后不得不有下面一些吐槽：</p>

<ol>
<li>cdma卡槽标记不明显。打开机盖后，只在很不显眼的地方能看见很小的cdma和gsm字样，除非凑到10公分以内，不然很难看清楚哪个是gsm哪个是cdma的卡槽。而且，在说明书上是完全没有标识的。</li>
<li>部分卡识别不出来，虽然是标准卡但可能还是要换卡。手头两张大卡uim，只能识别一张，于是不得不去营业厅花20换卡。要知道，我之前用努比亚z5s，虽然只能插小卡，但自己剪了一下就能用。而这个虽然也是大卡，但却不能用。想想也挺讽刺的。网上查了一下，这个也不是个案。可能只能说uim卡的标准比较古怪吧。好在换了2014版的uim卡也能认。</li>
<li>后盖很难开。这个可能习惯了就好。不过对于一个可以更换电池板的手机而言，确实不太方便。</li>
</ol>


<p>其他其实还有一些细节方面还是可以改进的。往好处想，小米其实还有提升的余地，毕竟这些是我这个不太挑剔的人都能直接发现的毛病。</p>

<p>整个手机的质感比较一般，很类似于多年前买的台电的mp3，从塑料到面板都很像，中国制造还需努力。当然，这也是一分价钱一分货，努比亚Z5S的接触材料的质感就比红米好多了。</p>

<p>此外，也用了下小米的rom软件，因为用的时间也不算长，主要只是教会老妈使用，感觉并不比中兴的强，可选的主题倒是比较多，但这个对我来讲确实不重要。</p>

<p>说了那么多不足，其实我还是很喜欢这个红米手机的。毕竟好处更多。只是说小米的好已经铺天盖地了，对于安卓的好处我也很认可，所以也就不再多说了。虽然是借助安卓和高通，但小米好歹是开创了属于中国的智能手机制造时代。还是很令人钦佩的。</p>

<p>最后，感概一下，形势还是比人强。我一直很讨厌双模双待，认为除了费电没有半分好处。然而，现在c网适合数据、gsm只适合电话的现实、以及有宽带必有c网流量，使得使用双卡已经变成一种很平常的行为。和我讨厌双网双待有一个最大的区别，彼时所谓双模只能用来打电话，而如今数据和电话确实已经是两种需求了。而且，数据业务确实基本不需要你告诉别人你的手机号。所以，c网数据、g网维持语音业务，也是当前比较合适的一种模式。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[当代中国和威廉德国的一个相似点]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/03/16/dang-dai-zhong-guo-he-wei-lian-de-guo-de-ge-xiang-si-dian/"/>
    <updated>2014-03-16T15:15:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/03/16/dang-dai-zhong-guo-he-wei-lian-de-guo-de-ge-xiang-si-dian</id>
    <content type="html"><![CDATA[<p>前一阵子有些媒体把崛起的中国比作同样是100多年前崛起的威廉德国。起初听到这种比喻，只觉得有点好笑。别的不说，如今风靡中国的BBA（奔驰 宝马 奥迪）都是威廉德国时代诞生的，就这几个跨世纪的杰出企业就是中国目前根本连门都摸不着的。至于发明家、工程师、企业家、科学家方面，那差距就不是一般的大了。中国可没有那么领先和尖端的人物和组织啊。而在军队方面，威廉拥有的德意志基石，普鲁士军队，恐怕我国能有一个营那样的队伍都很难。</p>

<p>但是，在看完了哈夫纳对俾斯麦德国和威廉德国的对比后，发现现在的中国有一点还真的和那时候的德国很类似。即国民的心态。</p>

<p>俾斯麦时期的德国人，并不认为自己的国家有多么先进。反而是崇拜法国人的东西。然而随着威廉时代的技术发展，尤其是内燃机取代蒸汽机时代的到来，诸如BBA、博世、西门子、克虏伯这些企业，他们在科学、技术、经济上都成为当时的领先者。而此时，整个国民的心态就一直水涨船高。民族的自信心由此加强。在这一点上，如今的中国和中国人确实走在相同的道路上。当然，我们相对于德国并非是有多么先进，而是在多上面做文章。虽然各方面均算不上最先进的，也无法领导潮流，但依靠体量和低成本的优势，在经济总量上确实实现了崛起。加之08年以来的欧美金融危机，使得中国式的东西一下子找回了曾经失去的信心。</p>

<p>就因为这种心态的变化，我们不再否认自己固有的一些东西，不管是好的还是坏的。也意识到老外的一套其实也并不那么先进，更不一定就是对我们的发展是好的。究竟是好是坏还很难讲，不过自信心的提高肯定是好事情。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nubia Z5S]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/03/10/nubia-z5s/"/>
    <updated>2014-03-10T18:03:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/03/10/nubia-z5s</id>
    <content type="html"><![CDATA[<p>作为多年电信号码的手机用户，现在用的手机也有一年半了，实在等不起LTE上市，所以决定还是继续买3G的手机。</p>

<p>电信版手机的选择限制还是比较多的。目标最后定在2k以内的国产手机，这样的选择无非是小米3 华为p6 努比亚等几种。一开始，想买小米3.正好过完年，米3的电信版也出来了。无奈抢了两次都没抢到，于是最后还是选到中兴华为的机型里面。</p>

<p>尽管p6的样子更好一些，但海思的芯片实在不讨人喜欢；而努比亚z5s的芯片倒是高通的旗舰，品质绝对有保障。最终，还是重视内在胜过了外观，选择买了z5s。</p>

<p>包装红白配，手机红黑配，设计倒是挺简洁的。
配件很节约，只有一个充电电源和一根充电线。但安卓好歹这么些年来，usb的接口都是一致的，所有的线都可以通用。比起水果一两年换个接口，明显更符合我的口味。
这个取卡针，不得不说和苹果真的很像。
单手持机的话，手感还是很轻巧的，整个重心控制的感觉很好。当然，5寸的屏幕还是大了些，操作起来就要双手了。响应等确实很快，顶配的CPU和大内存确实使得系统很流畅。</p>

<p>手机的背面。摄像头确实突起来一些，我个人倒不是很敏感这一点。贴纸有点山寨，过一阵打算揭掉。顺便提一下，这个贴纸写的cdma2000和wcdma手机，但手机本身又是所谓支持td-scdma的，所以显然写的有问题。</p>

<p>不想买micro-sim就是不想剪卡，但买了之后，发现其实剪卡只要掌握一定的门道就很简单。尤其是我这张3对6接触点的sim卡，那是相当的好剪。上面这个是要剪的卡，芯片所占面积本身就极小。</p>

<p>只要判断准自己的卡是3对6触点还是4对8触点，然后找相应的尺寸攻略，打好样后照着剪就万无一失了。
用铅笔打好样，直接剪好放进插槽即可。</p>

<p>之所以最早看中小米，是由于这3个里面，小米和努比亚都是支持全模，在国外也能用w的数据网络；华为的电信版在国外只能用语音。而华为的特色是双待，这一点和红米类似，但我只有一个号,双待对我而言意义不大。小米支持标准的sim卡（其实是mini-sim）而努比亚和p6都只能是小一点的micro-sim，外加电池好不少，这才让我起初倾向于小米3. 但一直买不到的感觉就不太好了，毕竟一个手机都买的这么累有点被厂商牵着鼻子走了。然而手机的选择还是很多的，所以试了2次之后决定转型，现在发觉nubia确实很不错。</p>

<p>鲁大师的跑分结果很高。高通的CPU果然不让人失望。</p>

<p>自从Google发布了安卓，中国手机厂商的春天就来了。虽然整个模式讲穿了只是之前HTC做过的那种：系统依靠移植，芯片主要也是依赖外部的，国产厂商主要做的还是一个集成加制造的活。但玩的比HTC有声有色的多。中国制造的性价比优势尽情展现。</p>

<p>尽管整体相当满意，但电池确实有点不太经用。这个2000ma出头的电池，如果整个下午都用qq聊天的话，基本上半天电就要用光了。所以，买这个机器移动电源最好是要配一个的。z5s的电池是不能随便更换的。自从用上智能手机后，我以前的手机上两块电板轮流用的机会也不太多了。目前比较方便的还是配个移动电源。</p>

<p>自从改用了C网，或者说自从智能手机开始普及，更换手机的频率一下子提高了。C网之前，老式的手机通常可以稳稳地用2年以上。而用上智能手机尤其是C网的智能手机后，更换频率基本在一年以内了。上一个华为8812还算是使用时间比较长的。不知道Nubia Z5S可以保鲜几年？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读书列表2014]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/03/02/to-read-list/"/>
    <updated>2014-03-02T09:39:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/03/02/to-read-list</id>
    <content type="html"><![CDATA[<h3>技术类</h3>

<ol>
<li>[x] <a href="http://octopresszhangyu.herokuapp.com/blog/2014/04/12/itxi-tong-jia-gou-de-mo-shi/">Flower M. Patterns of Enterprise Application Architecture</a>, Addison-Wesley Professional. Rails诞生的书，<a href="http://signalvnoise.com/posts/3375-the-five-programming-books-that-meant-most-to-me">DHH最爱的五本编程书籍</a>，可以说这本书支撑了rails的诞生，是rails基础架构的功能定义。DHH的突破之处在于他用Ruby实现了里面的很多可选择的模式，甚至他还是为FRW画了草图。</li>
<li><a href="http://rubyrogues.com/097-rr-book-club-patterns-of-enterprise-architecture-with-martin-fowler/">PoEAA的访谈和DHH</a></li>
<li>曾宪杰. 大型网站系统与Java中间件实践. 2014.</li>
<li>FRW,Beck. Refactoring: Improving the Design of Existing Code,1999.</li>
<li>Eric Evans. Domain-Driven Design.</li>
<li>Beck. Smalltalk best practice patterns, 1996.</li>
<li>Donald C. Gause, Are you lights on? 1990.</li>
<li>张昊，Linux Shell编程从入门到精通。</li>
<li>Core Java。有必要更新一下。</li>
<li>Gourley D, Totty B. HTTP权威指南 O’Reilly</li>
<li>Shash D, Lazere. Out of their Minds: The Lives and Discoveries of 15 Great Computer Scientists</li>
<li>谭云杰,大象–Thinking in UML，水利水电</li>
<li>谢希仁.计算机网络，电工</li>
</ol>


<h3>经管</h3>

<ol>
<li>[x] 汽车和我 皮耶希自传。伟大的保时捷家族，皮耶希是发明家保时捷的女婿，而作者是皮耶希的后人，后来成为了大众的老总。</li>
<li>[x] 汽车文化。</li>
<li>[x] 汽车工程学基础。 上面两边都是汽车构造及文化的基本入门读物，可以填补较大的知识空白。明白汽车的基本构造原理和发展脉络。而对汽车人物的描述则很有特色和启发。让人感叹的是，很多德国的发明家，如奔驰、戴姆勒，他们既是优秀的工程师，但同时也是成功的设计师和成功的企业家。这方面德国人确实一枝独秀。另外，其他国家的汽车杰出人物不是发明家就是工程师，至少也是一个企业家。但中国的汽车代表人物却是官员。</li>
<li>海斯勒，寻路中国，上海译文.</li>
<li>余江，韦尔奇，Winning（赢），中信</li>
<li>曾志尧, 35岁前要上的33堂理财课,中信</li>
<li>李笑来，把时间当做朋友</li>
<li>蔡康永，说话之道</li>
<li>高盛如何算赢世界</li>
<li>The Intelligent Investor</li>
</ol>


<h3>历史文化</h3>

<ol>
<li>[x] 唐德刚，晚晴七十年。幽默的文笔简直就是郭德纲，看问题的深度和广度进一步让人叹为观止，而且联系当代史更是妙趣横生。作者学识、经历造就了这本书。</li>
<li>[x] 唐德刚，xxx专政始末。 相对比较一般。</li>
<li>[x] 哈夫纳，从俾斯麦到希特勒。又一本颠覆国内常见历史观的作品。作者对普鲁士、德意志以及大德意志进行了十分到位的区分和分析。俾斯麦首先的普鲁士的宰相，其次才是德国的首相。所以，以他的角度而言，德国是为普鲁士服务的，即普鲁士支配整个德国。而彼时德国的版图（第二帝国），他认为已经足够。但是，德意志人则希望借助普鲁士，主要是普鲁士的军队，继续对外扩张。而这在俾斯麦看来其实就是普鲁士去为德国流血了，明显违反了他的初衷和立场。而大德意志的代表非希特勒莫属。首先因为他是一个奥地利人，在俾斯麦规划的德意志中希特勒根本就不是德国人。但希特勒作为德意志人，梦想就是建立大德意志，所以不但“回归”了奥地利，还把周边国家一系列有德意志人的地区，比如苏台德，都并入了德国。而普鲁士的容克们就开始为希特勒服务了。时至今日，德国依然在究竟是让德国支配欧洲还是让德国服务欧洲之间纠结。但像俾斯麦和希特勒这样的杰出人物当今是空白的。</li>
<li>[x] 哈夫纳，<a href="http://octopresszhangyu.herokuapp.com/blog/2014/05/03/pu-lu-shi-bu-han-chuan-shuo/">不含传说的普鲁士</a>。台版书的竖版读起来有点累，不过效果还行。值得反复阅读的图书。</li>
</ol>


<h2>既往</h2>

<p> <a href="http://octopresszhangyu.herokuapp.com/blog/2013/01/11/to-read-list/">2013读书列表</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[锥轮、液压传动和CVT]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/02/15/zhui-lun-ye-ya-chuan-dong-he-cvt/"/>
    <updated>2014-02-15T11:21:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/02/15/zhui-lun-ye-ya-chuan-dong-he-cvt</id>
    <content type="html"><![CDATA[<h3>锥轮</h3>

<p>锥轮其实就是两个圆锥形的转筒，细细的皮带（钢带）每时刻的转动都类似在做圆周运动，但累计的变化多了，圆形就逐步缩小了。所以这种东西的长处在于可以动态地改变转圈的比例。皮带在哪个部位滚动，则是通过液压圆盘的前后移动来实现，类似于抽取出来。</p>

<p>CVT变速箱就是用了两个锥轮，两个锥轮一个是主动轮，接发动机的输出；另一个是接轮胎传动一头的，由主动轮带动，称为从动轮。主动轮和从动轮的液压盘向一个方向运动，从而使得皮带的长度不会被牵拉或缩短。而锥头到锥底之间的各种圆，就提供了连续的转圈比例。相对AT是跳跃式的，CVT就这样实现连续了。</p>

<p>这个截图很好的说明了他们之间的关系。</p>

<h3>液压传动</h3>

<p>液压传动则是很多AT包括CVT使用的技术。其特点是化手动的硬结合为软结合。通过液体的流动实现涡轮和导轮之间的动力传递。从而可以实现从静止到低速的平稳起步，因为这本身就是一个软的过程，不像手动的离合器就是直接接上了。在加速过程中，也可以相对平稳地增加输出。</p>

<h3>行星齿轮和AT</h3>

<p>其实对于AT来讲，核心的东西是行星齿轮，这个东西确实挺酷的，但也是第一次了解有这种神器存在。行星齿轮有点用多项式来模拟锥轮这种连续曲线的转速比的意思，4AT模拟4个点，6AT 8AT一路可以模拟的更多，再多一些就也能实现基本连续的变速了。连续的好处是动力损失小，而AT本身的优势是档位切换快速、技术也成熟。相对而言，锥轮最大的问题就是皮带打滑，不如4AT这样那么成熟了。</p>

<p>AT的技术较CVT成熟，6AT以上的效率损失就不高了。但是，档位越多的AT体积越大、重量也越重、制造成本也高，所以比起8AT，CVT反而是廉价的技术了。另外就是CVT无法适应大功率的发动机。所以3.0以上排量的用的就比较少了。大排量上还用CVT的主要就是日产公司了，CVT也可以说是日产的一张王牌。不过日产现在高级的CVT变速箱里面，也加了行星齿轮，严格的说是行星齿轮和锥轮结合的产物。大众奥迪在A4和A6上使用CVT也挺常见，但高功率版本的就是双离合和手自一体的天下了。</p>

<h3>变速箱的意义</h3>

<p>说一千道一万，变速箱提供了转速比的灵活，使得油耗、传动能适应多种情况。现实中，起步、低速、高速、倒车时确实需要不同的发动机工作效率和传动比例。如果是定一个转速比的话，额外的开销就有点大了。</p>

<p>从作用上来说，汽车的变速箱就是高级自行车上的飞。其实一般的平车都是不带飞的，链条链接的圈圈的尺寸是固定的。这一来是自行车这么开开也确实够了，而且自行车本身就不需要支持倒档。高档的比赛自行车为了获取最佳的性能，也才增加了变速系统。但汽车的质量和时速都和自行车差别太大，所以变速系统基本是标配的了。</p>

<h3>为什么超车需要降档</h3>

<p>主观感觉上，要提速应该放在高档。但实际上因为高档的传动比是低的，输出到轮胎上的力矩并不大。而加速主要需要增加加速度，即需要输出更高的力矩。而高速降档后，发动机的转速会迅速提高，比如从1500转提高到3000转，此时输出的力矩增加。而一般情况下要求的降档降速是为了让发动机慢下来。但如果此时反而加大油门，则发动机转速会进一步上升，输出力矩会进一步加大，也就可以获得更高的输出力矩从而获得加速度。</p>

<p>所以，降档有利于增加加速度，缺点是油耗会比高档位提速来的高。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[购车流程小记]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/01/23/gou-che-liu-cheng-xiao-ji/"/>
    <updated>2014-01-23T14:40:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/01/23/gou-che-liu-cheng-xiao-ji</id>
    <content type="html"><![CDATA[<p>确切的说，是对拍牌、购车、上牌过程的小记。</p>

<h2>拍牌</h2>

<h3>先拍牌还是先买车？</h3>

<p>建议先拍牌后买车。理由很简单，因为现在牌照额度有效期延长到6个月了，而再神的车，等3个月总归到了，加上留给自己购买挑选的时间，6个月是绰绰有余的。</p>

<p>当然，这个不是绝对的。毕竟政府没有规定买车和拍牌的先后顺序，想要先买车，也完全可行。</p>

<h3>买标书</h3>

<p>福州路上可以买标书。注意，福州路是全月都卖标书的，不是只有在当月拍牌通告出来后才销售，只是周末福州路是休息的。<br/>
其他地方是交通银行以及共和新路那边，去<a href="http://www.alltobid.com/guopai/">国拍网站</a>看吧。<br/>
购买时需要本人自己去，带好身份证和2000元现金，那边现在还是不接受刷卡的。</p>

<h3>参加投标</h3>

<p>标书买好后，就等待吧。一般是当月的第3个星期六。时间基本是固定的，可能会根据节假日调前或调后一个礼拜。不管是否调整，都是至少提前一周有公告。</p>

<p>然后就是当天的投标了。整个过程前戏太长，高潮时间只在最后一分钟或者说二十秒。<br/>
10:30先出价，等于报个名。随后可以看见投标人数不断上涨。基本上一分钟以内就会突破警示价。随后，到11:00，报名结束，开始进入第二阶段，可以选择+300或者-300出价。继续熬到11:29分，然后根据当时的情况，选择伏击的点位然后出价。这个方面其实多说没啥好说的，策略其实就是伏击，剩下的就是赌大小了。</p>

<h3>拍中领额度或者续标</h3>

<p>是否拍中，当场基本就是可以有感觉的。半小时内会有正式结果出来。拍中的话，然后就是领额度了。隔天开始就可以付款，一周内必须支付。我选择的是网上支付，比较便捷。大额度的信用卡是最好的，如果额度不够，可以往信用卡里面存一些钱，这样就能一笔头支付掉了。现场的话，据说可以最多使用2张信用卡来拉卡。</p>

<p>尽管可以选择ems快递额度。不过我对ems的体验并不好，所以还是自己去领额度了。网上支付的话，可以继续去福州路108号领，现场付的话似乎只有去共和新路那边。</p>

<p>额度其实是在你网络付钱后，隔天福州路的工作人员就会给你打印出来，因为额度上是有有效期的，写好了开始时间和失效时间。而开始时间基本就是付款后的那一天。</p>

<p>之后，就领到一张上海市牌照额度单了，这个是上牌的关键材料之一。可惜，7w多的东西只有收据而没有发票。</p>

<p>如果3次拍牌不中，则需要续标。购买标书的地方应该可以办理此业务。在福州路，我看见的情况是只要加300，连标书都不用换的。</p>

<h2>购车</h2>

<p>这个很简单，网上摸清价格，比较几个店以后，价格就有数了。
可以试驾一下车子，看看到底是不是喜欢。其他也看不出什么来的。</p>

<p>价格的话，包括裸车、保险、检验出库费和加装费这几项。一项一项谈并没多大意思，主要是看一个总价。上海地区的裸车价格是全国偏低的，所以网上能看到的
低价，基本上上海的4s店其实都是可以做的。保险的话，自己找保险公司据说可以省15%，但这一笔也是4s店计划中的一笔收入，真的不给他们赚那么无非是堤内损失堤外补，要便宜下来是很难的。检验费之类的主要看前面的裸车和保险了，能降多少是多少吧。加装看自己的需求了。</p>

<p>总之，合理的利润是肯定要留出的，不然也没人卖给你。毕竟买的没有卖的精。</p>

<p>买车我去过大众 日产的4s店，也去过丰田的。总体感觉日产的服务态度还是不错的，精神状态也很好。丰田似乎没什么人接待你。而大众的话，销售就有点坐班的味道了。
4s店普遍距离较远，所以货比三家的成本也不算低。但买车毕竟也是一件大事，花点代价还是值得的。</p>

<p>进口豪车的4s店服务那就要完全再好几个档次了。不过售价也高。只要能体现一分价钱一分货，那么基本就是合理的。</p>

<h2>上牌</h2>

<p>上牌的主要目的是选择号码并打印行驶证。牌照本身是可以通过ems获取的。这里我想倒过来描述一下。</p>

<ol>
<li>收到ems寄来的自选号车牌，然后上在自己的车上，那车牌从何而来？</li>
<li>选择好车牌号码后，上牌地点都有打印机的，会把行驶证打印出来并同时做好汽车的产证。如果是自选号的，那么牌照会下单去制作，3个工作日内ems会快递到你留的地址。车子的身份其实是行驶证，上面有牌照号、车主信息、车辆的车架标识。而这些只有车管所及30来家指定的社会上牌点可以做。<br/>
实际上，所谓的上牌点是选号和打印行驶证并做产权证的点。</li>
<li>上牌点凭什么给你打印？凭的是车辆缴税的<strong>完税证明</strong>。这个证明在车辆购置税处获取。但税务机关只管收税，完税证明是在同一个地方不同办公室办公的车辆管理单位发放。而在这个单位，需要收取你的牌照额度证明。也是他们来确定车辆购买人和额度拍卖获得人是不是同一个。<br/>
所以，只是为了避免缴纳滞纳金，是不需要额度就能缴税的。但光缴税并拿不到额度证明。</li>
</ol>


<p>当然，上海的用车环境确实很不好。那主要就是看几时会限制外地牌照了。难度很大，但早晚肯定会走的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于车架号的备忘]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/01/22/about-vehicle-identification-number/"/>
    <updated>2014-01-22T13:56:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/01/22/about-vehicle-identification-number</id>
    <content type="html"><![CDATA[<p>车架号，又叫做VIN（Vehicle Identification Number），是每一辆车的识别号。
由17位数字组成，ISO组织进行了全世界范围的标准化。我国在90年代就已经采用并加入了这个标准。</p>

<p>以东风日产为例，其车架号类似LGBM4DE43DS000117，</p>

<p>其中，LGB是东风日产的代号（WMI，世界制造厂识别码），L表示中国，GB是在中国工信部分配的。其后各字母和数字的含义是：</p>

<p>第4位：表示车辆品牌，M：奇骏，L：逍客，F：天籁<br/>
第5位：表示车身类型，例如几开门、几厢等<br/>
第6位：发动机型号，D基本上是2.5排量的意思<br/>
第7位：约束系统，即安全带和气囊<br/>
第8位：变速箱说明，0：普通AT<br/>
第9位：前8位的校验位</p>

<p>第10位：制造年份，从1开始到Y，扣除了0、I、O、Q、U后共有30个字符可以用于表示年份，从71年开始计算，即30年更换一轮。01年就又从1开始，而D的话就表示13年，其余以此类推。  <br/>
第11位：制造地，Y：花都工厂，R：襄樊工厂，S：郑州工厂<br/>
第12位：生产顺序号</p>

<p>具体对一辆车子而言，最有用的可能就是制造年份和装配地点，然后可以通过顺序号大致推出是在第几个月生产的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[天籁 Teana]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/01/17/teana/"/>
    <updated>2014-01-17T16:25:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/01/17/teana</id>
    <content type="html"><![CDATA[<p>上周日终于买了人生第一辆车，国产东风日产天籁Teana 2.5 XL领先版。
选中的原因还是如下几个：</p>

<ol>
<li>较大的空间，座椅等舒适性好</li>
<li>配置较丰富，虽然显示屏稍微小了些</li>
<li>价格十分合我的胃口，属于恰到好处的位置</li>
<li>小毛病相对较少，后期打理保养等相对省事</li>
<li>日产只嫁了东风一个中国公司，技术方面还是很扎实的，这点从2013年全年的销量也得到了验证。各自取了两个的本田和丰田，各自底下两个公司加起来的销量还不如东风一家。</li>
<li>2.5自然吸气发动机的动力也不错，底盘、油门的调教更偏向欧系风格，但发动机还是CVT的，所以平稳性好</li>
<li>日产是最早使用CVT变速箱的大厂，所以他们的CVT变速箱技术确实好。</li>
<li>新款天籁其实是十分运动的。北美的Altima. 如果是08年的天籁，我确实不会选择的。但看了12款和13款的，其实已经改的很年轻化了。甚至有人认为这个只是天籁的名号，实际上就是Altima。</li>
</ol>


<p>陆陆续续看了不少车，也增加了不少汽车的知识，了解了一些汽车的文化和背景。在看过的那么些车子里，九代雅阁也是给我留下深刻印象的。或者说是另外唯一一个打动了我的车型，一度我都想转买雅阁。因为雅阁价钱降价后和天籁的这款也就相差1w了，而其配置、轮胎、显示屏等等则要好了一块，其实还是值这点钱的。但家里已经对天籁比较达成一致，而且我也很喜欢天籁，所以最后还是选了天籁。</p>

<p>车子最后选了白色。这个原因可以说没什么，也可以说比较复杂。因为日产的配色似乎很一般，整个天籁就没有什么好的颜色，无非是黑、白、深蓝。缺乏象香槟色、酒红色、浅蓝等中国人比较喜欢的颜色，所以可选的范围很小，这也是一度想买雅阁的原因之一。而在深和浅之间，最后还是选择了浅的白色。<br/>
不过，珍珠白以后的补色确实是个麻烦，当然新车确实好看。实际上白色的车价也要加2000.</p>

<p>说起价格，4s店的售价其实跟自己买组装机很类似。都是包含多个条项，有些是可选的，最终打个总价。所以单独地把某一项谈低并没有实际意义。<br/>
通常而言，主要是下面这么几块：</p>

<ul>
<li>裸车价： 通常厂商有个目录价，比如这款天籁就是20.58w人民币，以此为基础可以有一定的降幅。这方面汽车之家上的全国最低价信息基本挺准，至少在发达地区完全可以适用。当然，也有部分品牌存在加价的可能。而新车上市的前几个月，降价的幅度通常是很小的或者没有。</li>
<li>保险：保险是在4s店里交易时第二大的一笔费用，算上车船税之后，天籁的保费在7k左右。通常自己找保险应该是可以获得15%左右的折扣，在4s店当然就没了。但4s总要赚钱的，所以首保一般还是要给他们做的。收个代理费也算合理。</li>
<li>各类检测费和上牌服务费： 现在检测费和出库费的费用越来越高了。基本已经上千了。一般可以砍一砍。上牌费什么的如果不想自己跑，也可以委托4s，通常也要1000-2000。讲到底，这笔钱就是给店家的服务费。比起国外还是便宜的。天籁在美国裸车可能只要2w美金，检测费可能要1200+美金。当然，国情确实不同。不过服务费方面的费用越来越高恐怕是不能避免的。</li>
<li>加装费： 这个就比较复杂了，可以有多个项目，而且每个项目可以差别很大。现在比较流行有贴膜、底盘装甲、发动机护板、3d脚垫、镀膜、挡泥板等等。拿贴膜来讲，膜的种类和价格就有很多，作为普通消费者是很难彻底摸清的。</li>
</ul>


<p>最合算的当然是只买裸车+保险，付很低的出库检测费，然后整体优惠幅度到位，自己去上牌后再去汽配城修车铺之类的地方贴膜。当然，贴膜被斩也是在哪里都是可能的。而实际上做任何交易，要想做到基本合理，最基本的原则只有两条：</p>

<ol>
<li>货比三家</li>
<li>留够合理的利润，别太贪小</li>
</ol>


<p>所谓无商不奸，所以要想赚卖家的便宜是不可能的。但一般的商人也是想长久做生意的，只要利润过得去通常不至于黑你。而价格的高低，本来就是比较出来的。网上也是货比三家的一个渠道。话说回来，如果跑了n家，价格都谈的差不多，那只能是也没啥好再多谈的了，完全说明这个价格就是合理的。</p>

<p>以上只是把钱付给了4s，真的 <strong>落地</strong> 那还得再花一笔不小的数目。其中最主要的就是
缴购置税。理论上，应该是发票价/1.17*0.1，但实际上从税务局到保险公司给每个车型都有一个底价。以天籁为例，2.5排量的购置税就16700, 2.0排量的就是15100。交完购置税，就可以上牌了。在上海的话，需要有上牌额度，而这个额度最高卖出过9万多。至于其难度可参看<a href="http://octopresszhangyu.herokuapp.com/blog/2013/12/16/shuang-biao-shu-xia-pai-pai-zhong-yu-gao-ding/">拍牌</a></p>

<p>所以，不算牌照，最终提一辆车的费用要在裸车的实价上再加12%左右的样子。</p>

<p>汽车是大宗消费品，其税收及售价注定了其支柱性产业的地位不容动摇。已天籁为例，如果实际售价20w，销售时，这已经包含了17%的增值税，外加10%的购置税，这基本的税款就达到了4-5万。所以真的相当之利害。<br/>
去年一年，全国销售了2000w以上的车子，当然均价肯定是不到20w的。但总的对税收的贡献也是相当大的了。</p>

<p>无论如何，汽车消费水平还是很能反应一个地区的幸福度的。当然，在上海，用车确实痛苦了些。但，这里面确实有爱。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[双标书下拍牌终于搞定]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/12/16/shuang-biao-shu-xia-pai-pai-zhong-yu-gao-ding/"/>
    <updated>2013-12-16T17:18:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/12/16/shuang-biao-shu-xia-pai-pai-zhong-yu-gao-ding</id>
    <content type="html"><![CDATA[<h2>最重要的东西最前面</h2>

<p>本月拍牌结果：</p>

<p>拍牌人数: 39625，投放数量：8500，成交均价：76093，最低成交价：76000，我的价格：76100。<br/>
经过11月的失利，本月采用了双标书，最后终于中标。而且，只中了一个，可以说是恰到好处。</p>

<h2>具体经过</h2>

<p>双标书的出法主要可以分为栈式和交叉式两种。 交叉式 最简单易懂。比如，标书1出75500，然后去76100等候，中间由标书2交错出75800并由这张标书守住最后的76400价格。 栈式 更美一些。标书1出75500，中间两个价格75800和76100都由标书2出，最后由标书1在76400收尾。</p>

<p>相对而言，栈式两张标书都中的概率低一些，交叉式的出价时间则更从容些。在覆盖能力上，二者是一致的，均比单标书高出一倍。
基本上是覆盖完整了。因为实际上出1500的机会已经是很少的，印象中至今还未出现。即使是1200的，也往往是29分之前已经涨过300了，最后才能暴涨那么多。这次涨的幅度在最后一分钟是创纪录的。照理，这个幅度在11月就该出现。如果当时出现，我也就不用再准备双标书了。但造化弄人，也是无可奈何的事情。</p>

<p>具体进程如下：</p>

<p>29&#8217;20&#8217; 前，应该是16秒左右吧，第1张标书出了75500；<br/>
29&#8217;38&#8217; ，第2张标书75800出价成功； <br/>
29&#8217;43&#8217; , 第1张标书76100出价成功；这也是最终的价格<br/>
然后，守候76400的标书就没有然后了。</p>

<p>我看见的可以出价的最后价格是76200,最后也没来得及随便把76400放出去。 最终结果是29’43&#8217;的这次出价中标。虽然失去了赚七八千的机会，不过毕竟省事不少，是最想要的结果。</p>

<p>如果是已婚人士，或者有父母亲戚也能申请车牌的话，最好是双标书伺候，必定能够杀死拍牌，或者更确切点把拍牌拍死。
如果不想自己来，请代理也没什么不行。社会越进步，服务业必然越发达。不过个人更喜欢DIY。</p>

<h2>单标书的策略</h2>

<ol>
<li>在29&#8217;0&#8217;，看是否已经涨过300，如果已经涨过300那么直接出75800等待，如果没到75200，则进入第2步</li>
<li>在29&#8217;20&#8217;，看是否已到75200，如果到则还是按75800伏击，如果没到就按75500伏击</li>
<li>无论第1步还是第2步，等到价格出成功后，一律都在当时的伏击价格上+300，再次等待&#8217;</li>
</ol>


<p>根据这十来个月的历史数据，这个策略都是奏效的。尤其是对这两个月，这个策略也是的奏效的。11月的失败就在于因为
人数一下子多了许多，个人还是有点慌了，没有坚持事先的计划安排。</p>

<p>当然，拍牌本身就是一个少数人能中的游戏，所以一旦大部分人采用相同的策略，其结果必然是集体失败。因此，
任何出价策略都是有局限的，而且必须与时俱进。</p>

<h2>对来年的预测</h2>

<p>市政府已经公布2014年会全年采用警示价，而且价格定在了2013年的最低价72600，客观地说，上海本次调控车牌最高价的决心和诚意都是足够的。
明年也是抄底的大好时机。而拍牌人数的多寡，取决于限外的政策究竟会不会加强。如果维持目前的状态，等个半年后可能拍牌比例就会回落。但是一旦
更多地向北京和天津靠拢，则拍牌人数再创新高并非难事。让我们拭目以待吧。</p>

<h2>真的麻烦还在前面</h2>

<p>拍牌，只是用车麻烦的第一步而已。其实整个用车都是相当麻烦的。从拍牌开始，到上路，到停车，到每天开，到每天加油，到开罚单，到刮刮碰碰，到交保险，
样样都不好对付。说美国人喜欢车是因为时间和爱，但对我而言，这两部分至少目前并不存在。所以想到车还是以烦居多。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基于Linux 的Oracle 数据库管理]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/11/30/ji-yu-linux-de-oracle-shu-ju-ku-guan-li/"/>
    <updated>2013-11-30T22:01:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/11/30/ji-yu-linux-de-oracle-shu-ju-ku-guan-li</id>
    <content type="html"><![CDATA[<p>云化工程里要装Oracle，于是研究了一下Oracle在Linux上部署的细节。最近一个礼拜基本查了很多资料，不过读了两本相对基础但又很重要的书后，还是有不少收获。</p>

<p>先说今天看完的这本原创。08年出版的书了，整个只有280页左右的篇幅，内容很精悍，废话很少，但又会把细节介绍的十分清楚。比如Linux各发行版和Oracle的兼容性，ext2（有点老了）的文件系统磁盘数据结构，bios-grub-linux的启动顺序等。</p>

<p>整本书是一个很简洁的linux常用功能的介绍，并以oracle安装维护为中心，展现了使用的方式。虽然有些地方相对简陋，但确属作者的经验之谈。有工程和实际经验才能提炼出来的东西。比如补充的配置环境命令别名<code>udump, bdump</code>等，安装用于sqlplus操作方便的<code>rlwrap</code>。当然还有一系列的shell脚本。</p>

<p>但限于篇幅，有些东西确实没谈。而且整本书的重点在于linux如何使用oracle，对oracle的介绍着墨很少。又比如讲了rman，只讲了怎么打开，怎么用许多东西备份，但没提及怎么用这些东西来恢复。但总的来说还是很值得一读的一本书。至少可以了解职业实施人员的部署情况。</p>

<p>整本书只花了一个下午就读完了，至少说明书的可读性不错。</p>

<p>第二本是一个老外写的翻译的书。不少评价不太好，但我读下来还是挺有收获。因为这部书是一本偏原理的书，作者喜欢把Oracle运行是怎么一回事情交代清楚。适合于对oracle的安装已经比较了解，但并不明白其中原理的层次阅读。读完之后，基本就可以自己判断该怎么玩了。很多人评价不高，是因为这本书对部署的细节交代的并不清楚，如果只是想拿来按部就班完成任务，这本书是会令人气馁的。</p>

<p>同时，作者又偏向于介绍一些计算机的基础知识。虽然很精悍这些介绍，但是不明白的人还是看不明白，看的懂的人才会觉得作者点到位了。所以这本书落得评价不高也十分正常。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[虎牌还是外牌]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/11/06/hu-pai-huan-shi-wai-pai/"/>
    <updated>2013-11-06T12:32:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/11/06/hu-pai-huan-shi-wai-pai</id>
    <content type="html"><![CDATA[<p>关于上沪牌和外牌似乎尚有争论，但目前看来其实是没必要的。
因为很简单，只要经济条件足够，情愿先上沪牌，如果确实米缺缺，那外牌也只能凑合一下了。
之所以这么选择，不是因为担心外牌会受限制。限制外牌是忽悠人的，买虎牌当前的主要意义在于保值和升值。</p>

<p>北京广州和上海是不一样的。拿北京来讲，拍牌前从不限制外地车牌进京，但一旦开始摇号了，外地牌照立马禁止进去。所以北京的情况是在市区开的车、尤其是居住在北京的车主基本都是上的京牌。因此，执行限制可以雷厉风行。</p>

<p>上海就不一样了。拍牌制度将近20年，上海人和居住在上海的外地人上外牌的比比皆是，这些车平时就开在这里，如果政府一声令下就可以禁止，那世界上的事情也太简单了。所以，要限的话，上海政府将面临很大的压力，牌照也会迅速往20w+跑去，这些都是政府不太愿意看见的。</p>

<p>毕竟上海拍牌制度执行了那么多年，对外地牌照从来没有严格的限制。
上海有200w辆车子的话，外牌车辆少说有100w。如果立刻强制限行，那么无非是逼着这些车主去换沪牌或者去提抗议。因为这100w人别无选择，除非坐视自己的车子成为一个年耗几万且不断贬值的摆设。</p>

<p>限制的政策要等这100w减少很多后才可能实施。按现在每年也就发10w+牌照的节奏，没个10年是降不到可以实施限制的条件的。
实际上很可能永远(几十年)也降不到那么低的数字。</p>

<p>不过虎牌真的在升值，上个外牌也就这样子，虎牌保值多了。因此，有米的话，还是拍虎牌吧。车这种东西开个几年反正要换的，买差点问题不大。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[看车大挪移记]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/11/03/kan-che-da-nuo-yi-ji/"/>
    <updated>2013-11-03T21:57:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/11/03/kan-che-da-nuo-yi-ji</id>
    <content type="html"><![CDATA[<p>终于抽空去看了下中意的车子，确实相当中意，但是整个的结果却发生了很大的漂移。</p>

<p>老婆和我想添一辆车，老丈人也想换一辆车，于是就开始筹划买车的事情。起初，岳父想换一辆SUV，大众的途观。他比较中意大众的车子。我们则对大众的车子不感冒，不过起初我最想买的是斯柯达的明锐，也是大众的。只是后来嫌新标黑色实在有点难看，于是开始转型。预算也一路提高。由于老婆不喜欢途观，所以suv基本没怎么考察，关注的重点始终都在三厢轿车上。</p>

<p>先在网上做功课，从斯柯达到福克斯，再到朗逸 速腾 思域 卡罗拉等，最后终于看上了东风日产的国产天籁。预算自然也节节攀升。考虑到家里如果有了一辆SUV的途观之后，买辆中大型的B级三厢还是有很大的互补性的。天籁吸引我的因素主要是下面这些：</p>

<ol>
<li>较大的空间，座椅等舒适性好</li>
<li>价格十分合我的胃口，属于恰到好处的位置</li>
<li>据说小毛病少，后期打理保养等相对省事</li>
<li>日产只嫁了东风一个中国公司，技术方面还是很扎实的</li>
<li>本人开车的偏好偏稳，以一慢二看三通过为准，天籁的动力风格与此相符</li>
</ol>


<p>所以，天籁的特性很符合我的需要。</p>

<p>当然，也有如下的一些不足：</p>

<ol>
<li>车身太长。4.8米的车比A级车要长30公分，对于停车来说难度增加不少，毕竟我不是老司机。</li>
<li>据说这车不适合女司机开。</li>
<li>虽然是中国产的车，但毕竟是日本牌子，尽管也是有部分欧洲血统，但日系车在近10年的中国是有一定额外风险的。</li>
</ol>


<p>但综合起来看，这确实是一款很不错的车，至少我是相当喜欢了。所以决定开始看车。</p>

<p>两个白天，逛了不少4s店，首当其冲去了东风日产。车子确实很大，空间、座椅、样子都没的说，岳父试驾一圈之后，也对此车相当满意。然而，老婆同时坐了下旁边的逍客，日产的SUV，觉得那车她更喜欢。</p>

<p>随后，熟人介绍去不远处的丰田看了锐志。这车的动力和操控性更好，还是后驱的、6釭发动机。用一个‘骚’字形容再合适不过。车确实是好车，不过我们倒不太东西。熟人是个爱车的人，喜欢操作运动型的车。</p>

<p>后来，自然又去了大众。在此过程中，明确了SUV的后背空间其实普遍不大。出于操作方便的需要，SUV的车身普遍是设计的骗紧凑的。高高的后备箱其实放不了什么东西。而且，途观的小毛小病还是挺多的，保养起来也相对费一些。
于是，岳父打消了买途观的念头，开始在帕萨特和天籁之间想做一个选择。于是又试驾了帕萨特。德国车的操纵风格比较硬和稳，帕萨特当然也是好车。地处上海，修理保养购买，甚至看车都是最方便不过的。但这个车毕竟偏公务了
一些，后排座椅也比较硬，没有天籁舒适。</p>

<p>彼此商量了一下，决定还是老丈人买辆大一些的轿车，我和老婆还是先开一下当前的车练手一阵子，明年再换逍客。但是对帕萨特还是天籁则犹豫不决。这时，熟人建议可以去雷克萨斯看看，那种轿车同时具备了天籁和帕萨特的优点。价格方面也还是可以接受的。</p>

<p>到雷克萨斯的专卖店一块，不得不承认，店的感觉是完全不同的。豪车的销售点的档次确实不一样。从装修的风格、派头到服务态度，都是很明显的变化。堪比经济型酒店一下子变成了五星级。当然，雷克萨斯和天籁的差距没那么大。
试了一款雷克萨斯ES，舒适性、操控性方面具备了天籁的优点，扎实稳定等方面也确实堪比帕萨特。终于，大家发现找到岳父最适合的车子了。</p>

<p>虽然我依然对天籁有着很深的感觉，但考虑到家里的车型搭配和起手阶段并不适合开大车以及老婆对逍客的喜爱，决定还是忍痛割爱。整个挪移的过程可以这么小结：</p>

<p>车辆1： 途观 -> 天籁、帕萨特 -> 雷克萨斯<br/>
车辆2： 明锐 -> 天籁 -> 逍客</p>

<p>虽然变化有点大，虽然最终无缘天籁，但变化后的组合还是很不错的。</p>
]]></content>
  </entry>
  
</feed>
