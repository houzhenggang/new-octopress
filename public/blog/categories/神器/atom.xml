<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类: 神器 | Hegel2011的博客]]></title>
  <link href="http://octopresszhangyu.herokuapp.com/blog/categories/神器/atom.xml" rel="self"/>
  <link href="http://octopresszhangyu.herokuapp.com/"/>
  <updated>2014-05-01T16:51:39+08:00</updated>
  <id>http://octopresszhangyu.herokuapp.com/</id>
  <author>
    <name><![CDATA[Hegel 2011]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IBM的Linux和Google的Android]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/04/12/ibmde-linuxhe-googlede-android/"/>
    <updated>2014-04-12T16:18:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/04/12/ibmde-linuxhe-googlede-android</id>
    <content type="html"><![CDATA[<p>琢磨了一下Google当初为什么要推安卓，随手记之。起初感觉Google正在成为一个类似SUN的角色，而安卓就是Java。<br/>
二者的相似之处在于，java和安卓都给世界带来了很大的改变，借助这两样神器都出现了新的行业分支，如Java的企业应用、电商、网银等，安卓的出现才使得中国国产手机大幅度地进步，并在全球化的体系里占据更有优势的地位。但与此同时，不可否认的是，Google和SUN并未从中获得多少直接的收益。还有一点类似的地方，就是这两样神器也并不占用这两个巨头多少成本。相对于整个规模而言，无论是java还是安卓，对SUN或Google的成本比例都是有限的。</p>

<p>然而，转念一想，Google和SUN其实又是完全不一样的。SUN推广Java是希望卖更多的自己的硬件服务器，而且这个思路在90年代中期基本是可行的。而Google的服务现在如日中天，推广安卓确保了他在移动互联网时代（我更愿意称之为终端和使用人群进一步扩大的互联网时代）依然是搜索业务的王者。所以，仅就结果而言，Google是成功的，而SUN确实是被釜底抽薪了。</p>

<p>相比较而言，Google推安卓的动机和效果都更类似于90年代末IBM对Linux的扶持与推广。所欠缺的可能就是IBM没有收购Linux, Linus也没成立一个Linux的公司。<br/>
IBM借助Linux，抵挡的目标是M$，使得Windows难以在低端的PC服务器上一统江湖。而Google的安卓，则让智能手机避免了被Apple一家独占。而在此成功狙击的基础上，IBM和Google都继续卖着自己已经处于优势地位的服务。而再看SUN的话，当时的Java并无直接的竞争对手，后来的J2EE也是如此。SUN的目标比较单纯，推广Java只是为了可以让更多的公司做互联网的网络服务，而这必然需要更多的服务器。在PC Server+ Linux未流行的年代，Solaris是较低成本的一种选择。这个算盘其实打的还是不错的。但是，IBM大神对Linux的扶持，彻底让Sun的硬件找到了更廉价也更类似的替代品。当大部分用Java的企业，不去问Sun买Solaris服务器而是选择问IBM HP Dell买硬件、软件则直接使用Linux时，SUN的Java就真的只是当活雷锋了。可能IBM的本意未必是干掉SUN，只是希望M$不要也在服务器市场形成垄断，如同Google只是希望不要苹果在智能小型终端一统天下，但不可避免地误伤了SUN。当然，SUN的倒掉肯定还有其他更重要的因素，毕竟竞争和替代品是市场经济下每个个体和公司都面临的现实。</p>

<p>而IBM和Google的举动，毫无疑问都是成功了。IBM的PC服务器业务虽然卖给了联想，但至少也风光了十几年，而服务则继续在大卖。如果当初M$用windows统一了PC Server，那恐怕IBM现在也没服务好卖了。Google则在移动互联网时代，继续当着搜索的领袖，苹果在无法一统江山的情况下，也只能让Google继续保持是最重要的终端搜索引擎。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小米的红米]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/04/07/xiao-mi-de-hong-mi/"/>
    <updated>2014-04-07T16:17:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/04/07/xiao-mi-de-hong-mi</id>
    <content type="html"><![CDATA[<p>尽管红米电信版在小米网站是一直没抢到，但在电商的站点倒有不少已经上市的，只是贵200左右，为了赶上老妈的生日，还是直接去电商渠道购买了。</p>

<p>中间还有个插曲。原本是想在京东定的，然后要定了京东告知上海缺货。而在苏宁，反而发现还比京东便宜100，只要899. 当然，比小米官方的原价却又贵了100.但这个不用抢，就不是期货更不是神话了。</p>

<p>机器确实很新，3月底才新鲜出炉的。但拿到手后不得不有下面一些吐槽：</p>

<ol>
<li>cdma卡槽标记不明显。打开机盖后，只在很不显眼的地方能看见很小的cdma和gsm字样，除非凑到10公分以内，不然很难看清楚哪个是gsm哪个是cdma的卡槽。而且，在说明书上是完全没有标识的。</li>
<li>部分卡识别不出来，虽然是标准卡但可能还是要换卡。手头两张大卡uim，只能识别一张，于是不得不去营业厅花20换卡。要知道，我之前用努比亚z5s，虽然只能插小卡，但自己剪了一下就能用。而这个虽然也是大卡，但却不能用。想想也挺讽刺的。网上查了一下，这个也不是个案。可能只能说uim卡的标准比较古怪吧。好在换了2014版的uim卡也能认。</li>
<li>后盖很难开。这个可能习惯了就好。不过对于一个可以更换电池板的手机而言，确实不太方便。</li>
</ol>


<p>其他其实还有一些细节方面还是可以改进的。往好处想，小米其实还有提升的余地，毕竟这些是我这个不太挑剔的人都能直接发现的毛病。</p>

<p>整个手机的质感比较一般，很类似于多年前买的台电的mp3，从塑料到面板都很像，中国制造还需努力。当然，这也是一分价钱一分货，努比亚Z5S的接触材料的质感就比红米好多了。</p>

<p>此外，也用了下小米的rom软件，因为用的时间也不算长，主要只是教会老妈使用，感觉并不比中兴的强，可选的主题倒是比较多，但这个对我来讲确实不重要。</p>

<p>说了那么多不足，其实我还是很喜欢这个红米手机的。毕竟好处更多。只是说小米的好已经铺天盖地了，对于安卓的好处我也很认可，所以也就不再多说了。虽然是借助安卓和高通，但小米好歹是开创了属于中国的智能手机制造时代。还是很令人钦佩的。</p>

<p>最后，感概一下，形势还是比人强。我一直很讨厌双模双待，认为除了费电没有半分好处。然而，现在c网适合数据、gsm只适合电话的现实、以及有宽带必有c网流量，使得使用双卡已经变成一种很平常的行为。和我讨厌双网双待有一个最大的区别，彼时所谓双模只能用来打电话，而如今数据和电话确实已经是两种需求了。而且，数据业务确实基本不需要你告诉别人你的手机号。所以，c网数据、g网维持语音业务，也是当前比较合适的一种模式。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nubia Z5S]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2014/03/10/nubia-z5s/"/>
    <updated>2014-03-10T18:03:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2014/03/10/nubia-z5s</id>
    <content type="html"><![CDATA[<p>作为多年电信号码的手机用户，现在用的手机也有一年半了，实在等不起LTE上市，所以决定还是继续买3G的手机。</p>

<p>电信版手机的选择限制还是比较多的。目标最后定在2k以内的国产手机，这样的选择无非是小米3 华为p6 努比亚等几种。一开始，想买小米3.正好过完年，米3的电信版也出来了。无奈抢了两次都没抢到，于是最后还是选到中兴华为的机型里面。</p>

<p>尽管p6的样子更好一些，但海思的芯片实在不讨人喜欢；而努比亚z5s的芯片倒是高通的旗舰，品质绝对有保障。最终，还是重视内在胜过了外观，选择买了z5s。</p>

<p>包装红白配，手机红黑配，设计倒是挺简洁的。
配件很节约，只有一个充电电源和一根充电线。但安卓好歹这么些年来，usb的接口都是一致的，所有的线都可以通用。比起水果一两年换个接口，明显更符合我的口味。
这个取卡针，不得不说和苹果真的很像。
单手持机的话，手感还是很轻巧的，整个重心控制的感觉很好。当然，5寸的屏幕还是大了些，操作起来就要双手了。响应等确实很快，顶配的CPU和大内存确实使得系统很流畅。</p>

<p>手机的背面。摄像头确实突起来一些，我个人倒不是很敏感这一点。贴纸有点山寨，过一阵打算揭掉。顺便提一下，这个贴纸写的cdma2000和wcdma手机，但手机本身又是所谓支持td-scdma的，所以显然写的有问题。</p>

<p>不想买micro-sim就是不想剪卡，但买了之后，发现其实剪卡只要掌握一定的门道就很简单。尤其是我这张3对6接触点的sim卡，那是相当的好剪。上面这个是要剪的卡，芯片所占面积本身就极小。</p>

<p>只要判断准自己的卡是3对6触点还是4对8触点，然后找相应的尺寸攻略，打好样后照着剪就万无一失了。
用铅笔打好样，直接剪好放进插槽即可。</p>

<p>之所以最早看中小米，是由于这3个里面，小米和努比亚都是支持全模，在国外也能用w的数据网络；华为的电信版在国外只能用语音。而华为的特色是双待，这一点和红米类似，但我只有一个号,双待对我而言意义不大。小米支持标准的sim卡（其实是mini-sim）而努比亚和p6都只能是小一点的micro-sim，外加电池好不少，这才让我起初倾向于小米3. 但一直买不到的感觉就不太好了，毕竟一个手机都买的这么累有点被厂商牵着鼻子走了。然而手机的选择还是很多的，所以试了2次之后决定转型，现在发觉nubia确实很不错。</p>

<p>鲁大师的跑分结果很高。高通的CPU果然不让人失望。</p>

<p>自从Google发布了安卓，中国手机厂商的春天就来了。虽然整个模式讲穿了只是之前HTC做过的那种：系统依靠移植，芯片主要也是依赖外部的，国产厂商主要做的还是一个集成加制造的活。但玩的比HTC有声有色的多。中国制造的性价比优势尽情展现。</p>

<p>尽管整体相当满意，但电池确实有点不太经用。这个2000ma出头的电池，如果整个下午都用qq聊天的话，基本上半天电就要用光了。所以，买这个机器移动电源最好是要配一个的。z5s的电池是不能随便更换的。自从用上智能手机后，我以前的手机上两块电板轮流用的机会也不太多了。目前比较方便的还是配个移动电源。</p>

<p>自从改用了C网，或者说自从智能手机开始普及，更换手机的频率一下子提高了。C网之前，老式的手机通常可以稳稳地用2年以上。而用上智能手机尤其是C网的智能手机后，更换频率基本在一年以内了。上一个华为8812还算是使用时间比较长的。不知道Nubia Z5S可以保鲜几年？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim and lampbrother]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/04/05/vim-and-lampbroter/"/>
    <updated>2013-04-05T11:34:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/04/05/vim-and-lampbroter</id>
    <content type="html"><![CDATA[<p>中了vim的毒之后, 开始学起了vim. 这东西在windows下也能用,而且扩展性极佳, 确实值得学学. 添加syntax和
snippet都极其简单, 如果还要写代码的话, 确实值得掌握. 主要是发现这个工具就是给我这类人用的.</p>

<p>台湾人的视频太简单, 很多基础的东西没有讲好, 好处就是他是按照git加载众多挂件之后演示并授课的, 所以
比较吸引人. 但光那些显然也不够, 而且他本身也不算很熟练. 于是开始找其他视频. 找了一圈以后, 发现了
<a href="http://www.lampbrother.net/">lamp兄弟连</a>的视频. 我个人比较喜欢里面李强强的linux课程. 另一位稍早录制
的李阳的linux视频也很不错. 这家培训机构感觉还是很不错的, 培养的确实是业界最急需的一线工人.不过他的培训主要
针对全脱产的、尤其是那些正要找工作的20岁出头的年轻人, 我是挺难报他们的班. 毕竟不太可能有什么时间和精力能够
连续坐在实验机房里一整天. 而且这样的效率其实也不高.</p>

<p>然后顺便看了一下RHCE和RHCA. 发现lampbrother的课程基本是按RHCE的脉络来的, 这门课其实可以直接改为通过RHCE.
RHCE的范围基本如下:</p>

<ul>
<li>Hardware installation and configuration</li>
<li>The boot process</li>
<li>Linux filesystem administration</li>
<li>Package management and Kickstart</li>
<li>User and group administration</li>
<li>System administration tools</li>
<li>Kernel services and configuration</li>
<li>Apache and Squid</li>
<li>Network file sharing services (NFS, FTP, and Samba)</li>
<li>Domain Name System (DNS)</li>
<li>E-mail (servers and clients)</li>
<li>Extended Internet Services Daemon (xinetd), the Secure package, and DHCP</li>
<li>The X Window System</li>
<li>Firewalls, SELinux, and troubleshooting</li>
</ul>


<p>只是这家机构的目的培训直接能工作的学生而不是考证为主的, 猜测因此没有开这门课吧. 课程的那些实验都会做的话,基本也就可以当一个称职的系统管理员了.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About AWK]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/02/19/about-awk/"/>
    <updated>2013-02-19T14:52:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/02/19/about-awk</id>
    <content type="html"><![CDATA[<p>受 <a href="http://coolshell.cn/articles/9070.html">AWK简明教程</a> 的影响，学习了一下仰慕已久却始终不得要领的AWK，
甚至还下载了著名的科尔尼汉写的《The AWK programming Language》并看完了第一章和后面的一些内容。</p>

<p>学习之后，发现这个东西其实还是很简洁的，同bash的配合确实很好，在某些应用场合下，处理文本、截取文本、调整文本，的确是利器。
但是，也必须注意到，这个东西确实已经是上古一代的东西了。不是说上古的东西就一定使用价值降低，不过AWK的作用和处理范围
已经大大地被Python和Ruby侵占。在Unix/C之下，他是足够简便的，对bash是很好的补充。如今已经是Ruby Python这些
script流行的年代，而这些脚本语言可以很大程度上替代AWK。AWK保留的优势仅仅是最简单的场合下，比如<code>{print $1}</code>之类时
显得足够简洁的优势。稍微复杂一些，如循环、分支判断一多，就显得不如Ruby Python了。</p>

<p>所以，看AWK的第一章以及简明教程就足够了。因为基本上也只要用到这些最简单的应用，写出优雅的bash命令。是用来写程序<strong>命令</strong>而不是程序<strong>文件</strong>。</p>
]]></content>
  </entry>
  
</feed>
