<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类: 笔记 | Hegel2011的博客]]></title>
  <link href="http://octopresszhangyu.herokuapp.com/blog/categories/笔记/atom.xml" rel="self"/>
  <link href="http://octopresszhangyu.herokuapp.com/"/>
  <updated>2013-01-20T20:13:24+08:00</updated>
  <id>http://octopresszhangyu.herokuapp.com/</id>
  <author>
    <name><![CDATA[Hegel 2011]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[hackers &amp; painters]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/01/20/hackers-and-painters/"/>
    <updated>2013-01-20T15:38:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/01/20/hackers-and-painters</id>
    <content type="html"><![CDATA[<p>Paul Graham 的这本书有15个章节。我有英文版和中文版两个版本，但读了英文版没几页之后，我就决定把这本书当做双语练习来对待。
是的，作者的文章很美，也很有深度和启发，值得对照、精读和背诵。15章我已经阅读了几章，第一章的Why Nerds Are Unpopular感觉最好。<br/>
第六章How to make wealth有人说看了大受启发，基本说明了财富和金钱的关系，但这个内容在我看来就比较平淡，因为中欧商学院推荐的
图书基本已经把这个道理说得很清楚了。所谓大公司测量难小公司测素质方便也是很早就是我自己产生的想法。不过高科技公司拥有的杠杆（放大）
效应此前并没有强烈的意识。其他的诸如形成产权概念、保护私人财产是西方发达的主要因素，这个xiaozixin早就讲过。只不过这下子更明确了
西方也不是一开始就这样的。产权或者说私权的明晰是一个逐步发展的过程，也是文艺复兴的一大成果。在西方的过去，统治者及其手下也是会想办法
把财富从创造者那里夺走。只是后来才逐步找到了平衡。</p>

<p>第10章和第11章都是关于程序语言的。对我而言，这两章比较业余。当然，作者的视野很高，从机器语言到高层语言，从动态执行到静态编译，从强类型
到弱类型都介绍了一下，感觉这章是给外行看的科普文章。后面的100年语言如何就比较扯了，随便看看就行。</p>

<p>下面重点说说第一章。这篇文章很独特。作者从书呆子(nerds)为什么不受欢迎说起，指出是因为nerds对受欢迎不是真的最感兴趣；随后分析美国普通
初高中学校的分层情况，指出nerds所受的是“迫害”，因为一个梨型的架构下必须要有一些牺牲品成为受打击对象，这样最底层的“白人”才能好受些，才能享受被欢迎。
随后才引出文章的真正主题，学校为什么会存在？学校和监狱为什么又类似的地方，为什么二者的内部社会等级也很类似？其实文章是对现今流行的
学校教育制度的一种抨击。因为学校和监狱一样，他们的存在本身并不是为了创造什么财富，一大功能是把人给围起来避免影响工业化时代<strong>其他普通人</strong>的
工作。学校的存在使得一个人在22岁之前和现实世界是分离的。而且缺乏实践，相对于农业文明（藏人小孩8岁就可以放牧了）时能创造真正的财富
需要很长的时间和代价。<br/>
最后又回到主题，指出nerds之所以在学校不受欢迎本质上是他们看到了更现实世界的需求，他们是能促进世界进步的人。</p>

<p>一旦nerds进入现实世界，现实世界的需求需要他们去解决，此后他们就会被得到尊重。因为此时受不受欢迎在小团体中不再成为主要因素。而且世界范围的
扩大也使得nerds可以自己组群从而不再孤单。</p>

<p>结合自己的感受说说这一章。从nerd对现实世界有用来讲，这个世界上的人本来就是可以分为欢迎且有用、不欢迎但有用、欢迎但没用、不欢迎且没用。
一个无所事事的世界或环境里，欢迎是第一位的，有用是次要的，但一旦环境发生变化必须要有用时，那么欢迎反而是可以退居之后的。作者的文章
只是把nerd局限在学校，然后一下子推广到了大千世界。<br/>
现在看来，中国媒体日常所讲的“情商”其实是社交受欢迎的意思。严格地说，情商不单包括受欢迎，还包括承受压力、自信心、意志力等个人品质，我国
媒体强调的情商只是片面的受欢迎关联的几项。</p>

<p>孩子的世界确实存在着欺负。因为其秩序是团体内部临时组合而成，没有经历过历史的演变，层级和帮派往往会占据主流，看来无论是美国还是中国的中学
都存在秩序混乱的特色。只不过中国是以考试为荣的国度，书呆子只要成绩好，一般也没人会看不起，反而还是挺受尊重的。但任何群体里，都不太会欢迎
逆袭这样的举动，此时美帝和中国中学生的表现都差不多，即群起而攻之。这也是为了站队的需要，使得自己可以被其他团体接受。只要是梨型结构，可能就是这种特色。</p>

<p>关于教育，美帝的一套看来并不值得一学，他们的问题也不少。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《走出软件作坊》读后感]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/01/14/out-the-firm/"/>
    <updated>2013-01-14T22:47:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/01/14/out-the-firm</id>
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/david_lv">阿朱</a>的这本走出作坊现身说法，很贴合实际，所以容易引起共鸣给人启发，也确实找到了很多问题过得去的解决办法。
尽管个人认为叫做走进 软件作坊更合适些。</p>

<p>首先说说阿朱的背景。从文章看的出来，阿朱走的是Windows的路线，他开发软件从C/S开始，也以C/S为主，现在也逐步有了一些B/S的东西。
由此背景，决定了他的很多开发观和实际操作的守则。他熟悉Windows的机制，熟悉SQL Server的内部情况，对UI那套比较熟，对MS的工具（Excel Word PPT)
很偏爱，但对console不熟，所以自动化操作方面不强大。然后他受微软的影响很深，所以管理团队喜欢把员工拆成螺丝钉，而不是独当一面的人才。
符合老外的发展思路。但又控制成本，因为能力弱的人成本自然低。从这点上来说，给他打工就不太值得。因为发展空间和薪水空间都有限。他自己也明言，
这样做主要就是为了控制成本。当然，以中国现实来讲这个策略也没什么不对。都像DHH那样，中国人能就业的就没多少人了。</p>

<p>他的背景的另一大特点就是他是卖软件的。这个模式也是微软的模式，而不是卖服务的。软件的销售主要靠售前和销售去打单，实施经理负责项目现场部署和培训，
(ps. 大辉同学原来就是做<strong>实施</strong>的，说白了就是装机的做集成的，所以熟悉OS和Oracle)
他的软件有大量的培训工作要做。研发则在家里支撑。这个模式里面研发和电话支持（call center）确实很像。因为卖软件和实施的关系，这就使得他很善于同不同的客户打交道，见过的
经历过的人足够多，所以他在交际、沟通方面的能力是要强于大部分技术人员的。</p>

<p>他的技术特点是精通数据库和精通操作系统及其应用。对网络等实际一般般。在技术上，我想自己可以做的比他更好。当然，我的数据库还有欠缺。但和他
相比，最欠缺的是和人混熟的能力。虽然他自己也说不喜应酬，他能迅速要到全部联系方式、能迅速与人沟通（吃饭），这些说明他绝不是一个不善于同人应酬的。
这方面，我做的就比较欠缺了。</p>

<p>文章是很贴近实战，也相当直面惨淡的IT人生，是值得一读的文章。上面谈完对作者的基本认识后，将继续写对书内容的感受。</p>

<p>其次，这本书最有价值的地方在于作者真实地描述了自己的研发与管理的状况。仅仅冲着这份勇气，这本书就值得一读。不是人人都乐于或敢于把自己的工作经历
示人的。毕竟现实往往琐碎，有些话有些事情做做可以，说出来就未必敢了。不过作者冲破了这个限制，展现了相当真实的微软系、卖软件、低成本、多营销的
CTO的生活。包括同老板的关系，同下属的关系，同客户的关系，如何提升研发部门的地位等等，这些都很实在也很具体，基本上很多都可以立马借鉴运用。<br/>
拿软考的标准，有些内容像需求管理等都是直接可以作为论文的范文的。</p>

<p>回到自己身上。在对比大辉时，我觉得自己落后这个同龄人3-4年，这个数字和我的整个职业生涯前面脱掉的4年时间大致相等。个人的目标也是再用3年时间，可以
达到他们的成绩，做出和他们类似的事情，拿和他们类似的待遇，并拥有类似的影响力。</p>

<p>而在看了《走出》之后，个人也想对自己的成长关键点作一下小结。</p>

<h3>学习期</h3>

<p>我对计算机真正的认识是在大四下才开始的。在我读书的年代，资料并不多，影印版的流行是大三以后的事情。<strong>《The C programming Language》</strong>第一次让我意识到
程序书可以写的如此简洁清晰而又例子丰富，看了之后才明白C语言应该用来干些什么。可以说，K&amp;R带我入了门，也使我开始习惯看原版技术书籍。
随后影响较深的是<strong>William Stalling是《操作系统原理》</strong>。这是我在即将赴公司报道前的半个暑假看完的。由此才对操作系统有了初步的认识，明白了操作系统发展
的来龙去脉。直到毕业，我的计算机知识才算入门。尽管我经历了我们国家位列前三的计算机系的4年培养，但真的入门的感觉是在毕业那年的7月份了。当然，
没有之前的基础和培养出来的毅力，这两本书不会带给我那么大的收益。而且在9年后的考研中，我进一步确信我的学校我的系确实不愧是中国前三。尽管也不那么完美，
但在比很多学校强大的多。</p>

<p>之后是作为程序员工作的2年。也还是以学习为主。期间用Power Builder写了点client的小东西，主要是用VC开发了一些采集程序之类的东西。跟了几个项目，学习了Java
的基础内容，但没有应用也没什么感觉。这段日子里，收益最大的就是看了Stevens的一系列图书，从<strong>《APUE》</strong>到<strong>《UNP》</strong>，再到TCP系列。除了TCP第二册，其他的
都消化吸收的不错。看UNP的感觉更好，但APUE给我补充的进程等知识让我基本搞明白了OS是怎么回事情，而UNP造就了我的技术口味。后来去做Web能迅速提升，
和这也有很大的关系。</p>

<p>严格的说，这两年不能算荒废，只能说没有经历很好的项目成长的有点慢且漫无目的，针对性不够强。但随后的两年时间则是基本和之后的发展方向脱离的。</p>

<h3>进入Web界</h3>

<p>直到毕业4年后，我的工作重心开始转向Web应用的开发。那时候公司整个的方向也往软件开发转移了。系统从技术上讲就是Java的简单企业应用。技术难度上和业务类型
上和阿朱的公司也差不多，只是路线不一样些。开发工具自然是Java，运行的服务器普遍是Linux或各变种的Unix，数据库则是MySQL和Oracle。起初我对前端
和页面一窍不通，主要负责用Java写后端。有APUE的底子，我的Java能力没用多少时间就已经走在公司的前面。做Java Web用公司惯用的框架Struts做了一年半，
期间项目很多，当然技术上都类似，不过我也逐步从只做后端开始后端到前端通吃，写页面时长让我感觉很痛苦。一年半后，部门组织调整，我也不愿再做IPTV，
于是撤出繁忙的IPTV任务组后，我稍微有了点空闲时间。而在那一年半中，通过读原始的帮助文档及孙卫琴的Tomcat书籍，我基本搞清了Java Web的原理。但是我对
Struts的框架带来的痛苦很不满意。<br/>
07年开始，终于又有了一个跨越和突破，那就是开始学习并引入了Webwork。在读<strong>《Webwork in Action》</strong>的过程中，技术能力得到了提高，而且很多时候都会产生
我也是这么想的感觉，而且认为webwork所做的和我设想的类似，这样一步一步树立起来了对自己技术感觉的信心。随后的项目中，就引入了Webwork框架，确实提高了效率
减轻了不少工作量。从此之后的项目就再也没有回到struts。直到webwork更名为struts2，就更验证了自己的品味和技术感觉还是很出色的。</p>

<h3>高速发展</h3>

<p>而在应用webwork之后，也在07年，开始接触了<strong>Rails</strong>。而这使我的技术能力及解决办法坐上了高速火车。通过应用和熟悉这个框架，逐步熟悉了
Web/HTTP的方方面面，也进一步熟悉了Linux。开始接触了Nginx、Mysql、Ruby、Git/Github、Heroku、Redis、MongoDB、Node.js。Rails直接作为项目使用的主体工具并不多，
至今也只有六七个项目使用了Rails做框架来实现Web界面。出于成本和用人的考虑，部门领导最终还是决定走Java路线。但之后的工作就主要变成了架构师，
所以应用什么语言并非影响很大。反而是架构、设计间共通的东西可以带来更大的影响。在Rails熟悉的过程中，所掌握的设计方法及Web的关键元素，使得我
在应用Java技术时可以更加游刃有余，很多时候有种以高看远的感觉。后来写Rails的评测论文，使得自己对操作系统、性能响应的认识又更进了一步。<br/>
而从Rails引申出来的项目管理、Nginx等种种神器，对个人也有很大的进步，而且很多可以直接运用。也由此，我对自己的定位是技术管理人才。
以统管全体的技术为目的，解难题和立规则，从而提高集体的竞争能力。这个活应该说是最适合我干的。</p>

<h3>转战云计算</h3>

<p>考虑到公司提供的平台和我个人的喜好，希望可以在云计算方面有一番作为。我的硕士毕业论文也是写的这方面的相关内容。而<strong>Node.js</strong>的出现，也给云计算
的发展提供了进一步的条件。前路漫漫，事情多多，到底怎么样也只有继续努力下去。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[大话存储]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/01/08/da-hua-cun-chu/"/>
    <updated>2013-01-08T17:01:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/01/08/da-hua-cun-chu</id>
    <content type="html"><![CDATA[<p>张冬的《大话存储》确实一本好书，读了之后顿感以前的计算机组成算是白学了。</p>

<script src="https://gist.github.com/7e951cbd394d22eeffa0.js"></script>


<h2>存储的发展</h2>

<p>封面很山寨，图片有很多。比较有利于增强感性认识，也符合我想认识设备的需求。</p>

<p>纸带 磁存储 硬盘 磁阵 网络磁阵（几百个磁盘） 网络存储（硬盘从主机箱移到外面）</p>

<h2>总线</h2>

<p>总线就是一条或多条物理导线，导线可以有多条，比如8条、16条、128条。导线（总线）是可以印刷在电路板上，但密集的导线之间会产生<strong>高频振荡</strong>，所以会将这些导线分组印刷到不同的电路板上。然后再将多块板压合起来，形成了所谓的多层印刷电路板(多层PCB)。<br/>
导线中，有些是<strong>交互数据</strong>用的数据总线，有些是<strong>传递控制信号</strong>的控制总线，包括处理<strong>中断与仲裁</strong>的,另有一些是用来确认目标设备的<strong>地址总线。</strong></p>

<h3>连找发模型、CPU与硬盘的交互</h3>

<p>主板上的电容电阻蛇形线都是为了保证导线的通畅。<br/>
CPU和硬盘通过总线相 <strong>连</strong> ；<br/>
<strong>找</strong>即地址通过IO端口向内存中映射，由北桥芯片将这类地址的数据全部映射到总线上的实际设备；<br/>
<strong>发</strong>即发送操作指令，对于磁盘CPU有如下三条指令：
  1. 读还是写，外加其他选项如是否缓存、是否用中断来通知CPU处理
  2. 知名应该读取的硬盘逻辑号[LBA]<br/>
  3. 给出读取出来的内容放在内存中的哪个地址。<br/>
上面这三个指令其实是发给南桥上的控制器，南桥再将指令翻译成磁盘认识的一系列指令，南桥和磁盘之间的协议接口形成了ATA和SCSI两个指令集。</p>

<h2>磁盘结构</h2>

<p>盘片有两个盘面，每个盘面对应一个磁头，所以盘面号就是磁头号，一般是0-5号；<br/>
磁头和头发丝的大小差不多，磁头和盘面间的距离只有头发丝的千分之一；<br/>
盘片上每个同心圆就一个磁道，磁道从0开始编号，磁道上的每段圆弧称作扇区，一个扇区有512字节通常，扇区是流式的，类似磁带，扇区是分块的；<br/>
不同的盘之间相同磁道号的磁道共同组成柱面，圆柱面也从0开始编号，读写是首先在同一个柱面展开的，这样可以取得类似并行读写的效果，避免了不同磁道间的频繁切换；<br/>
能划分的扇区数取决于磁头有多小以及磁头的步进距离有多小，即磁道和磁道间隔有多细</p>

<p>扇区传统上采用CHS编码（Cylinder柱面、Header磁头、Sector扇区)，每个扇区包含扇区头信息和数据区两部分，头信息就有CHS信息以及是否为坏扇区这些内容；不过随着发展，目前已经抽象成了LBA寻址方式，但这只是在磁盘外部表现的逻辑</p>

<p><strong>扇区交叉因子</strong>是为了满足磁头旋转时因速度原因跑过了头，从而把不连续的扇区编号成为第2扇区，其实是一种模的运算，核心还是为了迎合磁头的物理运转需求
<strong>磁头扭斜</strong>则是为了满足切换磁道时也会产生的位移，因而磁道之间开始编号的起始扇区也有一个差</p>

<p><strong>低级格式化</strong>就是利用磁头重新划分扇区</p>

<p>总有个最小单位（芝诺悖论，龟兔赛跑悖论）</p>

<h3>硬盘接口技术</h3>

<ul>
<li><p>ATA</p>

<ul>
<li>IDE（PIO,DMA两种主要模式，前者的数据通过CPU写入内存，后者磁盘直接写入内存，最高的是ATA133）</li>
<li>SATA（较PATA的信号干扰小）</li>
</ul>
</li>
<li><p>SCSI（带宽大，热插拔，较ATA多了SCSI控制卡，其实就是多了一个处理器）</p>

<ul>
<li>并行</li>
<li>串行</li>
<li>IBM SSA</li>
<li>FC接口（FCP）</li>
</ul>
</li>
</ul>


<p>CPU -----> 磁盘控制器（南桥） -----> 磁盘驱动器控制电路（硬盘内）</p>

<pre><code>`接口1：磁盘控制器驱动程序`   `接口2：ATA/SCSI接口`  
</code></pre>

<p>磁盘数据 -----> 驱动控制电路的缓存 -----> 磁盘控制器</p>

<pre><code>  `内部传输速率`               `外部传输速率`  
</code></pre>

<h3>并行的劣势</h3>

<p>并行是要求同步达到，这给并发信息之间的配合带来问题；它的传输频率不能太高，因为并行会增加干扰增加配合难度，而串行则无此问题，可以通过增加频率来提高速度。这里面的核心问题是<strong>传输距离</strong>，距离低的比如内存到cpu就不用担心干扰和配合带来的难题。而距离远的，如usb ata这是串行优势明显。</p>

<h2>七种Raid</h2>

<ul>
<li>Raid 0 --- 几块硬盘全部并发；</li>
<li>Raid 1 --- 1比1镜像；</li>
<li>Raid 2 --- 一部分盘用于校验，校验算法采用海明码；  校验盘数量很大，8位的数据就需要4块校验盘，所以已废弃</li>
<li>Raid 3 --- 较Raid 2 对校验进行了突破，采用了布尔运算中的抑或算法，可以用更少的<strong>校验盘</strong>，可以校验和找回，但不像R2那样可以纠错，条带也被弄成了4KB；
每个读写都要所有盘全部一起动，所以文件系统的并发IO很差，因为每个IO都会让所有磁盘都在运作，从而无法可以同时执行多个文件系统IO</li>
<li>Raid 4 --- 较Raid 3 增加了条带的深度，使得磁阵的block更大，从而在写数据时可以只动用少数硬盘；但所有的操作都要写校验盘，从而形成了一个瓶颈；</li>
<li><p>Raid 5 --- 继续使用校验，突破点在于不再单独地使用一个硬盘做校验盘，而是在所有的磁盘中都产生了校验区；</p>

<ul>
<li>Raid 5E和Raid 5EE都是带热备盘的Raid5.</li>
</ul>
</li>
<li><p>Raid 6 --- 另外6种Raid基本只容忍可以损坏一种磁盘，Raid 6允许损坏2块磁盘。在XOR运算之外，又增加了一种校验运算，从而提高了磁阵的可靠性。</p></li>
</ul>


<h2>Raid 虚拟磁盘 卷 和文件系统实现</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[房祸替黄祸挡下了子弹]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2013/01/07/huanghuo-give-way-to-fanghuo/"/>
    <updated>2013-01-07T19:31:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2013/01/07/huanghuo-give-way-to-fanghuo</id>
    <content type="html"><![CDATA[<p>读了王力雄写于90年代的《黄祸》，可以想象这本书在当时必然是取得了爆发性的效应。回过头来看，尽管有些东西已经过时了，但还有些东西真的是切实存在，
而且直接导致了如今的<strong>房祸</strong>。</p>

<p>整篇小说其实写的很跳跃，基本是一段一段的。场景也在中国的北方南方、世界各国跳来跳去的。书中塑造的让人记得住的人物有</p>

<ol>
<li>李克明，一个身手很好的警察，蒙冤并遭毁容，而后引出一系列武装斗争，最后死在中俄边境。</li>
<li>石戈，不大不小的京官，后来代理了总理，递进民族制度的代言人，应该最接近作者本人。</li>
<li>王锋，所谓的法西斯军人，但左看右看不太像。</li>
<li>周驰，气动大师，这个最典型，但是作者的小说里把气功列为实际会起作用的。</li>
<li>陆浩然，前任总理，替代了总书记，比较软，也缺乏掌握大局的能力，最后被美国人暗杀。</li>
<li>黄士可，福建的一个市长，带领福建搞一国两制，排斥北方人，强调北京是国，福建是制，口号是“自己过，过的更好”，“北佬的穷包袱属于他们自己”。</li>
<li>丁大海，王锋的潜艇舰长，最后发了20枚核弹导致美俄发生误会。</li>
</ol>


<p>女性相对较少。印象深刻点的无非一个是台湾女间谍，另外一个就是陈盼，石戈的姘头。</p>

<p>小说的情节其实很荒诞，作者在当时也完全无法意识到互联网和信息化会对中国造成更大的改变。
书本身还是很精彩的，作者也把自己的一些观点纳入其中。例如：</p>

<ul>
<li>马克思主义把全部注意力放在消灭生产资料私有制上，忽略了<strong>社会权利私有制</strong></li>
<li>中国是人口最多，人均资源最少，欲望最高，道德水平最低。这是房祸的根源，而且无法解决</li>
<li>投票有用，但是如果投票是去投<strong>脱离地球</strong>之类的，那全部赞成票也是没用的</li>
</ul>


<p>王力雄的文风是很偏理科化的作家，充满着阳刚和逻辑之美。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[张纯如钱学森传札记]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/09/26/zhang-chunru-de-qianxueshenzhuan/"/>
    <updated>2012-09-26T10:33:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/09/26/zhang-chunru-de-qianxueshenzhuan</id>
    <content type="html"><![CDATA[<p>钱学森在美国生活了近20年，工作学习了15年，软禁了5年，作为秘密解密的期限。原因是当时美国麦卡锡主义盛行，反共高潮迭起，钱学森有个同事是共产党员，于是他也被怀疑是共产党员。实际上他在美国是受到驱逐的，意味着<strong>他的事业在美国已经结束</strong>。但是回国之后确实打开了新的局面。当然，这仅仅就中国和个人事业来说，他是中国的首席科学家和工程师，但在整个业界而言，他作为科学家的成就是比较一般般的。</p>

<p>出生在杭州，3年后随他的父亲北上首都北京，因为袁世凯要搞男性公民教育。他的父亲是去东洋留学过的，学习的是哲学。</p>

<p>北京第二实验小学，北京第一实验小学（男女分校），北京师范大学附中，上海交通大学机械工程铁路专业。但因在上海反复遭到日寇轰炸，所以对航空航天产生了兴趣，开始谋求庚子赔款奖学金。原本他应该3年后回国接受导师分配的工作。</p>

<p>中国知识分子对动手实践和手工劳作存在一种普遍的鄙视，令人疲惫万分。中国人适合强调纸和笔的地方，而不是动手实践的经验。加州理工学院的卡门教授（匈牙利裔）秉承德国式的理论思辨，又是仅有的航空项目，于是钱学森就去那里了。</p>

<p>在加州理工，干的也是实现的事情。但是实现工具变成了纸和笔。负责推演和计算。老师出思路，钱学森负责实施和细化，最后拿出方程式。</p>

<p>钱学森获得巨大的进步是从加入火箭小组开始的。在这个私人组织的项目里，他们一步一步解决了燃料、喷嘴、材料以及相关数学物理理论的东西。他也因此写出了不少重要的论文。而且整个火箭项目作为航天领域也是一个新生事物，因而钱也获得了巨大的收获。随后，他们和军方产生了联系。军方起初感兴趣的只是对燃料，也就是推进系统，毕竟这个东西可以直接用在飞机上。即<strong>喷气推进</strong>。然后才进一步发展到火箭和导弹上面。之后他们就<strong>跑部钱进</strong>，直到一年批到300万美元的预算。</p>

<p>ps：钱伟长也是加州理工学院的。</p>

<p>再之后他就跟随老师冯·卡门去了位于华盛顿的美国陆军航空部。关键也是跟对人啊。</p>

<p>钱学森在47年回国，娶了蒋英做妻子。蒋英是蒋百里的三女儿，但从小就给钱的父亲带的。</p>

<p>“中国永远是中国人的中国”。尊严的生活是温总理抄的钱学森还是翻译抄的温总理，就不得而知了。</p>

<p>可以说是美国人把钱逼回了国内。在美国他主要从事研究工作，属于尖端领域的开创性工作；在国内则不具备这样的科研条件，他更多的是起到培养人才、打基础、指方向的工作，实质上是模仿学习别人的工作。完成这个任务的前提是他能向国家领导人要到经费。之后，他的角色就是周旋于领导、军队、科研队伍、研发项目之间。在中国，钱学森更伟大的成就是作为科学家的管理者，毕竟管理几千名科学家可不是一件容易的事情。<br/>
而实际上他更是一个做好了基础工作的人，是真的从长远让中国的科学技术取得了发展的基础，类似根宝的东亚。只不过根宝要自己掏钱，而钱学森主要是和领导人谈。</p>
]]></content>
  </entry>
  
</feed>
